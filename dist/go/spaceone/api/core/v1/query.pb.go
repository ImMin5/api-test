// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: spaceone/api/core/v1/query.proto

package v1

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeSeriesAnalyzeQuery_Granularity int32

const (
	TimeSeriesAnalyzeQuery_GRANULARITY_NONE TimeSeriesAnalyzeQuery_Granularity = 0
	TimeSeriesAnalyzeQuery_DAILY            TimeSeriesAnalyzeQuery_Granularity = 1
	TimeSeriesAnalyzeQuery_MONTHLY          TimeSeriesAnalyzeQuery_Granularity = 2
	TimeSeriesAnalyzeQuery_ACCUMULATED      TimeSeriesAnalyzeQuery_Granularity = 3
)

// Enum value maps for TimeSeriesAnalyzeQuery_Granularity.
var (
	TimeSeriesAnalyzeQuery_Granularity_name = map[int32]string{
		0: "GRANULARITY_NONE",
		1: "DAILY",
		2: "MONTHLY",
		3: "ACCUMULATED",
	}
	TimeSeriesAnalyzeQuery_Granularity_value = map[string]int32{
		"GRANULARITY_NONE": 0,
		"DAILY":            1,
		"MONTHLY":          2,
		"ACCUMULATED":      3,
	}
)

func (x TimeSeriesAnalyzeQuery_Granularity) Enum() *TimeSeriesAnalyzeQuery_Granularity {
	p := new(TimeSeriesAnalyzeQuery_Granularity)
	*p = x
	return p
}

func (x TimeSeriesAnalyzeQuery_Granularity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeSeriesAnalyzeQuery_Granularity) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_core_v1_query_proto_enumTypes[0].Descriptor()
}

func (TimeSeriesAnalyzeQuery_Granularity) Type() protoreflect.EnumType {
	return &file_spaceone_api_core_v1_query_proto_enumTypes[0]
}

func (x TimeSeriesAnalyzeQuery_Granularity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeSeriesAnalyzeQuery_Granularity.Descriptor instead.
func (TimeSeriesAnalyzeQuery_Granularity) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{17, 0}
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to KeyAlias:
	//
	//	*Filter_Key
	//	*Filter_K
	KeyAlias isFilter_KeyAlias `protobuf_oneof:"key_alias"`
	// Types that are assignable to ValueAlias:
	//
	//	*Filter_Value
	//	*Filter_V
	ValueAlias isFilter_ValueAlias `protobuf_oneof:"value_alias"`
	// Types that are assignable to OperatorAlias:
	//
	//	*Filter_Operator
	//	*Filter_O
	OperatorAlias isFilter_OperatorAlias `protobuf_oneof:"operator_alias"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{0}
}

func (m *Filter) GetKeyAlias() isFilter_KeyAlias {
	if m != nil {
		return m.KeyAlias
	}
	return nil
}

func (x *Filter) GetKey() string {
	if x, ok := x.GetKeyAlias().(*Filter_Key); ok {
		return x.Key
	}
	return ""
}

func (x *Filter) GetK() string {
	if x, ok := x.GetKeyAlias().(*Filter_K); ok {
		return x.K
	}
	return ""
}

func (m *Filter) GetValueAlias() isFilter_ValueAlias {
	if m != nil {
		return m.ValueAlias
	}
	return nil
}

func (x *Filter) GetValue() *_struct.Value {
	if x, ok := x.GetValueAlias().(*Filter_Value); ok {
		return x.Value
	}
	return nil
}

func (x *Filter) GetV() *_struct.Value {
	if x, ok := x.GetValueAlias().(*Filter_V); ok {
		return x.V
	}
	return nil
}

func (m *Filter) GetOperatorAlias() isFilter_OperatorAlias {
	if m != nil {
		return m.OperatorAlias
	}
	return nil
}

func (x *Filter) GetOperator() string {
	if x, ok := x.GetOperatorAlias().(*Filter_Operator); ok {
		return x.Operator
	}
	return ""
}

func (x *Filter) GetO() string {
	if x, ok := x.GetOperatorAlias().(*Filter_O); ok {
		return x.O
	}
	return ""
}

type isFilter_KeyAlias interface {
	isFilter_KeyAlias()
}

type Filter_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type Filter_K struct {
	K string `protobuf:"bytes,2,opt,name=k,proto3,oneof"`
}

func (*Filter_Key) isFilter_KeyAlias() {}

func (*Filter_K) isFilter_KeyAlias() {}

type isFilter_ValueAlias interface {
	isFilter_ValueAlias()
}

type Filter_Value struct {
	Value *_struct.Value `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

type Filter_V struct {
	V *_struct.Value `protobuf:"bytes,4,opt,name=v,proto3,oneof"`
}

func (*Filter_Value) isFilter_ValueAlias() {}

func (*Filter_V) isFilter_ValueAlias() {}

type isFilter_OperatorAlias interface {
	isFilter_OperatorAlias()
}

type Filter_Operator struct {
	Operator string `protobuf:"bytes,5,opt,name=operator,proto3,oneof"`
}

type Filter_O struct {
	O string `protobuf:"bytes,6,opt,name=o,proto3,oneof"`
}

func (*Filter_Operator) isFilter_OperatorAlias() {}

func (*Filter_O) isFilter_OperatorAlias() {}

type SortKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Desc bool   `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *SortKey) Reset() {
	*x = SortKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortKey) ProtoMessage() {}

func (x *SortKey) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortKey.ProtoReflect.Descriptor instead.
func (*SortKey) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *SortKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SortKey) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Desc bool       `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Keys []*SortKey `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{2}
}

func (x *Sort) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Sort) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

func (x *Sort) GetKeys() []*SortKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{3}
}

func (x *Page) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Page) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    []*Filter `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	FilterOr  []*Filter `protobuf:"bytes,2,rep,name=filter_or,json=filterOr,proto3" json:"filter_or,omitempty"`
	Sort      *Sort     `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Page      *Page     `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
	Minimal   bool      `protobuf:"varint,5,opt,name=minimal,proto3" json:"minimal,omitempty"`
	CountOnly bool      `protobuf:"varint,6,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"`
	Only      []string  `protobuf:"bytes,7,rep,name=only,proto3" json:"only,omitempty"`
	Keyword   string    `protobuf:"bytes,8,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{4}
}

func (x *Query) GetFilter() []*Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Query) GetFilterOr() []*Filter {
	if x != nil {
		return x.FilterOr
	}
	return nil
}

func (x *Query) GetSort() *Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *Query) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *Query) GetMinimal() bool {
	if x != nil {
		return x.Minimal
	}
	return false
}

func (x *Query) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

func (x *Query) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

func (x *Query) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type AggregateGroupKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to KeyAlias:
	//
	//	*AggregateGroupKey_Key
	//	*AggregateGroupKey_K
	KeyAlias isAggregateGroupKey_KeyAlias `protobuf_oneof:"key_alias"`
	// Types that are assignable to NameAlias:
	//
	//	*AggregateGroupKey_Name
	//	*AggregateGroupKey_N
	NameAlias  isAggregateGroupKey_NameAlias `protobuf_oneof:"name_alias"`
	DateFormat string                        `protobuf:"bytes,5,opt,name=date_format,json=dateFormat,proto3" json:"date_format,omitempty"`
}

func (x *AggregateGroupKey) Reset() {
	*x = AggregateGroupKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateGroupKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateGroupKey) ProtoMessage() {}

func (x *AggregateGroupKey) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateGroupKey.ProtoReflect.Descriptor instead.
func (*AggregateGroupKey) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{5}
}

func (m *AggregateGroupKey) GetKeyAlias() isAggregateGroupKey_KeyAlias {
	if m != nil {
		return m.KeyAlias
	}
	return nil
}

func (x *AggregateGroupKey) GetKey() string {
	if x, ok := x.GetKeyAlias().(*AggregateGroupKey_Key); ok {
		return x.Key
	}
	return ""
}

func (x *AggregateGroupKey) GetK() string {
	if x, ok := x.GetKeyAlias().(*AggregateGroupKey_K); ok {
		return x.K
	}
	return ""
}

func (m *AggregateGroupKey) GetNameAlias() isAggregateGroupKey_NameAlias {
	if m != nil {
		return m.NameAlias
	}
	return nil
}

func (x *AggregateGroupKey) GetName() string {
	if x, ok := x.GetNameAlias().(*AggregateGroupKey_Name); ok {
		return x.Name
	}
	return ""
}

func (x *AggregateGroupKey) GetN() string {
	if x, ok := x.GetNameAlias().(*AggregateGroupKey_N); ok {
		return x.N
	}
	return ""
}

func (x *AggregateGroupKey) GetDateFormat() string {
	if x != nil {
		return x.DateFormat
	}
	return ""
}

type isAggregateGroupKey_KeyAlias interface {
	isAggregateGroupKey_KeyAlias()
}

type AggregateGroupKey_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type AggregateGroupKey_K struct {
	K string `protobuf:"bytes,2,opt,name=k,proto3,oneof"`
}

func (*AggregateGroupKey_Key) isAggregateGroupKey_KeyAlias() {}

func (*AggregateGroupKey_K) isAggregateGroupKey_KeyAlias() {}

type isAggregateGroupKey_NameAlias interface {
	isAggregateGroupKey_NameAlias()
}

type AggregateGroupKey_Name struct {
	Name string `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

type AggregateGroupKey_N struct {
	N string `protobuf:"bytes,4,opt,name=n,proto3,oneof"`
}

func (*AggregateGroupKey_Name) isAggregateGroupKey_NameAlias() {}

func (*AggregateGroupKey_N) isAggregateGroupKey_NameAlias() {}

type AggregateGroupSubField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to KeyAlias:
	//
	//	*AggregateGroupSubField_Key
	//	*AggregateGroupSubField_K
	KeyAlias isAggregateGroupSubField_KeyAlias `protobuf_oneof:"key_alias"`
	// Types that are assignable to NameAlias:
	//
	//	*AggregateGroupSubField_Name
	//	*AggregateGroupSubField_N
	NameAlias isAggregateGroupSubField_NameAlias `protobuf_oneof:"name_alias"`
}

func (x *AggregateGroupSubField) Reset() {
	*x = AggregateGroupSubField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateGroupSubField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateGroupSubField) ProtoMessage() {}

func (x *AggregateGroupSubField) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateGroupSubField.ProtoReflect.Descriptor instead.
func (*AggregateGroupSubField) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{6}
}

func (m *AggregateGroupSubField) GetKeyAlias() isAggregateGroupSubField_KeyAlias {
	if m != nil {
		return m.KeyAlias
	}
	return nil
}

func (x *AggregateGroupSubField) GetKey() string {
	if x, ok := x.GetKeyAlias().(*AggregateGroupSubField_Key); ok {
		return x.Key
	}
	return ""
}

func (x *AggregateGroupSubField) GetK() string {
	if x, ok := x.GetKeyAlias().(*AggregateGroupSubField_K); ok {
		return x.K
	}
	return ""
}

func (m *AggregateGroupSubField) GetNameAlias() isAggregateGroupSubField_NameAlias {
	if m != nil {
		return m.NameAlias
	}
	return nil
}

func (x *AggregateGroupSubField) GetName() string {
	if x, ok := x.GetNameAlias().(*AggregateGroupSubField_Name); ok {
		return x.Name
	}
	return ""
}

func (x *AggregateGroupSubField) GetN() string {
	if x, ok := x.GetNameAlias().(*AggregateGroupSubField_N); ok {
		return x.N
	}
	return ""
}

type isAggregateGroupSubField_KeyAlias interface {
	isAggregateGroupSubField_KeyAlias()
}

type AggregateGroupSubField_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type AggregateGroupSubField_K struct {
	K string `protobuf:"bytes,2,opt,name=k,proto3,oneof"`
}

func (*AggregateGroupSubField_Key) isAggregateGroupSubField_KeyAlias() {}

func (*AggregateGroupSubField_K) isAggregateGroupSubField_KeyAlias() {}

type isAggregateGroupSubField_NameAlias interface {
	isAggregateGroupSubField_NameAlias()
}

type AggregateGroupSubField_Name struct {
	Name string `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

type AggregateGroupSubField_N struct {
	N string `protobuf:"bytes,4,opt,name=n,proto3,oneof"`
}

func (*AggregateGroupSubField_Name) isAggregateGroupSubField_NameAlias() {}

func (*AggregateGroupSubField_N) isAggregateGroupSubField_NameAlias() {}

type AggregateSubCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to KeyAlias:
	//
	//	*AggregateSubCondition_Key
	//	*AggregateSubCondition_K
	KeyAlias isAggregateSubCondition_KeyAlias `protobuf_oneof:"key_alias"`
	// Types that are assignable to ValueAlias:
	//
	//	*AggregateSubCondition_Value
	//	*AggregateSubCondition_V
	ValueAlias isAggregateSubCondition_ValueAlias `protobuf_oneof:"value_alias"`
	// Types that are assignable to OperatorAlias:
	//
	//	*AggregateSubCondition_Operator
	//	*AggregateSubCondition_O
	OperatorAlias isAggregateSubCondition_OperatorAlias `protobuf_oneof:"operator_alias"`
}

func (x *AggregateSubCondition) Reset() {
	*x = AggregateSubCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateSubCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateSubCondition) ProtoMessage() {}

func (x *AggregateSubCondition) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateSubCondition.ProtoReflect.Descriptor instead.
func (*AggregateSubCondition) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{7}
}

func (m *AggregateSubCondition) GetKeyAlias() isAggregateSubCondition_KeyAlias {
	if m != nil {
		return m.KeyAlias
	}
	return nil
}

func (x *AggregateSubCondition) GetKey() string {
	if x, ok := x.GetKeyAlias().(*AggregateSubCondition_Key); ok {
		return x.Key
	}
	return ""
}

func (x *AggregateSubCondition) GetK() string {
	if x, ok := x.GetKeyAlias().(*AggregateSubCondition_K); ok {
		return x.K
	}
	return ""
}

func (m *AggregateSubCondition) GetValueAlias() isAggregateSubCondition_ValueAlias {
	if m != nil {
		return m.ValueAlias
	}
	return nil
}

func (x *AggregateSubCondition) GetValue() *_struct.Value {
	if x, ok := x.GetValueAlias().(*AggregateSubCondition_Value); ok {
		return x.Value
	}
	return nil
}

func (x *AggregateSubCondition) GetV() *_struct.Value {
	if x, ok := x.GetValueAlias().(*AggregateSubCondition_V); ok {
		return x.V
	}
	return nil
}

func (m *AggregateSubCondition) GetOperatorAlias() isAggregateSubCondition_OperatorAlias {
	if m != nil {
		return m.OperatorAlias
	}
	return nil
}

func (x *AggregateSubCondition) GetOperator() string {
	if x, ok := x.GetOperatorAlias().(*AggregateSubCondition_Operator); ok {
		return x.Operator
	}
	return ""
}

func (x *AggregateSubCondition) GetO() string {
	if x, ok := x.GetOperatorAlias().(*AggregateSubCondition_O); ok {
		return x.O
	}
	return ""
}

type isAggregateSubCondition_KeyAlias interface {
	isAggregateSubCondition_KeyAlias()
}

type AggregateSubCondition_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type AggregateSubCondition_K struct {
	K string `protobuf:"bytes,2,opt,name=k,proto3,oneof"`
}

func (*AggregateSubCondition_Key) isAggregateSubCondition_KeyAlias() {}

func (*AggregateSubCondition_K) isAggregateSubCondition_KeyAlias() {}

type isAggregateSubCondition_ValueAlias interface {
	isAggregateSubCondition_ValueAlias()
}

type AggregateSubCondition_Value struct {
	Value *_struct.Value `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

type AggregateSubCondition_V struct {
	V *_struct.Value `protobuf:"bytes,4,opt,name=v,proto3,oneof"`
}

func (*AggregateSubCondition_Value) isAggregateSubCondition_ValueAlias() {}

func (*AggregateSubCondition_V) isAggregateSubCondition_ValueAlias() {}

type isAggregateSubCondition_OperatorAlias interface {
	isAggregateSubCondition_OperatorAlias()
}

type AggregateSubCondition_Operator struct {
	Operator string `protobuf:"bytes,5,opt,name=operator,proto3,oneof"`
}

type AggregateSubCondition_O struct {
	O string `protobuf:"bytes,6,opt,name=o,proto3,oneof"`
}

func (*AggregateSubCondition_Operator) isAggregateSubCondition_OperatorAlias() {}

func (*AggregateSubCondition_O) isAggregateSubCondition_OperatorAlias() {}

type AggregateGroupField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to KeyAlias:
	//
	//	*AggregateGroupField_Key
	//	*AggregateGroupField_K
	KeyAlias isAggregateGroupField_KeyAlias `protobuf_oneof:"key_alias"`
	// Types that are assignable to NameAlias:
	//
	//	*AggregateGroupField_Name
	//	*AggregateGroupField_N
	NameAlias isAggregateGroupField_NameAlias `protobuf_oneof:"name_alias"`
	// Types that are assignable to OperatorAlias:
	//
	//	*AggregateGroupField_Operator
	//	*AggregateGroupField_O
	OperatorAlias isAggregateGroupField_OperatorAlias `protobuf_oneof:"operator_alias"`
	Fields        []*AggregateGroupSubField           `protobuf:"bytes,7,rep,name=fields,proto3" json:"fields,omitempty"`
	Conditions    []*AggregateSubCondition            `protobuf:"bytes,8,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *AggregateGroupField) Reset() {
	*x = AggregateGroupField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateGroupField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateGroupField) ProtoMessage() {}

func (x *AggregateGroupField) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateGroupField.ProtoReflect.Descriptor instead.
func (*AggregateGroupField) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{8}
}

func (m *AggregateGroupField) GetKeyAlias() isAggregateGroupField_KeyAlias {
	if m != nil {
		return m.KeyAlias
	}
	return nil
}

func (x *AggregateGroupField) GetKey() string {
	if x, ok := x.GetKeyAlias().(*AggregateGroupField_Key); ok {
		return x.Key
	}
	return ""
}

func (x *AggregateGroupField) GetK() string {
	if x, ok := x.GetKeyAlias().(*AggregateGroupField_K); ok {
		return x.K
	}
	return ""
}

func (m *AggregateGroupField) GetNameAlias() isAggregateGroupField_NameAlias {
	if m != nil {
		return m.NameAlias
	}
	return nil
}

func (x *AggregateGroupField) GetName() string {
	if x, ok := x.GetNameAlias().(*AggregateGroupField_Name); ok {
		return x.Name
	}
	return ""
}

func (x *AggregateGroupField) GetN() string {
	if x, ok := x.GetNameAlias().(*AggregateGroupField_N); ok {
		return x.N
	}
	return ""
}

func (m *AggregateGroupField) GetOperatorAlias() isAggregateGroupField_OperatorAlias {
	if m != nil {
		return m.OperatorAlias
	}
	return nil
}

func (x *AggregateGroupField) GetOperator() string {
	if x, ok := x.GetOperatorAlias().(*AggregateGroupField_Operator); ok {
		return x.Operator
	}
	return ""
}

func (x *AggregateGroupField) GetO() string {
	if x, ok := x.GetOperatorAlias().(*AggregateGroupField_O); ok {
		return x.O
	}
	return ""
}

func (x *AggregateGroupField) GetFields() []*AggregateGroupSubField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *AggregateGroupField) GetConditions() []*AggregateSubCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type isAggregateGroupField_KeyAlias interface {
	isAggregateGroupField_KeyAlias()
}

type AggregateGroupField_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type AggregateGroupField_K struct {
	K string `protobuf:"bytes,2,opt,name=k,proto3,oneof"`
}

func (*AggregateGroupField_Key) isAggregateGroupField_KeyAlias() {}

func (*AggregateGroupField_K) isAggregateGroupField_KeyAlias() {}

type isAggregateGroupField_NameAlias interface {
	isAggregateGroupField_NameAlias()
}

type AggregateGroupField_Name struct {
	Name string `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

type AggregateGroupField_N struct {
	N string `protobuf:"bytes,4,opt,name=n,proto3,oneof"`
}

func (*AggregateGroupField_Name) isAggregateGroupField_NameAlias() {}

func (*AggregateGroupField_N) isAggregateGroupField_NameAlias() {}

type isAggregateGroupField_OperatorAlias interface {
	isAggregateGroupField_OperatorAlias()
}

type AggregateGroupField_Operator struct {
	Operator string `protobuf:"bytes,5,opt,name=operator,proto3,oneof"`
}

type AggregateGroupField_O struct {
	O string `protobuf:"bytes,6,opt,name=o,proto3,oneof"`
}

func (*AggregateGroupField_Operator) isAggregateGroupField_OperatorAlias() {}

func (*AggregateGroupField_O) isAggregateGroupField_OperatorAlias() {}

type AggregateGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys   []*AggregateGroupKey   `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Fields []*AggregateGroupField `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *AggregateGroup) Reset() {
	*x = AggregateGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateGroup) ProtoMessage() {}

func (x *AggregateGroup) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateGroup.ProtoReflect.Descriptor instead.
func (*AggregateGroup) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{9}
}

func (x *AggregateGroup) GetKeys() []*AggregateGroupKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *AggregateGroup) GetFields() []*AggregateGroupField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type AggregateProjectField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to KeyAlias:
	//
	//	*AggregateProjectField_Key
	//	*AggregateProjectField_K
	KeyAlias isAggregateProjectField_KeyAlias `protobuf_oneof:"key_alias"`
	// Types that are assignable to NameAlias:
	//
	//	*AggregateProjectField_Name
	//	*AggregateProjectField_N
	NameAlias isAggregateProjectField_NameAlias `protobuf_oneof:"name_alias"`
	// Types that are assignable to OperatorAlias:
	//
	//	*AggregateProjectField_Operator
	//	*AggregateProjectField_O
	OperatorAlias isAggregateProjectField_OperatorAlias `protobuf_oneof:"operator_alias"`
}

func (x *AggregateProjectField) Reset() {
	*x = AggregateProjectField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateProjectField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateProjectField) ProtoMessage() {}

func (x *AggregateProjectField) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateProjectField.ProtoReflect.Descriptor instead.
func (*AggregateProjectField) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{10}
}

func (m *AggregateProjectField) GetKeyAlias() isAggregateProjectField_KeyAlias {
	if m != nil {
		return m.KeyAlias
	}
	return nil
}

func (x *AggregateProjectField) GetKey() string {
	if x, ok := x.GetKeyAlias().(*AggregateProjectField_Key); ok {
		return x.Key
	}
	return ""
}

func (x *AggregateProjectField) GetK() string {
	if x, ok := x.GetKeyAlias().(*AggregateProjectField_K); ok {
		return x.K
	}
	return ""
}

func (m *AggregateProjectField) GetNameAlias() isAggregateProjectField_NameAlias {
	if m != nil {
		return m.NameAlias
	}
	return nil
}

func (x *AggregateProjectField) GetName() string {
	if x, ok := x.GetNameAlias().(*AggregateProjectField_Name); ok {
		return x.Name
	}
	return ""
}

func (x *AggregateProjectField) GetN() string {
	if x, ok := x.GetNameAlias().(*AggregateProjectField_N); ok {
		return x.N
	}
	return ""
}

func (m *AggregateProjectField) GetOperatorAlias() isAggregateProjectField_OperatorAlias {
	if m != nil {
		return m.OperatorAlias
	}
	return nil
}

func (x *AggregateProjectField) GetOperator() string {
	if x, ok := x.GetOperatorAlias().(*AggregateProjectField_Operator); ok {
		return x.Operator
	}
	return ""
}

func (x *AggregateProjectField) GetO() string {
	if x, ok := x.GetOperatorAlias().(*AggregateProjectField_O); ok {
		return x.O
	}
	return ""
}

type isAggregateProjectField_KeyAlias interface {
	isAggregateProjectField_KeyAlias()
}

type AggregateProjectField_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type AggregateProjectField_K struct {
	K string `protobuf:"bytes,2,opt,name=k,proto3,oneof"`
}

func (*AggregateProjectField_Key) isAggregateProjectField_KeyAlias() {}

func (*AggregateProjectField_K) isAggregateProjectField_KeyAlias() {}

type isAggregateProjectField_NameAlias interface {
	isAggregateProjectField_NameAlias()
}

type AggregateProjectField_Name struct {
	Name string `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

type AggregateProjectField_N struct {
	N string `protobuf:"bytes,4,opt,name=n,proto3,oneof"`
}

func (*AggregateProjectField_Name) isAggregateProjectField_NameAlias() {}

func (*AggregateProjectField_N) isAggregateProjectField_NameAlias() {}

type isAggregateProjectField_OperatorAlias interface {
	isAggregateProjectField_OperatorAlias()
}

type AggregateProjectField_Operator struct {
	Operator string `protobuf:"bytes,5,opt,name=operator,proto3,oneof"`
}

type AggregateProjectField_O struct {
	O string `protobuf:"bytes,6,opt,name=o,proto3,oneof"`
}

func (*AggregateProjectField_Operator) isAggregateProjectField_OperatorAlias() {}

func (*AggregateProjectField_O) isAggregateProjectField_OperatorAlias() {}

type AggregateProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields      []*AggregateProjectField `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	ExcludeKeys bool                     `protobuf:"varint,2,opt,name=exclude_keys,json=excludeKeys,proto3" json:"exclude_keys,omitempty"`
}

func (x *AggregateProject) Reset() {
	*x = AggregateProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateProject) ProtoMessage() {}

func (x *AggregateProject) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateProject.ProtoReflect.Descriptor instead.
func (*AggregateProject) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{11}
}

func (x *AggregateProject) GetFields() []*AggregateProjectField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *AggregateProject) GetExcludeKeys() bool {
	if x != nil {
		return x.ExcludeKeys
	}
	return false
}

type AggregateUnwind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *AggregateUnwind) Reset() {
	*x = AggregateUnwind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateUnwind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateUnwind) ProtoMessage() {}

func (x *AggregateUnwind) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateUnwind.ProtoReflect.Descriptor instead.
func (*AggregateUnwind) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{12}
}

func (x *AggregateUnwind) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type AggregateCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AggregateCount) Reset() {
	*x = AggregateCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateCount) ProtoMessage() {}

func (x *AggregateCount) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateCount.ProtoReflect.Descriptor instead.
func (*AggregateCount) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{13}
}

func (x *AggregateCount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AggregateSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Desc bool       `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Keys []*SortKey `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *AggregateSort) Reset() {
	*x = AggregateSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateSort) ProtoMessage() {}

func (x *AggregateSort) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateSort.ProtoReflect.Descriptor instead.
func (*AggregateSort) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{14}
}

func (x *AggregateSort) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AggregateSort) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

func (x *AggregateSort) GetKeys() []*SortKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type StatisticsAggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to AggregateAlias:
	//
	//	*StatisticsAggregate_Unwind
	//	*StatisticsAggregate_Group
	//	*StatisticsAggregate_Count
	//	*StatisticsAggregate_Sort
	//	*StatisticsAggregate_Project
	//	*StatisticsAggregate_Limit
	//	*StatisticsAggregate_Skip
	AggregateAlias isStatisticsAggregate_AggregateAlias `protobuf_oneof:"aggregate_alias"`
}

func (x *StatisticsAggregate) Reset() {
	*x = StatisticsAggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsAggregate) ProtoMessage() {}

func (x *StatisticsAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsAggregate.ProtoReflect.Descriptor instead.
func (*StatisticsAggregate) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{15}
}

func (m *StatisticsAggregate) GetAggregateAlias() isStatisticsAggregate_AggregateAlias {
	if m != nil {
		return m.AggregateAlias
	}
	return nil
}

func (x *StatisticsAggregate) GetUnwind() *AggregateUnwind {
	if x, ok := x.GetAggregateAlias().(*StatisticsAggregate_Unwind); ok {
		return x.Unwind
	}
	return nil
}

func (x *StatisticsAggregate) GetGroup() *AggregateGroup {
	if x, ok := x.GetAggregateAlias().(*StatisticsAggregate_Group); ok {
		return x.Group
	}
	return nil
}

func (x *StatisticsAggregate) GetCount() *AggregateCount {
	if x, ok := x.GetAggregateAlias().(*StatisticsAggregate_Count); ok {
		return x.Count
	}
	return nil
}

func (x *StatisticsAggregate) GetSort() *AggregateSort {
	if x, ok := x.GetAggregateAlias().(*StatisticsAggregate_Sort); ok {
		return x.Sort
	}
	return nil
}

func (x *StatisticsAggregate) GetProject() *AggregateProject {
	if x, ok := x.GetAggregateAlias().(*StatisticsAggregate_Project); ok {
		return x.Project
	}
	return nil
}

func (x *StatisticsAggregate) GetLimit() int32 {
	if x, ok := x.GetAggregateAlias().(*StatisticsAggregate_Limit); ok {
		return x.Limit
	}
	return 0
}

func (x *StatisticsAggregate) GetSkip() int32 {
	if x, ok := x.GetAggregateAlias().(*StatisticsAggregate_Skip); ok {
		return x.Skip
	}
	return 0
}

type isStatisticsAggregate_AggregateAlias interface {
	isStatisticsAggregate_AggregateAlias()
}

type StatisticsAggregate_Unwind struct {
	Unwind *AggregateUnwind `protobuf:"bytes,1,opt,name=unwind,proto3,oneof"`
}

type StatisticsAggregate_Group struct {
	Group *AggregateGroup `protobuf:"bytes,2,opt,name=group,proto3,oneof"`
}

type StatisticsAggregate_Count struct {
	Count *AggregateCount `protobuf:"bytes,3,opt,name=count,proto3,oneof"`
}

type StatisticsAggregate_Sort struct {
	Sort *AggregateSort `protobuf:"bytes,4,opt,name=sort,proto3,oneof"`
}

type StatisticsAggregate_Project struct {
	Project *AggregateProject `protobuf:"bytes,5,opt,name=project,proto3,oneof"`
}

type StatisticsAggregate_Limit struct {
	Limit int32 `protobuf:"varint,6,opt,name=limit,proto3,oneof"`
}

type StatisticsAggregate_Skip struct {
	Skip int32 `protobuf:"varint,7,opt,name=skip,proto3,oneof"`
}

func (*StatisticsAggregate_Unwind) isStatisticsAggregate_AggregateAlias() {}

func (*StatisticsAggregate_Group) isStatisticsAggregate_AggregateAlias() {}

func (*StatisticsAggregate_Count) isStatisticsAggregate_AggregateAlias() {}

func (*StatisticsAggregate_Sort) isStatisticsAggregate_AggregateAlias() {}

func (*StatisticsAggregate_Project) isStatisticsAggregate_AggregateAlias() {}

func (*StatisticsAggregate_Limit) isStatisticsAggregate_AggregateAlias() {}

func (*StatisticsAggregate_Skip) isStatisticsAggregate_AggregateAlias() {}

type StatisticsQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    []*Filter              `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	FilterOr  []*Filter              `protobuf:"bytes,2,rep,name=filter_or,json=filterOr,proto3" json:"filter_or,omitempty"`
	Aggregate []*StatisticsAggregate `protobuf:"bytes,3,rep,name=aggregate,proto3" json:"aggregate,omitempty"`
	Page      *Page                  `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
	Distinct  string                 `protobuf:"bytes,5,opt,name=distinct,proto3" json:"distinct,omitempty"`
	Keyword   string                 `protobuf:"bytes,6,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *StatisticsQuery) Reset() {
	*x = StatisticsQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsQuery) ProtoMessage() {}

func (x *StatisticsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsQuery.ProtoReflect.Descriptor instead.
func (*StatisticsQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{16}
}

func (x *StatisticsQuery) GetFilter() []*Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *StatisticsQuery) GetFilterOr() []*Filter {
	if x != nil {
		return x.FilterOr
	}
	return nil
}

func (x *StatisticsQuery) GetAggregate() []*StatisticsAggregate {
	if x != nil {
		return x.Aggregate
	}
	return nil
}

func (x *StatisticsQuery) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *StatisticsQuery) GetDistinct() string {
	if x != nil {
		return x.Distinct
	}
	return ""
}

func (x *StatisticsQuery) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type TimeSeriesAnalyzeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Granularity TimeSeriesAnalyzeQuery_Granularity `protobuf:"varint,1,opt,name=granularity,proto3,enum=spaceone.api.core.v1.TimeSeriesAnalyzeQuery_Granularity" json:"granularity,omitempty"`
	Start       string                             `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End         string                             `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	GroupBy     []string                           `protobuf:"bytes,4,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	FieldGroup  []string                           `protobuf:"bytes,5,rep,name=field_group,json=fieldGroup,proto3" json:"field_group,omitempty"`
	Filter      []*Filter                          `protobuf:"bytes,6,rep,name=filter,proto3" json:"filter,omitempty"`
	FilterOr    []*Filter                          `protobuf:"bytes,7,rep,name=filter_or,json=filterOr,proto3" json:"filter_or,omitempty"`
	Page        *Page                              `protobuf:"bytes,8,opt,name=page,proto3" json:"page,omitempty"`
	Sort        []*SortKey                         `protobuf:"bytes,9,rep,name=sort,proto3" json:"sort,omitempty"`
	Fields      *_struct.Struct                    `protobuf:"bytes,10,opt,name=fields,proto3" json:"fields,omitempty"`
	Select      *_struct.Struct                    `protobuf:"bytes,11,opt,name=select,proto3" json:"select,omitempty"`
	Keyword     string                             `protobuf:"bytes,12,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *TimeSeriesAnalyzeQuery) Reset() {
	*x = TimeSeriesAnalyzeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSeriesAnalyzeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeriesAnalyzeQuery) ProtoMessage() {}

func (x *TimeSeriesAnalyzeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeriesAnalyzeQuery.ProtoReflect.Descriptor instead.
func (*TimeSeriesAnalyzeQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{17}
}

func (x *TimeSeriesAnalyzeQuery) GetGranularity() TimeSeriesAnalyzeQuery_Granularity {
	if x != nil {
		return x.Granularity
	}
	return TimeSeriesAnalyzeQuery_GRANULARITY_NONE
}

func (x *TimeSeriesAnalyzeQuery) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *TimeSeriesAnalyzeQuery) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *TimeSeriesAnalyzeQuery) GetGroupBy() []string {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *TimeSeriesAnalyzeQuery) GetFieldGroup() []string {
	if x != nil {
		return x.FieldGroup
	}
	return nil
}

func (x *TimeSeriesAnalyzeQuery) GetFilter() []*Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *TimeSeriesAnalyzeQuery) GetFilterOr() []*Filter {
	if x != nil {
		return x.FilterOr
	}
	return nil
}

func (x *TimeSeriesAnalyzeQuery) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TimeSeriesAnalyzeQuery) GetSort() []*SortKey {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *TimeSeriesAnalyzeQuery) GetFields() *_struct.Struct {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *TimeSeriesAnalyzeQuery) GetSelect() *_struct.Struct {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *TimeSeriesAnalyzeQuery) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type AnalyzeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupBy    []string        `protobuf:"bytes,1,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	FieldGroup []string        `protobuf:"bytes,2,rep,name=field_group,json=fieldGroup,proto3" json:"field_group,omitempty"`
	Filter     []*Filter       `protobuf:"bytes,3,rep,name=filter,proto3" json:"filter,omitempty"`
	FilterOr   []*Filter       `protobuf:"bytes,4,rep,name=filter_or,json=filterOr,proto3" json:"filter_or,omitempty"`
	Page       *Page           `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
	Sort       []*SortKey      `protobuf:"bytes,6,rep,name=sort,proto3" json:"sort,omitempty"`
	Fields     *_struct.Struct `protobuf:"bytes,7,opt,name=fields,proto3" json:"fields,omitempty"`
	Select     *_struct.Struct `protobuf:"bytes,8,opt,name=select,proto3" json:"select,omitempty"`
	Keyword    string          `protobuf:"bytes,9,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *AnalyzeQuery) Reset() {
	*x = AnalyzeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_core_v1_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeQuery) ProtoMessage() {}

func (x *AnalyzeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_core_v1_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeQuery.ProtoReflect.Descriptor instead.
func (*AnalyzeQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_core_v1_query_proto_rawDescGZIP(), []int{18}
}

func (x *AnalyzeQuery) GetGroupBy() []string {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *AnalyzeQuery) GetFieldGroup() []string {
	if x != nil {
		return x.FieldGroup
	}
	return nil
}

func (x *AnalyzeQuery) GetFilter() []*Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *AnalyzeQuery) GetFilterOr() []*Filter {
	if x != nil {
		return x.FilterOr
	}
	return nil
}

func (x *AnalyzeQuery) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AnalyzeQuery) GetSort() []*SortKey {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *AnalyzeQuery) GetFields() *_struct.Struct {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *AnalyzeQuery) GetSelect() *_struct.Struct {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *AnalyzeQuery) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

var File_spaceone_api_core_v1_query_proto protoreflect.FileDescriptor

var file_spaceone_api_core_v1_query_proto_rawDesc = []byte{
	0x0a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x01, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x01, 0x6b, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x01, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x01, 0x52, 0x01, 0x76, 0x12, 0x1c, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x01, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x01, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x6b,
	0x65, 0x79, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x2f, 0x0a, 0x07, 0x53, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x5f, 0x0a, 0x04, 0x53, 0x6f,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x31, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x32, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0xbf, 0x02, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x39, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x01, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x6b, 0x12, 0x14, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x01, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x01,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42,
	0x0c, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x7d, 0x0a,
	0x16, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x75, 0x62, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x01, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x6b, 0x12, 0x14, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x01, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x01,
	0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x0c,
	0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0xef, 0x01, 0x0a,
	0x15, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x01, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x6b, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x01, 0x76, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x01, 0x52,
	0x01, 0x76, 0x12, 0x1c, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x0e, 0x0a, 0x01, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x01, 0x6f,
	0x42, 0x0b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x0d, 0x0a,
	0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x10, 0x0a, 0x0e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0xcd,
	0x02, 0x0a, 0x13, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x01, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x6b, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x01, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x01, 0x6e,
	0x12, 0x1c, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x01, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x01, 0x6f, 0x12, 0x44,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x62, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x0b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x0c,
	0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x10, 0x0a, 0x0e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x90,
	0x01, 0x0a, 0x0e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x41,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x22, 0xbc, 0x01, 0x0a, 0x15, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x0e, 0x0a, 0x01, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x6b, 0x12,
	0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x01, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x01, 0x6e, 0x12, 0x1c, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x01, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x01, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x42, 0x0c, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x10,
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x22, 0x7a, 0x0a, 0x10, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x43, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x25, 0x0a, 0x0f,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x77, 0x69, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x22, 0x24, 0x0a, 0x0e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x0d, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x31, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x22, 0x92, 0x03, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x75,
	0x6e, 0x77, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x77, 0x69,
	0x6e, 0x64, 0x48, 0x00, 0x52, 0x06, 0x75, 0x6e, 0x77, 0x69, 0x6e, 0x64, 0x12, 0x3c, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3c, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x04, 0x73, 0x6b, 0x69, 0x70, 0x42, 0x11, 0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0xb1, 0x02, 0x0a, 0x0f, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x39, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x12, 0x47, 0x0a,
	0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xf6, 0x04, 0x0a,
	0x16, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x5a, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x39, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4c, 0x0a, 0x0b, 0x47, 0x72, 0x61, 0x6e, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x52, 0x41, 0x4e, 0x55, 0x4c,
	0x41, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x44, 0x41, 0x49, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x54, 0x48,
	0x4c, 0x59, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x43, 0x55, 0x4d, 0x55, 0x4c, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x03, 0x22, 0x9a, 0x03, 0x0a, 0x0c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x62, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4f, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x42, 0x16, 0x5a, 0x14, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_spaceone_api_core_v1_query_proto_rawDescOnce sync.Once
	file_spaceone_api_core_v1_query_proto_rawDescData = file_spaceone_api_core_v1_query_proto_rawDesc
)

func file_spaceone_api_core_v1_query_proto_rawDescGZIP() []byte {
	file_spaceone_api_core_v1_query_proto_rawDescOnce.Do(func() {
		file_spaceone_api_core_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_core_v1_query_proto_rawDescData)
	})
	return file_spaceone_api_core_v1_query_proto_rawDescData
}

var file_spaceone_api_core_v1_query_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spaceone_api_core_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_spaceone_api_core_v1_query_proto_goTypes = []interface{}{
	(TimeSeriesAnalyzeQuery_Granularity)(0), // 0: spaceone.api.core.v1.TimeSeriesAnalyzeQuery.Granularity
	(*Filter)(nil),                          // 1: spaceone.api.core.v1.Filter
	(*SortKey)(nil),                         // 2: spaceone.api.core.v1.SortKey
	(*Sort)(nil),                            // 3: spaceone.api.core.v1.Sort
	(*Page)(nil),                            // 4: spaceone.api.core.v1.Page
	(*Query)(nil),                           // 5: spaceone.api.core.v1.Query
	(*AggregateGroupKey)(nil),               // 6: spaceone.api.core.v1.AggregateGroupKey
	(*AggregateGroupSubField)(nil),          // 7: spaceone.api.core.v1.AggregateGroupSubField
	(*AggregateSubCondition)(nil),           // 8: spaceone.api.core.v1.AggregateSubCondition
	(*AggregateGroupField)(nil),             // 9: spaceone.api.core.v1.AggregateGroupField
	(*AggregateGroup)(nil),                  // 10: spaceone.api.core.v1.AggregateGroup
	(*AggregateProjectField)(nil),           // 11: spaceone.api.core.v1.AggregateProjectField
	(*AggregateProject)(nil),                // 12: spaceone.api.core.v1.AggregateProject
	(*AggregateUnwind)(nil),                 // 13: spaceone.api.core.v1.AggregateUnwind
	(*AggregateCount)(nil),                  // 14: spaceone.api.core.v1.AggregateCount
	(*AggregateSort)(nil),                   // 15: spaceone.api.core.v1.AggregateSort
	(*StatisticsAggregate)(nil),             // 16: spaceone.api.core.v1.StatisticsAggregate
	(*StatisticsQuery)(nil),                 // 17: spaceone.api.core.v1.StatisticsQuery
	(*TimeSeriesAnalyzeQuery)(nil),          // 18: spaceone.api.core.v1.TimeSeriesAnalyzeQuery
	(*AnalyzeQuery)(nil),                    // 19: spaceone.api.core.v1.AnalyzeQuery
	(*_struct.Value)(nil),                   // 20: google.protobuf.Value
	(*_struct.Struct)(nil),                  // 21: google.protobuf.Struct
}
var file_spaceone_api_core_v1_query_proto_depIdxs = []int32{
	20, // 0: spaceone.api.core.v1.Filter.value:type_name -> google.protobuf.Value
	20, // 1: spaceone.api.core.v1.Filter.v:type_name -> google.protobuf.Value
	2,  // 2: spaceone.api.core.v1.Sort.keys:type_name -> spaceone.api.core.v1.SortKey
	1,  // 3: spaceone.api.core.v1.Query.filter:type_name -> spaceone.api.core.v1.Filter
	1,  // 4: spaceone.api.core.v1.Query.filter_or:type_name -> spaceone.api.core.v1.Filter
	3,  // 5: spaceone.api.core.v1.Query.sort:type_name -> spaceone.api.core.v1.Sort
	4,  // 6: spaceone.api.core.v1.Query.page:type_name -> spaceone.api.core.v1.Page
	20, // 7: spaceone.api.core.v1.AggregateSubCondition.value:type_name -> google.protobuf.Value
	20, // 8: spaceone.api.core.v1.AggregateSubCondition.v:type_name -> google.protobuf.Value
	7,  // 9: spaceone.api.core.v1.AggregateGroupField.fields:type_name -> spaceone.api.core.v1.AggregateGroupSubField
	8,  // 10: spaceone.api.core.v1.AggregateGroupField.conditions:type_name -> spaceone.api.core.v1.AggregateSubCondition
	6,  // 11: spaceone.api.core.v1.AggregateGroup.keys:type_name -> spaceone.api.core.v1.AggregateGroupKey
	9,  // 12: spaceone.api.core.v1.AggregateGroup.fields:type_name -> spaceone.api.core.v1.AggregateGroupField
	11, // 13: spaceone.api.core.v1.AggregateProject.fields:type_name -> spaceone.api.core.v1.AggregateProjectField
	2,  // 14: spaceone.api.core.v1.AggregateSort.keys:type_name -> spaceone.api.core.v1.SortKey
	13, // 15: spaceone.api.core.v1.StatisticsAggregate.unwind:type_name -> spaceone.api.core.v1.AggregateUnwind
	10, // 16: spaceone.api.core.v1.StatisticsAggregate.group:type_name -> spaceone.api.core.v1.AggregateGroup
	14, // 17: spaceone.api.core.v1.StatisticsAggregate.count:type_name -> spaceone.api.core.v1.AggregateCount
	15, // 18: spaceone.api.core.v1.StatisticsAggregate.sort:type_name -> spaceone.api.core.v1.AggregateSort
	12, // 19: spaceone.api.core.v1.StatisticsAggregate.project:type_name -> spaceone.api.core.v1.AggregateProject
	1,  // 20: spaceone.api.core.v1.StatisticsQuery.filter:type_name -> spaceone.api.core.v1.Filter
	1,  // 21: spaceone.api.core.v1.StatisticsQuery.filter_or:type_name -> spaceone.api.core.v1.Filter
	16, // 22: spaceone.api.core.v1.StatisticsQuery.aggregate:type_name -> spaceone.api.core.v1.StatisticsAggregate
	4,  // 23: spaceone.api.core.v1.StatisticsQuery.page:type_name -> spaceone.api.core.v1.Page
	0,  // 24: spaceone.api.core.v1.TimeSeriesAnalyzeQuery.granularity:type_name -> spaceone.api.core.v1.TimeSeriesAnalyzeQuery.Granularity
	1,  // 25: spaceone.api.core.v1.TimeSeriesAnalyzeQuery.filter:type_name -> spaceone.api.core.v1.Filter
	1,  // 26: spaceone.api.core.v1.TimeSeriesAnalyzeQuery.filter_or:type_name -> spaceone.api.core.v1.Filter
	4,  // 27: spaceone.api.core.v1.TimeSeriesAnalyzeQuery.page:type_name -> spaceone.api.core.v1.Page
	2,  // 28: spaceone.api.core.v1.TimeSeriesAnalyzeQuery.sort:type_name -> spaceone.api.core.v1.SortKey
	21, // 29: spaceone.api.core.v1.TimeSeriesAnalyzeQuery.fields:type_name -> google.protobuf.Struct
	21, // 30: spaceone.api.core.v1.TimeSeriesAnalyzeQuery.select:type_name -> google.protobuf.Struct
	1,  // 31: spaceone.api.core.v1.AnalyzeQuery.filter:type_name -> spaceone.api.core.v1.Filter
	1,  // 32: spaceone.api.core.v1.AnalyzeQuery.filter_or:type_name -> spaceone.api.core.v1.Filter
	4,  // 33: spaceone.api.core.v1.AnalyzeQuery.page:type_name -> spaceone.api.core.v1.Page
	2,  // 34: spaceone.api.core.v1.AnalyzeQuery.sort:type_name -> spaceone.api.core.v1.SortKey
	21, // 35: spaceone.api.core.v1.AnalyzeQuery.fields:type_name -> google.protobuf.Struct
	21, // 36: spaceone.api.core.v1.AnalyzeQuery.select:type_name -> google.protobuf.Struct
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_spaceone_api_core_v1_query_proto_init() }
func file_spaceone_api_core_v1_query_proto_init() {
	if File_spaceone_api_core_v1_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_core_v1_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateGroupKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateGroupSubField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateSubCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateGroupField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateProjectField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateUnwind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsAggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeriesAnalyzeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_core_v1_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_spaceone_api_core_v1_query_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Filter_Key)(nil),
		(*Filter_K)(nil),
		(*Filter_Value)(nil),
		(*Filter_V)(nil),
		(*Filter_Operator)(nil),
		(*Filter_O)(nil),
	}
	file_spaceone_api_core_v1_query_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*AggregateGroupKey_Key)(nil),
		(*AggregateGroupKey_K)(nil),
		(*AggregateGroupKey_Name)(nil),
		(*AggregateGroupKey_N)(nil),
	}
	file_spaceone_api_core_v1_query_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*AggregateGroupSubField_Key)(nil),
		(*AggregateGroupSubField_K)(nil),
		(*AggregateGroupSubField_Name)(nil),
		(*AggregateGroupSubField_N)(nil),
	}
	file_spaceone_api_core_v1_query_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*AggregateSubCondition_Key)(nil),
		(*AggregateSubCondition_K)(nil),
		(*AggregateSubCondition_Value)(nil),
		(*AggregateSubCondition_V)(nil),
		(*AggregateSubCondition_Operator)(nil),
		(*AggregateSubCondition_O)(nil),
	}
	file_spaceone_api_core_v1_query_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*AggregateGroupField_Key)(nil),
		(*AggregateGroupField_K)(nil),
		(*AggregateGroupField_Name)(nil),
		(*AggregateGroupField_N)(nil),
		(*AggregateGroupField_Operator)(nil),
		(*AggregateGroupField_O)(nil),
	}
	file_spaceone_api_core_v1_query_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*AggregateProjectField_Key)(nil),
		(*AggregateProjectField_K)(nil),
		(*AggregateProjectField_Name)(nil),
		(*AggregateProjectField_N)(nil),
		(*AggregateProjectField_Operator)(nil),
		(*AggregateProjectField_O)(nil),
	}
	file_spaceone_api_core_v1_query_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*StatisticsAggregate_Unwind)(nil),
		(*StatisticsAggregate_Group)(nil),
		(*StatisticsAggregate_Count)(nil),
		(*StatisticsAggregate_Sort)(nil),
		(*StatisticsAggregate_Project)(nil),
		(*StatisticsAggregate_Limit)(nil),
		(*StatisticsAggregate_Skip)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_core_v1_query_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spaceone_api_core_v1_query_proto_goTypes,
		DependencyIndexes: file_spaceone_api_core_v1_query_proto_depIdxs,
		EnumInfos:         file_spaceone_api_core_v1_query_proto_enumTypes,
		MessageInfos:      file_spaceone_api_core_v1_query_proto_msgTypes,
	}.Build()
	File_spaceone_api_core_v1_query_proto = out.File
	file_spaceone_api_core_v1_query_proto_rawDesc = nil
	file_spaceone_api_core_v1_query_proto_goTypes = nil
	file_spaceone_api_core_v1_query_proto_depIdxs = nil
}
