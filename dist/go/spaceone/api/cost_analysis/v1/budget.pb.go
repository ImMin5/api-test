// A Budget is a planned amount of cost expenditure for reduction and prediction of infrastructure costs.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: spaceone/api/cost_analysis/v1/budget.proto

package v1

import (
	v1 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v1"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BudgetNotification_Unit int32

const (
	BudgetNotification_UNIT_NONE   BudgetNotification_Unit = 0
	BudgetNotification_PERCENT     BudgetNotification_Unit = 1
	BudgetNotification_ACTUAL_COST BudgetNotification_Unit = 2
)

// Enum value maps for BudgetNotification_Unit.
var (
	BudgetNotification_Unit_name = map[int32]string{
		0: "UNIT_NONE",
		1: "PERCENT",
		2: "ACTUAL_COST",
	}
	BudgetNotification_Unit_value = map[string]int32{
		"UNIT_NONE":   0,
		"PERCENT":     1,
		"ACTUAL_COST": 2,
	}
)

func (x BudgetNotification_Unit) Enum() *BudgetNotification_Unit {
	p := new(BudgetNotification_Unit)
	*p = x
	return p
}

func (x BudgetNotification_Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BudgetNotification_Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes[0].Descriptor()
}

func (BudgetNotification_Unit) Type() protoreflect.EnumType {
	return &file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes[0]
}

func (x BudgetNotification_Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BudgetNotification_Unit.Descriptor instead.
func (BudgetNotification_Unit) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{1, 0}
}

type BudgetNotification_NotificationType int32

const (
	BudgetNotification_NOTIFICATION_TYPE_NONE BudgetNotification_NotificationType = 0
	BudgetNotification_CRITICAL               BudgetNotification_NotificationType = 1
	BudgetNotification_WARNING                BudgetNotification_NotificationType = 2
)

// Enum value maps for BudgetNotification_NotificationType.
var (
	BudgetNotification_NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_NONE",
		1: "CRITICAL",
		2: "WARNING",
	}
	BudgetNotification_NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_NONE": 0,
		"CRITICAL":               1,
		"WARNING":                2,
	}
)

func (x BudgetNotification_NotificationType) Enum() *BudgetNotification_NotificationType {
	p := new(BudgetNotification_NotificationType)
	*p = x
	return p
}

func (x BudgetNotification_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BudgetNotification_NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes[1].Descriptor()
}

func (BudgetNotification_NotificationType) Type() protoreflect.EnumType {
	return &file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes[1]
}

func (x BudgetNotification_NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BudgetNotification_NotificationType.Descriptor instead.
func (BudgetNotification_NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{1, 1}
}

type CreateBudgetRequest_TimeUnit int32

const (
	CreateBudgetRequest_NONE    CreateBudgetRequest_TimeUnit = 0
	CreateBudgetRequest_TOTAL   CreateBudgetRequest_TimeUnit = 1
	CreateBudgetRequest_MONTHLY CreateBudgetRequest_TimeUnit = 2
	CreateBudgetRequest_YEARLY  CreateBudgetRequest_TimeUnit = 3
)

// Enum value maps for CreateBudgetRequest_TimeUnit.
var (
	CreateBudgetRequest_TimeUnit_name = map[int32]string{
		0: "NONE",
		1: "TOTAL",
		2: "MONTHLY",
		3: "YEARLY",
	}
	CreateBudgetRequest_TimeUnit_value = map[string]int32{
		"NONE":    0,
		"TOTAL":   1,
		"MONTHLY": 2,
		"YEARLY":  3,
	}
)

func (x CreateBudgetRequest_TimeUnit) Enum() *CreateBudgetRequest_TimeUnit {
	p := new(CreateBudgetRequest_TimeUnit)
	*p = x
	return p
}

func (x CreateBudgetRequest_TimeUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateBudgetRequest_TimeUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes[2].Descriptor()
}

func (CreateBudgetRequest_TimeUnit) Type() protoreflect.EnumType {
	return &file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes[2]
}

func (x CreateBudgetRequest_TimeUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateBudgetRequest_TimeUnit.Descriptor instead.
func (CreateBudgetRequest_TimeUnit) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{2, 0}
}

type BudgetQuery_TimeUnit int32

const (
	BudgetQuery_NONE    BudgetQuery_TimeUnit = 0
	BudgetQuery_TOTAL   BudgetQuery_TimeUnit = 1
	BudgetQuery_MONTHLY BudgetQuery_TimeUnit = 2
	BudgetQuery_YEARLY  BudgetQuery_TimeUnit = 3
)

// Enum value maps for BudgetQuery_TimeUnit.
var (
	BudgetQuery_TimeUnit_name = map[int32]string{
		0: "NONE",
		1: "TOTAL",
		2: "MONTHLY",
		3: "YEARLY",
	}
	BudgetQuery_TimeUnit_value = map[string]int32{
		"NONE":    0,
		"TOTAL":   1,
		"MONTHLY": 2,
		"YEARLY":  3,
	}
)

func (x BudgetQuery_TimeUnit) Enum() *BudgetQuery_TimeUnit {
	p := new(BudgetQuery_TimeUnit)
	*p = x
	return p
}

func (x BudgetQuery_TimeUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BudgetQuery_TimeUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes[3].Descriptor()
}

func (BudgetQuery_TimeUnit) Type() protoreflect.EnumType {
	return &file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes[3]
}

func (x BudgetQuery_TimeUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BudgetQuery_TimeUnit.Descriptor instead.
func (BudgetQuery_TimeUnit) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{7, 0}
}

type BudgetInfo_TimeUnit int32

const (
	BudgetInfo_NONE    BudgetInfo_TimeUnit = 0
	BudgetInfo_TOTAL   BudgetInfo_TimeUnit = 1
	BudgetInfo_MONTHLY BudgetInfo_TimeUnit = 2
	BudgetInfo_YEARLY  BudgetInfo_TimeUnit = 3
)

// Enum value maps for BudgetInfo_TimeUnit.
var (
	BudgetInfo_TimeUnit_name = map[int32]string{
		0: "NONE",
		1: "TOTAL",
		2: "MONTHLY",
		3: "YEARLY",
	}
	BudgetInfo_TimeUnit_value = map[string]int32{
		"NONE":    0,
		"TOTAL":   1,
		"MONTHLY": 2,
		"YEARLY":  3,
	}
)

func (x BudgetInfo_TimeUnit) Enum() *BudgetInfo_TimeUnit {
	p := new(BudgetInfo_TimeUnit)
	*p = x
	return p
}

func (x BudgetInfo_TimeUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BudgetInfo_TimeUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes[4].Descriptor()
}

func (BudgetInfo_TimeUnit) Type() protoreflect.EnumType {
	return &file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes[4]
}

func (x BudgetInfo_TimeUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BudgetInfo_TimeUnit.Descriptor instead.
func (BudgetInfo_TimeUnit) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{8, 0}
}

type PlannedLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  string  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Limit float32 `protobuf:"fixed32,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *PlannedLimit) Reset() {
	*x = PlannedLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlannedLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedLimit) ProtoMessage() {}

func (x *PlannedLimit) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannedLimit.ProtoReflect.Descriptor instead.
func (*PlannedLimit) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{0}
}

func (x *PlannedLimit) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *PlannedLimit) GetLimit() float32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type BudgetNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threshold        float32                             `protobuf:"fixed32,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Unit             BudgetNotification_Unit             `protobuf:"varint,2,opt,name=unit,proto3,enum=spaceone.api.cost_analysis.v1.BudgetNotification_Unit" json:"unit,omitempty"`
	NotificationType BudgetNotification_NotificationType `protobuf:"varint,3,opt,name=notification_type,json=notificationType,proto3,enum=spaceone.api.cost_analysis.v1.BudgetNotification_NotificationType" json:"notification_type,omitempty"`
}

func (x *BudgetNotification) Reset() {
	*x = BudgetNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BudgetNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BudgetNotification) ProtoMessage() {}

func (x *BudgetNotification) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BudgetNotification.ProtoReflect.Descriptor instead.
func (*BudgetNotification) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{1}
}

func (x *BudgetNotification) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *BudgetNotification) GetUnit() BudgetNotification_Unit {
	if x != nil {
		return x.Unit
	}
	return BudgetNotification_UNIT_NONE
}

func (x *BudgetNotification) GetNotificationType() BudgetNotification_NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return BudgetNotification_NOTIFICATION_TYPE_NONE
}

//	{
//	   "name": "Cloudforet-Budget",
//	   "planned_limits": [{"date": "2022-01", "limit": 1000.0},
//	                      {"date": "2022-02", "limit": 1100.0},
//	                      {"date": "2022-03", "limit": 1200.0},
//	                      {"date": "2022-04", "limit": 1300.0},
//	                      {"date": "2022-05", "limit": 1400.0},
//	                      {"date": "2022-06", "limit": 1500.0},
//	                      {"date": "2022-07", "limit": 1600.0},
//	                      {"date": "2022-08", "limit": 1700.0},
//	                      {"date": "2022-09", "limit": 1800.0},
//	                      {"date": "2022-10", "limit": 1900.0},
//	                      {"date": "2022-11", "limit": 2000.0},
//	                      {"date": "2022-12", "limit": 2100.0}],
//	   "time_unit": "MONTHLY",
//	   "start": "2022-01",
//	   "end": "2022-12",
//	   "project_group_id": "pg-812c90990877"
//	}
type CreateBudgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Limit float32 `protobuf:"fixed32,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// +optional
	PlannedLimits []*PlannedLimit `protobuf:"bytes,3,rep,name=planned_limits,json=plannedLimits,proto3" json:"planned_limits,omitempty"`
	// +optional
	CostTypes *_struct.Struct              `protobuf:"bytes,4,opt,name=cost_types,json=costTypes,proto3" json:"cost_types,omitempty"`
	TimeUnit  CreateBudgetRequest_TimeUnit `protobuf:"varint,5,opt,name=time_unit,json=timeUnit,proto3,enum=spaceone.api.cost_analysis.v1.CreateBudgetRequest_TimeUnit" json:"time_unit,omitempty"`
	Start     string                       `protobuf:"bytes,6,opt,name=start,proto3" json:"start,omitempty"`
	End       string                       `protobuf:"bytes,7,opt,name=end,proto3" json:"end,omitempty"`
	// +optional
	Notifications []*BudgetNotification `protobuf:"bytes,8,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,9,opt,name=tags,proto3" json:"tags,omitempty"`
	// +optional
	ProjectId string `protobuf:"bytes,11,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// +optional
	ProjectGroupId string `protobuf:"bytes,12,opt,name=project_group_id,json=projectGroupId,proto3" json:"project_group_id,omitempty"`
	DomainId       string `protobuf:"bytes,13,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CreateBudgetRequest) Reset() {
	*x = CreateBudgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBudgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBudgetRequest) ProtoMessage() {}

func (x *CreateBudgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBudgetRequest.ProtoReflect.Descriptor instead.
func (*CreateBudgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBudgetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBudgetRequest) GetLimit() float32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CreateBudgetRequest) GetPlannedLimits() []*PlannedLimit {
	if x != nil {
		return x.PlannedLimits
	}
	return nil
}

func (x *CreateBudgetRequest) GetCostTypes() *_struct.Struct {
	if x != nil {
		return x.CostTypes
	}
	return nil
}

func (x *CreateBudgetRequest) GetTimeUnit() CreateBudgetRequest_TimeUnit {
	if x != nil {
		return x.TimeUnit
	}
	return CreateBudgetRequest_NONE
}

func (x *CreateBudgetRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *CreateBudgetRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *CreateBudgetRequest) GetNotifications() []*BudgetNotification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *CreateBudgetRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateBudgetRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateBudgetRequest) GetProjectGroupId() string {
	if x != nil {
		return x.ProjectGroupId
	}
	return ""
}

func (x *CreateBudgetRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "budget_id": "budget-d51b6b6a9910",
//	   "name": "Cloudforet-Budget-test", "limit": 15000.0,
//	   "planned_limits": [{"date": "2022-01", "limit": 500.0},
//	                      {"date": "2022-02", "limit": 500.0},
//	                      {"date": "2022-03", "limit": 500.0},
//	                      {"date": "2022-04", "limit": 500.0},
//	                      {"date": "2022-05", "limit": 500.0},
//	                      {"date": "2022-06", "limit": 500.0},
//	                      {"date": "2022-07", "limit": 500.0},
//	                      {"date": "2022-08", "limit": 500.0},
//	                      {"date": "2022-09", "limit": 500.0}],
//	   "end": "2022-12",
//	   "tags": {}
//	}
type UpdateBudgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BudgetId string `protobuf:"bytes,1,opt,name=budget_id,json=budgetId,proto3" json:"budget_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Limit float32 `protobuf:"fixed32,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// +optional
	PlannedLimits []*PlannedLimit `protobuf:"bytes,4,rep,name=planned_limits,json=plannedLimits,proto3" json:"planned_limits,omitempty"`
	// +optional
	End string `protobuf:"bytes,5,opt,name=end,proto3" json:"end,omitempty"`
	// +optional
	Tags     *_struct.Struct `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId string          `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *UpdateBudgetRequest) Reset() {
	*x = UpdateBudgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBudgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBudgetRequest) ProtoMessage() {}

func (x *UpdateBudgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBudgetRequest.ProtoReflect.Descriptor instead.
func (*UpdateBudgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateBudgetRequest) GetBudgetId() string {
	if x != nil {
		return x.BudgetId
	}
	return ""
}

func (x *UpdateBudgetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateBudgetRequest) GetLimit() float32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *UpdateBudgetRequest) GetPlannedLimits() []*PlannedLimit {
	if x != nil {
		return x.PlannedLimits
	}
	return nil
}

func (x *UpdateBudgetRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *UpdateBudgetRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateBudgetRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "budget_id": "budget-4c8606da4521",
//	   "notifications": [
//	       {
//	           "threshold": 20.0,
//	           "unit": "PERCENT",
//	           "notification_type": "CRITICAL"
//	       },
//	       {
//	           "threshold": 1000.0,
//	           "unit": "ACTUAL_COST",
//	           "notification_type": "WARNING"
//	       }
//	   ]
//	}
type SetBudgetNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BudgetId      string                `protobuf:"bytes,1,opt,name=budget_id,json=budgetId,proto3" json:"budget_id,omitempty"`
	Notifications []*BudgetNotification `protobuf:"bytes,2,rep,name=notifications,proto3" json:"notifications,omitempty"`
	DomainId      string                `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *SetBudgetNotificationRequest) Reset() {
	*x = SetBudgetNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBudgetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBudgetNotificationRequest) ProtoMessage() {}

func (x *SetBudgetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBudgetNotificationRequest.ProtoReflect.Descriptor instead.
func (*SetBudgetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{4}
}

func (x *SetBudgetNotificationRequest) GetBudgetId() string {
	if x != nil {
		return x.BudgetId
	}
	return ""
}

func (x *SetBudgetNotificationRequest) GetNotifications() []*BudgetNotification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *SetBudgetNotificationRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "budget_id": "budget-d51b6b6a9910"
//	}
type BudgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BudgetId string `protobuf:"bytes,1,opt,name=budget_id,json=budgetId,proto3" json:"budget_id,omitempty"`
	DomainId string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *BudgetRequest) Reset() {
	*x = BudgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BudgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BudgetRequest) ProtoMessage() {}

func (x *BudgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BudgetRequest.ProtoReflect.Descriptor instead.
func (*BudgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{5}
}

func (x *BudgetRequest) GetBudgetId() string {
	if x != nil {
		return x.BudgetId
	}
	return ""
}

func (x *BudgetRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type GetBudgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BudgetId string `protobuf:"bytes,1,opt,name=budget_id,json=budgetId,proto3" json:"budget_id,omitempty"`
	DomainId string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	Only []string `protobuf:"bytes,3,rep,name=only,proto3" json:"only,omitempty"`
}

func (x *GetBudgetRequest) Reset() {
	*x = GetBudgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBudgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBudgetRequest) ProtoMessage() {}

func (x *GetBudgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBudgetRequest.ProtoReflect.Descriptor instead.
func (*GetBudgetRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{6}
}

func (x *GetBudgetRequest) GetBudgetId() string {
	if x != nil {
		return x.BudgetId
	}
	return ""
}

func (x *GetBudgetRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *GetBudgetRequest) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

//	{
//	   "query": {}
//	}
type BudgetQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query *v1.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	BudgetId string `protobuf:"bytes,2,opt,name=budget_id,json=budgetId,proto3" json:"budget_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	ProjectId string `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// +optional
	ProjectGroupId string `protobuf:"bytes,5,opt,name=project_group_id,json=projectGroupId,proto3" json:"project_group_id,omitempty"`
	// +optional
	TimeUnit BudgetQuery_TimeUnit `protobuf:"varint,6,opt,name=time_unit,json=timeUnit,proto3,enum=spaceone.api.cost_analysis.v1.BudgetQuery_TimeUnit" json:"time_unit,omitempty"`
	DomainId string               `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *BudgetQuery) Reset() {
	*x = BudgetQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BudgetQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BudgetQuery) ProtoMessage() {}

func (x *BudgetQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BudgetQuery.ProtoReflect.Descriptor instead.
func (*BudgetQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{7}
}

func (x *BudgetQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *BudgetQuery) GetBudgetId() string {
	if x != nil {
		return x.BudgetId
	}
	return ""
}

func (x *BudgetQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BudgetQuery) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *BudgetQuery) GetProjectGroupId() string {
	if x != nil {
		return x.ProjectGroupId
	}
	return ""
}

func (x *BudgetQuery) GetTimeUnit() BudgetQuery_TimeUnit {
	if x != nil {
		return x.TimeUnit
	}
	return BudgetQuery_NONE
}

func (x *BudgetQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	       "budget_id": "budget-d51b6b6a9910",
//	       "name": "Cloudforet-Budget",
//	       "limit": 18600.0,
//	       "planned_limits": [
//	           {
//	               "date": "2022-01",
//	               "limit": 1000.0
//	           },
//	           {
//	               "date": "2022-02",
//	               "limit": 1100.0
//	           },
//	           {
//	               "date": "2022-03",
//	               "limit": 1200.0
//	           },
//	           {
//	               "date": "2022-04",
//	               "limit": 1300.0
//	           },
//	           {
//	               "date": "2022-05",
//	               "limit": 1400.0
//	           },
//	           {
//	               "date": "2022-06",
//	               "limit": 1500.0
//	           },
//	           {
//	               "date": "2022-07",
//	               "limit": 1600.0
//	           },
//	           {
//	               "date": "2022-08",
//	               "limit": 1700.0
//	           },
//	           {
//	               "date": "2022-09",
//	               "limit": 1800.0
//	           },
//	           {
//	               "date": "2022-10",
//	               "limit": 1900.0
//	           },
//	           {
//	               "date": "2022-11",
//	               "limit": 2000.0
//	           },
//	           {
//	               "date": "2022-12",
//	               "limit": 2100.0
//	           }
//	       ],
//	       "total_usage_usd_cost": 43412.45,
//	       "time_unit": "MONTHLY",
//	       "start": "2022-01",
//	       "end": "2022-12",
//	       "tags": {},
//	       "project_group_id": "pg-812c90990877",
//	       "domain_id": "domain-58010aa2e451",
//	       "created_at": "2022-07-18T09:30:56.901Z",
//	       "updated_at": "2022-07-18T09:30:56.901Z"
//	}
type BudgetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BudgetId          string                `protobuf:"bytes,1,opt,name=budget_id,json=budgetId,proto3" json:"budget_id,omitempty"`
	Name              string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Limit             float32               `protobuf:"fixed32,3,opt,name=limit,proto3" json:"limit,omitempty"`
	PlannedLimits     []*PlannedLimit       `protobuf:"bytes,4,rep,name=planned_limits,json=plannedLimits,proto3" json:"planned_limits,omitempty"`
	TotalUsageUsdCost float32               `protobuf:"fixed32,5,opt,name=total_usage_usd_cost,json=totalUsageUsdCost,proto3" json:"total_usage_usd_cost,omitempty"`
	CostTypes         *_struct.Struct       `protobuf:"bytes,6,opt,name=cost_types,json=costTypes,proto3" json:"cost_types,omitempty"`
	TimeUnit          BudgetInfo_TimeUnit   `protobuf:"varint,7,opt,name=time_unit,json=timeUnit,proto3,enum=spaceone.api.cost_analysis.v1.BudgetInfo_TimeUnit" json:"time_unit,omitempty"`
	Start             string                `protobuf:"bytes,8,opt,name=start,proto3" json:"start,omitempty"`
	End               string                `protobuf:"bytes,9,opt,name=end,proto3" json:"end,omitempty"`
	Notifications     []*BudgetNotification `protobuf:"bytes,10,rep,name=notifications,proto3" json:"notifications,omitempty"`
	Tags              *_struct.Struct       `protobuf:"bytes,21,opt,name=tags,proto3" json:"tags,omitempty"`
	ProjectId         string                `protobuf:"bytes,31,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectGroupId    string                `protobuf:"bytes,32,opt,name=project_group_id,json=projectGroupId,proto3" json:"project_group_id,omitempty"`
	DomainId          string                `protobuf:"bytes,33,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt         string                `protobuf:"bytes,41,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string                `protobuf:"bytes,42,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BudgetInfo) Reset() {
	*x = BudgetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BudgetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BudgetInfo) ProtoMessage() {}

func (x *BudgetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BudgetInfo.ProtoReflect.Descriptor instead.
func (*BudgetInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{8}
}

func (x *BudgetInfo) GetBudgetId() string {
	if x != nil {
		return x.BudgetId
	}
	return ""
}

func (x *BudgetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BudgetInfo) GetLimit() float32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *BudgetInfo) GetPlannedLimits() []*PlannedLimit {
	if x != nil {
		return x.PlannedLimits
	}
	return nil
}

func (x *BudgetInfo) GetTotalUsageUsdCost() float32 {
	if x != nil {
		return x.TotalUsageUsdCost
	}
	return 0
}

func (x *BudgetInfo) GetCostTypes() *_struct.Struct {
	if x != nil {
		return x.CostTypes
	}
	return nil
}

func (x *BudgetInfo) GetTimeUnit() BudgetInfo_TimeUnit {
	if x != nil {
		return x.TimeUnit
	}
	return BudgetInfo_NONE
}

func (x *BudgetInfo) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *BudgetInfo) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *BudgetInfo) GetNotifications() []*BudgetNotification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *BudgetInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BudgetInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *BudgetInfo) GetProjectGroupId() string {
	if x != nil {
		return x.ProjectGroupId
	}
	return ""
}

func (x *BudgetInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *BudgetInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *BudgetInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

//	{
//	       "results": [
//	           {
//	               "budget_id": "budget-409e33836ea2",
//	               "name": "Budget 2 - Monthly",
//	               "limit": 18600.0,
//	               "planned_limits": [
//	                   {
//	                       "date": "2022-01",
//	                       "limit": 1000.0
//	                   },
//	                   {
//	                       "date": "2022-02",
//	                       "limit": 1100.0
//	                   },
//	                   {
//	                       "date": "2022-03",
//	                       "limit": 1200.0
//	                   },
//	                   {
//	                       "date": "2022-04",
//	                       "limit": 1300.0
//	                   },
//	                   {
//	                       "date": "2022-05",
//	                       "limit": 1400.0
//	                   },
//	                   {
//	                       "date": "2022-06",
//	                       "limit": 1500.0
//	                   },
//	                   {
//	                       "date": "2022-07",
//	                       "limit": 1600.0
//	                   },
//	                   {
//	                       "date": "2022-08",
//	                       "limit": 1700.0
//	                   },
//	                   {
//	                       "date": "2022-09",
//	                       "limit": 1800.0
//	                   },
//	                   {
//	                       "date": "2022-10",
//	                       "limit": 1900.0
//	                   },
//	                   {
//	                       "date": "2022-11",
//	                       "limit": 2000.0
//	                   },
//	                   {
//	                       "date": "2022-12",
//	                       "limit": 2100.0
//	                   }
//	               ],
//	               "total_usage_usd_cost": 43412.45,
//	               "time_unit": "MONTHLY",
//	               "start": "2022-01",
//	               "end": "2022-12",
//	               "tags": {},
//	               "project_group_id": "pg-812c90990877",
//	               "domain_id": "domain-58010aa2e451",
//	               "created_at": "2022-04-12T06:09:56.917Z",
//	               "updated_at": "2022-04-12T06:09:56.917Z"
//	           }
//	       ],
//	       "total_count": 6
//	}
type BudgetsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*BudgetInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32         `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *BudgetsInfo) Reset() {
	*x = BudgetsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BudgetsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BudgetsInfo) ProtoMessage() {}

func (x *BudgetsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BudgetsInfo.ProtoReflect.Descriptor instead.
func (*BudgetsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{9}
}

func (x *BudgetsInfo) GetResults() []*BudgetInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BudgetsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type BudgetStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    *v1.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DomainId string              `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *BudgetStatQuery) Reset() {
	*x = BudgetStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BudgetStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BudgetStatQuery) ProtoMessage() {}

func (x *BudgetStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BudgetStatQuery.ProtoReflect.Descriptor instead.
func (*BudgetStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP(), []int{10}
}

func (x *BudgetStatQuery) GetQuery() *v1.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *BudgetStatQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

var File_spaceone_api_cost_analysis_v1_budget_proto protoreflect.FileDescriptor

var file_spaceone_api_cost_analysis_v1_budget_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0xef, 0x02, 0x0a, 0x12, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x4a, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x12, 0x6f, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x33, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x52,
	0x43, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x54, 0x55, 0x41, 0x4c,
	0x5f, 0x43, 0x4f, 0x53, 0x54, 0x10, 0x02, 0x22, 0x49, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49,
	0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x22, 0xf3, 0x04, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x52, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x58, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x12, 0x57, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x38,
	0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x59, 0x45, 0x41, 0x52, 0x4c, 0x59, 0x10, 0x03, 0x22, 0x8c, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x52, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x0d, 0x70, 0x6c,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x2b, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x42,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0d, 0x42,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0xe3, 0x02, 0x0a, 0x0b, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f,
	0x54, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x4c, 0x59,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x45, 0x41, 0x52, 0x4c, 0x59, 0x10, 0x03, 0x22, 0xed,
	0x05, 0x0a, 0x0a, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x52, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x55, 0x73, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x6f, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x4f, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x57, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x38, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f,
	0x54, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x4c, 0x59,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x45, 0x41, 0x52, 0x4c, 0x59, 0x10, 0x03, 0x22, 0x73,
	0x0a, 0x0b, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x0f, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x32, 0xf6, 0x07, 0x0a, 0x06, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x93, 0x01, 0x0a, 0x06,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a,
	0x22, 0x1f, 0x2f, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x93, 0x01, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xb0, 0x01, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22,
	0x29, 0x2f, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x73, 0x65, 0x74, 0x2d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7a, 0x0a, 0x06, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x12, 0x2f,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f,
	0x67, 0x65, 0x74, 0x12, 0x88, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x2a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22,
	0x1d, 0x2f, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x79,
	0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22,
	0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x63, 0x6f, 0x73,
	0x74, 0x2d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72,
	0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67,
	0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_cost_analysis_v1_budget_proto_rawDescOnce sync.Once
	file_spaceone_api_cost_analysis_v1_budget_proto_rawDescData = file_spaceone_api_cost_analysis_v1_budget_proto_rawDesc
)

func file_spaceone_api_cost_analysis_v1_budget_proto_rawDescGZIP() []byte {
	file_spaceone_api_cost_analysis_v1_budget_proto_rawDescOnce.Do(func() {
		file_spaceone_api_cost_analysis_v1_budget_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_cost_analysis_v1_budget_proto_rawDescData)
	})
	return file_spaceone_api_cost_analysis_v1_budget_proto_rawDescData
}

var file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_spaceone_api_cost_analysis_v1_budget_proto_goTypes = []interface{}{
	(BudgetNotification_Unit)(0),             // 0: spaceone.api.cost_analysis.v1.BudgetNotification.Unit
	(BudgetNotification_NotificationType)(0), // 1: spaceone.api.cost_analysis.v1.BudgetNotification.NotificationType
	(CreateBudgetRequest_TimeUnit)(0),        // 2: spaceone.api.cost_analysis.v1.CreateBudgetRequest.TimeUnit
	(BudgetQuery_TimeUnit)(0),                // 3: spaceone.api.cost_analysis.v1.BudgetQuery.TimeUnit
	(BudgetInfo_TimeUnit)(0),                 // 4: spaceone.api.cost_analysis.v1.BudgetInfo.TimeUnit
	(*PlannedLimit)(nil),                     // 5: spaceone.api.cost_analysis.v1.PlannedLimit
	(*BudgetNotification)(nil),               // 6: spaceone.api.cost_analysis.v1.BudgetNotification
	(*CreateBudgetRequest)(nil),              // 7: spaceone.api.cost_analysis.v1.CreateBudgetRequest
	(*UpdateBudgetRequest)(nil),              // 8: spaceone.api.cost_analysis.v1.UpdateBudgetRequest
	(*SetBudgetNotificationRequest)(nil),     // 9: spaceone.api.cost_analysis.v1.SetBudgetNotificationRequest
	(*BudgetRequest)(nil),                    // 10: spaceone.api.cost_analysis.v1.BudgetRequest
	(*GetBudgetRequest)(nil),                 // 11: spaceone.api.cost_analysis.v1.GetBudgetRequest
	(*BudgetQuery)(nil),                      // 12: spaceone.api.cost_analysis.v1.BudgetQuery
	(*BudgetInfo)(nil),                       // 13: spaceone.api.cost_analysis.v1.BudgetInfo
	(*BudgetsInfo)(nil),                      // 14: spaceone.api.cost_analysis.v1.BudgetsInfo
	(*BudgetStatQuery)(nil),                  // 15: spaceone.api.cost_analysis.v1.BudgetStatQuery
	(*_struct.Struct)(nil),                   // 16: google.protobuf.Struct
	(*v1.Query)(nil),                         // 17: spaceone.api.core.v1.Query
	(*v1.StatisticsQuery)(nil),               // 18: spaceone.api.core.v1.StatisticsQuery
	(*empty.Empty)(nil),                      // 19: google.protobuf.Empty
}
var file_spaceone_api_cost_analysis_v1_budget_proto_depIdxs = []int32{
	0,  // 0: spaceone.api.cost_analysis.v1.BudgetNotification.unit:type_name -> spaceone.api.cost_analysis.v1.BudgetNotification.Unit
	1,  // 1: spaceone.api.cost_analysis.v1.BudgetNotification.notification_type:type_name -> spaceone.api.cost_analysis.v1.BudgetNotification.NotificationType
	5,  // 2: spaceone.api.cost_analysis.v1.CreateBudgetRequest.planned_limits:type_name -> spaceone.api.cost_analysis.v1.PlannedLimit
	16, // 3: spaceone.api.cost_analysis.v1.CreateBudgetRequest.cost_types:type_name -> google.protobuf.Struct
	2,  // 4: spaceone.api.cost_analysis.v1.CreateBudgetRequest.time_unit:type_name -> spaceone.api.cost_analysis.v1.CreateBudgetRequest.TimeUnit
	6,  // 5: spaceone.api.cost_analysis.v1.CreateBudgetRequest.notifications:type_name -> spaceone.api.cost_analysis.v1.BudgetNotification
	16, // 6: spaceone.api.cost_analysis.v1.CreateBudgetRequest.tags:type_name -> google.protobuf.Struct
	5,  // 7: spaceone.api.cost_analysis.v1.UpdateBudgetRequest.planned_limits:type_name -> spaceone.api.cost_analysis.v1.PlannedLimit
	16, // 8: spaceone.api.cost_analysis.v1.UpdateBudgetRequest.tags:type_name -> google.protobuf.Struct
	6,  // 9: spaceone.api.cost_analysis.v1.SetBudgetNotificationRequest.notifications:type_name -> spaceone.api.cost_analysis.v1.BudgetNotification
	17, // 10: spaceone.api.cost_analysis.v1.BudgetQuery.query:type_name -> spaceone.api.core.v1.Query
	3,  // 11: spaceone.api.cost_analysis.v1.BudgetQuery.time_unit:type_name -> spaceone.api.cost_analysis.v1.BudgetQuery.TimeUnit
	5,  // 12: spaceone.api.cost_analysis.v1.BudgetInfo.planned_limits:type_name -> spaceone.api.cost_analysis.v1.PlannedLimit
	16, // 13: spaceone.api.cost_analysis.v1.BudgetInfo.cost_types:type_name -> google.protobuf.Struct
	4,  // 14: spaceone.api.cost_analysis.v1.BudgetInfo.time_unit:type_name -> spaceone.api.cost_analysis.v1.BudgetInfo.TimeUnit
	6,  // 15: spaceone.api.cost_analysis.v1.BudgetInfo.notifications:type_name -> spaceone.api.cost_analysis.v1.BudgetNotification
	16, // 16: spaceone.api.cost_analysis.v1.BudgetInfo.tags:type_name -> google.protobuf.Struct
	13, // 17: spaceone.api.cost_analysis.v1.BudgetsInfo.results:type_name -> spaceone.api.cost_analysis.v1.BudgetInfo
	18, // 18: spaceone.api.cost_analysis.v1.BudgetStatQuery.query:type_name -> spaceone.api.core.v1.StatisticsQuery
	7,  // 19: spaceone.api.cost_analysis.v1.Budget.create:input_type -> spaceone.api.cost_analysis.v1.CreateBudgetRequest
	8,  // 20: spaceone.api.cost_analysis.v1.Budget.update:input_type -> spaceone.api.cost_analysis.v1.UpdateBudgetRequest
	9,  // 21: spaceone.api.cost_analysis.v1.Budget.set_notification:input_type -> spaceone.api.cost_analysis.v1.SetBudgetNotificationRequest
	10, // 22: spaceone.api.cost_analysis.v1.Budget.delete:input_type -> spaceone.api.cost_analysis.v1.BudgetRequest
	11, // 23: spaceone.api.cost_analysis.v1.Budget.get:input_type -> spaceone.api.cost_analysis.v1.GetBudgetRequest
	12, // 24: spaceone.api.cost_analysis.v1.Budget.list:input_type -> spaceone.api.cost_analysis.v1.BudgetQuery
	15, // 25: spaceone.api.cost_analysis.v1.Budget.stat:input_type -> spaceone.api.cost_analysis.v1.BudgetStatQuery
	13, // 26: spaceone.api.cost_analysis.v1.Budget.create:output_type -> spaceone.api.cost_analysis.v1.BudgetInfo
	13, // 27: spaceone.api.cost_analysis.v1.Budget.update:output_type -> spaceone.api.cost_analysis.v1.BudgetInfo
	13, // 28: spaceone.api.cost_analysis.v1.Budget.set_notification:output_type -> spaceone.api.cost_analysis.v1.BudgetInfo
	19, // 29: spaceone.api.cost_analysis.v1.Budget.delete:output_type -> google.protobuf.Empty
	13, // 30: spaceone.api.cost_analysis.v1.Budget.get:output_type -> spaceone.api.cost_analysis.v1.BudgetInfo
	14, // 31: spaceone.api.cost_analysis.v1.Budget.list:output_type -> spaceone.api.cost_analysis.v1.BudgetsInfo
	16, // 32: spaceone.api.cost_analysis.v1.Budget.stat:output_type -> google.protobuf.Struct
	26, // [26:33] is the sub-list for method output_type
	19, // [19:26] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_spaceone_api_cost_analysis_v1_budget_proto_init() }
func file_spaceone_api_cost_analysis_v1_budget_proto_init() {
	if File_spaceone_api_cost_analysis_v1_budget_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlannedLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BudgetNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBudgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBudgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBudgetNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BudgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBudgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BudgetQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BudgetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BudgetsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BudgetStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_cost_analysis_v1_budget_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_cost_analysis_v1_budget_proto_goTypes,
		DependencyIndexes: file_spaceone_api_cost_analysis_v1_budget_proto_depIdxs,
		EnumInfos:         file_spaceone_api_cost_analysis_v1_budget_proto_enumTypes,
		MessageInfos:      file_spaceone_api_cost_analysis_v1_budget_proto_msgTypes,
	}.Build()
	File_spaceone_api_cost_analysis_v1_budget_proto = out.File
	file_spaceone_api_cost_analysis_v1_budget_proto_rawDesc = nil
	file_spaceone_api_cost_analysis_v1_budget_proto_goTypes = nil
	file_spaceone_api_cost_analysis_v1_budget_proto_depIdxs = nil
}
