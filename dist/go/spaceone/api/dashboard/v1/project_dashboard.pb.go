// description of dashboard

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: spaceone/api/dashboard/v1/project_dashboard.proto

package v1

import (
	v1 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v1"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateProjectDashboardRequest_Viewers int32

const (
	CreateProjectDashboardRequest_VIEWERS_NONE CreateProjectDashboardRequest_Viewers = 0
	CreateProjectDashboardRequest_PUBLIC       CreateProjectDashboardRequest_Viewers = 1
	CreateProjectDashboardRequest_PRIVATE      CreateProjectDashboardRequest_Viewers = 2
)

// Enum value maps for CreateProjectDashboardRequest_Viewers.
var (
	CreateProjectDashboardRequest_Viewers_name = map[int32]string{
		0: "VIEWERS_NONE",
		1: "PUBLIC",
		2: "PRIVATE",
	}
	CreateProjectDashboardRequest_Viewers_value = map[string]int32{
		"VIEWERS_NONE": 0,
		"PUBLIC":       1,
		"PRIVATE":      2,
	}
)

func (x CreateProjectDashboardRequest_Viewers) Enum() *CreateProjectDashboardRequest_Viewers {
	p := new(CreateProjectDashboardRequest_Viewers)
	*p = x
	return p
}

func (x CreateProjectDashboardRequest_Viewers) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateProjectDashboardRequest_Viewers) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_enumTypes[0].Descriptor()
}

func (CreateProjectDashboardRequest_Viewers) Type() protoreflect.EnumType {
	return &file_spaceone_api_dashboard_v1_project_dashboard_proto_enumTypes[0]
}

func (x CreateProjectDashboardRequest_Viewers) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateProjectDashboardRequest_Viewers.Descriptor instead.
func (CreateProjectDashboardRequest_Viewers) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{0, 0}
}

type ProjectDashboardQuery_Viewers int32

const (
	ProjectDashboardQuery_VIEWERS_NONE ProjectDashboardQuery_Viewers = 0
	ProjectDashboardQuery_PUBLIC       ProjectDashboardQuery_Viewers = 1
	ProjectDashboardQuery_PRIVATE      ProjectDashboardQuery_Viewers = 2
)

// Enum value maps for ProjectDashboardQuery_Viewers.
var (
	ProjectDashboardQuery_Viewers_name = map[int32]string{
		0: "VIEWERS_NONE",
		1: "PUBLIC",
		2: "PRIVATE",
	}
	ProjectDashboardQuery_Viewers_value = map[string]int32{
		"VIEWERS_NONE": 0,
		"PUBLIC":       1,
		"PRIVATE":      2,
	}
)

func (x ProjectDashboardQuery_Viewers) Enum() *ProjectDashboardQuery_Viewers {
	p := new(ProjectDashboardQuery_Viewers)
	*p = x
	return p
}

func (x ProjectDashboardQuery_Viewers) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectDashboardQuery_Viewers) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_enumTypes[1].Descriptor()
}

func (ProjectDashboardQuery_Viewers) Type() protoreflect.EnumType {
	return &file_spaceone_api_dashboard_v1_project_dashboard_proto_enumTypes[1]
}

func (x ProjectDashboardQuery_Viewers) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectDashboardQuery_Viewers.Descriptor instead.
func (ProjectDashboardQuery_Viewers) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{7, 0}
}

type ProjectDashboardInfo_Viewers int32

const (
	ProjectDashboardInfo_VIEWERS_NONE ProjectDashboardInfo_Viewers = 0
	ProjectDashboardInfo_PUBLIC       ProjectDashboardInfo_Viewers = 1
	ProjectDashboardInfo_PRIVATE      ProjectDashboardInfo_Viewers = 2
)

// Enum value maps for ProjectDashboardInfo_Viewers.
var (
	ProjectDashboardInfo_Viewers_name = map[int32]string{
		0: "VIEWERS_NONE",
		1: "PUBLIC",
		2: "PRIVATE",
	}
	ProjectDashboardInfo_Viewers_value = map[string]int32{
		"VIEWERS_NONE": 0,
		"PUBLIC":       1,
		"PRIVATE":      2,
	}
)

func (x ProjectDashboardInfo_Viewers) Enum() *ProjectDashboardInfo_Viewers {
	p := new(ProjectDashboardInfo_Viewers)
	*p = x
	return p
}

func (x ProjectDashboardInfo_Viewers) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectDashboardInfo_Viewers) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_enumTypes[2].Descriptor()
}

func (ProjectDashboardInfo_Viewers) Type() protoreflect.EnumType {
	return &file_spaceone_api_dashboard_v1_project_dashboard_proto_enumTypes[2]
}

func (x ProjectDashboardInfo_Viewers) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectDashboardInfo_Viewers.Descriptor instead.
func (ProjectDashboardInfo_Viewers) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{8, 0}
}

type CreateProjectDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string                                `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name      string                                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Viewers   CreateProjectDashboardRequest_Viewers `protobuf:"varint,3,opt,name=viewers,proto3,enum=spaceone.api.dashboard.v1.CreateProjectDashboardRequest_Viewers" json:"viewers,omitempty"`
	// +optional
	Layouts *_struct.ListValue `protobuf:"bytes,4,opt,name=layouts,proto3" json:"layouts,omitempty"`
	// +optional
	Variables *_struct.Struct `protobuf:"bytes,5,opt,name=variables,proto3" json:"variables,omitempty"`
	// +optional
	Settings *_struct.Struct `protobuf:"bytes,6,opt,name=settings,proto3" json:"settings,omitempty"`
	// +optional
	VariablesSchema *_struct.Struct `protobuf:"bytes,7,opt,name=variables_schema,json=variablesSchema,proto3" json:"variables_schema,omitempty"`
	// +optional
	Labels *_struct.ListValue `protobuf:"bytes,10,opt,name=labels,proto3" json:"labels,omitempty"`
	// +optional
	Tags     *_struct.Struct `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId string          `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CreateProjectDashboardRequest) Reset() {
	*x = CreateProjectDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectDashboardRequest) ProtoMessage() {}

func (x *CreateProjectDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectDashboardRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectDashboardRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{0}
}

func (x *CreateProjectDashboardRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateProjectDashboardRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectDashboardRequest) GetViewers() CreateProjectDashboardRequest_Viewers {
	if x != nil {
		return x.Viewers
	}
	return CreateProjectDashboardRequest_VIEWERS_NONE
}

func (x *CreateProjectDashboardRequest) GetLayouts() *_struct.ListValue {
	if x != nil {
		return x.Layouts
	}
	return nil
}

func (x *CreateProjectDashboardRequest) GetVariables() *_struct.Struct {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *CreateProjectDashboardRequest) GetSettings() *_struct.Struct {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CreateProjectDashboardRequest) GetVariablesSchema() *_struct.Struct {
	if x != nil {
		return x.VariablesSchema
	}
	return nil
}

func (x *CreateProjectDashboardRequest) GetLabels() *_struct.ListValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateProjectDashboardRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateProjectDashboardRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type UpdateProjectDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectDashboardId string `protobuf:"bytes,1,opt,name=project_dashboard_id,json=projectDashboardId,proto3" json:"project_dashboard_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Layouts *_struct.ListValue `protobuf:"bytes,3,opt,name=layouts,proto3" json:"layouts,omitempty"`
	// +optional
	Variables *_struct.Struct `protobuf:"bytes,5,opt,name=variables,proto3" json:"variables,omitempty"`
	// +optional
	Settings *_struct.Struct `protobuf:"bytes,6,opt,name=settings,proto3" json:"settings,omitempty"`
	// +optional
	VariablesSchema *_struct.Struct `protobuf:"bytes,7,opt,name=variables_schema,json=variablesSchema,proto3" json:"variables_schema,omitempty"`
	// +optional
	Labels *_struct.ListValue `protobuf:"bytes,10,opt,name=labels,proto3" json:"labels,omitempty"`
	// +optional
	Tags     *_struct.Struct `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId string          `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *UpdateProjectDashboardRequest) Reset() {
	*x = UpdateProjectDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectDashboardRequest) ProtoMessage() {}

func (x *UpdateProjectDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectDashboardRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectDashboardRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateProjectDashboardRequest) GetProjectDashboardId() string {
	if x != nil {
		return x.ProjectDashboardId
	}
	return ""
}

func (x *UpdateProjectDashboardRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProjectDashboardRequest) GetLayouts() *_struct.ListValue {
	if x != nil {
		return x.Layouts
	}
	return nil
}

func (x *UpdateProjectDashboardRequest) GetVariables() *_struct.Struct {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *UpdateProjectDashboardRequest) GetSettings() *_struct.Struct {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *UpdateProjectDashboardRequest) GetVariablesSchema() *_struct.Struct {
	if x != nil {
		return x.VariablesSchema
	}
	return nil
}

func (x *UpdateProjectDashboardRequest) GetLabels() *_struct.ListValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateProjectDashboardRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateProjectDashboardRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type ProjectDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectDashboardId string `protobuf:"bytes,1,opt,name=project_dashboard_id,json=projectDashboardId,proto3" json:"project_dashboard_id,omitempty"`
	DomainId           string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *ProjectDashboardRequest) Reset() {
	*x = ProjectDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDashboardRequest) ProtoMessage() {}

func (x *ProjectDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDashboardRequest.ProtoReflect.Descriptor instead.
func (*ProjectDashboardRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectDashboardRequest) GetProjectDashboardId() string {
	if x != nil {
		return x.ProjectDashboardId
	}
	return ""
}

func (x *ProjectDashboardRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type GetProjectDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectDashboardId string `protobuf:"bytes,1,opt,name=project_dashboard_id,json=projectDashboardId,proto3" json:"project_dashboard_id,omitempty"`
	DomainId           string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	Only []string `protobuf:"bytes,3,rep,name=only,proto3" json:"only,omitempty"`
}

func (x *GetProjectDashboardRequest) Reset() {
	*x = GetProjectDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectDashboardRequest) ProtoMessage() {}

func (x *GetProjectDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectDashboardRequest.ProtoReflect.Descriptor instead.
func (*GetProjectDashboardRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{3}
}

func (x *GetProjectDashboardRequest) GetProjectDashboardId() string {
	if x != nil {
		return x.ProjectDashboardId
	}
	return ""
}

func (x *GetProjectDashboardRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *GetProjectDashboardRequest) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

type ProjectDashboardVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectDashboardId string `protobuf:"bytes,1,opt,name=project_dashboard_id,json=projectDashboardId,proto3" json:"project_dashboard_id,omitempty"`
	Version            int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	DomainId           string `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *ProjectDashboardVersionRequest) Reset() {
	*x = ProjectDashboardVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDashboardVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDashboardVersionRequest) ProtoMessage() {}

func (x *ProjectDashboardVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDashboardVersionRequest.ProtoReflect.Descriptor instead.
func (*ProjectDashboardVersionRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectDashboardVersionRequest) GetProjectDashboardId() string {
	if x != nil {
		return x.ProjectDashboardId
	}
	return ""
}

func (x *ProjectDashboardVersionRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProjectDashboardVersionRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type GetProjectDashboardVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectDashboardId string `protobuf:"bytes,1,opt,name=project_dashboard_id,json=projectDashboardId,proto3" json:"project_dashboard_id,omitempty"`
	Version            int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	DomainId           string `protobuf:"bytes,10,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	Only []string `protobuf:"bytes,11,rep,name=only,proto3" json:"only,omitempty"`
}

func (x *GetProjectDashboardVersionRequest) Reset() {
	*x = GetProjectDashboardVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectDashboardVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectDashboardVersionRequest) ProtoMessage() {}

func (x *GetProjectDashboardVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectDashboardVersionRequest.ProtoReflect.Descriptor instead.
func (*GetProjectDashboardVersionRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{5}
}

func (x *GetProjectDashboardVersionRequest) GetProjectDashboardId() string {
	if x != nil {
		return x.ProjectDashboardId
	}
	return ""
}

func (x *GetProjectDashboardVersionRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetProjectDashboardVersionRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *GetProjectDashboardVersionRequest) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

type ProjectDashboardVersionQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query              *v1.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	ProjectDashboardId string    `protobuf:"bytes,2,opt,name=project_dashboard_id,json=projectDashboardId,proto3" json:"project_dashboard_id,omitempty"`
	// +optional
	Version  int32  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	DomainId string `protobuf:"bytes,10,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *ProjectDashboardVersionQuery) Reset() {
	*x = ProjectDashboardVersionQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDashboardVersionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDashboardVersionQuery) ProtoMessage() {}

func (x *ProjectDashboardVersionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDashboardVersionQuery.ProtoReflect.Descriptor instead.
func (*ProjectDashboardVersionQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectDashboardVersionQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ProjectDashboardVersionQuery) GetProjectDashboardId() string {
	if x != nil {
		return x.ProjectDashboardId
	}
	return ""
}

func (x *ProjectDashboardVersionQuery) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProjectDashboardVersionQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type ProjectDashboardQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query *v1.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	ProjectDashboardId string `protobuf:"bytes,2,opt,name=project_dashboard_id,json=projectDashboardId,proto3" json:"project_dashboard_id,omitempty"`
	// +optional
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Viewers ProjectDashboardQuery_Viewers `protobuf:"varint,5,opt,name=viewers,proto3,enum=spaceone.api.dashboard.v1.ProjectDashboardQuery_Viewers" json:"viewers,omitempty"`
	// +optional
	UserId   string `protobuf:"bytes,10,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DomainId string `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *ProjectDashboardQuery) Reset() {
	*x = ProjectDashboardQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDashboardQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDashboardQuery) ProtoMessage() {}

func (x *ProjectDashboardQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDashboardQuery.ProtoReflect.Descriptor instead.
func (*ProjectDashboardQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{7}
}

func (x *ProjectDashboardQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ProjectDashboardQuery) GetProjectDashboardId() string {
	if x != nil {
		return x.ProjectDashboardId
	}
	return ""
}

func (x *ProjectDashboardQuery) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectDashboardQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectDashboardQuery) GetViewers() ProjectDashboardQuery_Viewers {
	if x != nil {
		return x.Viewers
	}
	return ProjectDashboardQuery_VIEWERS_NONE
}

func (x *ProjectDashboardQuery) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ProjectDashboardQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type ProjectDashboardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectDashboardId string                       `protobuf:"bytes,1,opt,name=project_dashboard_id,json=projectDashboardId,proto3" json:"project_dashboard_id,omitempty"`
	ProjectId          string                       `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name               string                       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Viewers            ProjectDashboardInfo_Viewers `protobuf:"varint,4,opt,name=viewers,proto3,enum=spaceone.api.dashboard.v1.ProjectDashboardInfo_Viewers" json:"viewers,omitempty"`
	Version            int32                        `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	Layouts            *_struct.ListValue           `protobuf:"bytes,6,opt,name=layouts,proto3" json:"layouts,omitempty"`
	Variables          *_struct.Struct              `protobuf:"bytes,7,opt,name=variables,proto3" json:"variables,omitempty"`
	Settings           *_struct.Struct              `protobuf:"bytes,8,opt,name=settings,proto3" json:"settings,omitempty"`
	VariablesSchema    *_struct.Struct              `protobuf:"bytes,9,opt,name=variables_schema,json=variablesSchema,proto3" json:"variables_schema,omitempty"`
	Labels             *_struct.ListValue           `protobuf:"bytes,10,opt,name=labels,proto3" json:"labels,omitempty"`
	Tags               *_struct.Struct              `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
	UserId             string                       `protobuf:"bytes,20,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DomainId           string                       `protobuf:"bytes,22,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt          string                       `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          string                       `protobuf:"bytes,24,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ProjectDashboardInfo) Reset() {
	*x = ProjectDashboardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDashboardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDashboardInfo) ProtoMessage() {}

func (x *ProjectDashboardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDashboardInfo.ProtoReflect.Descriptor instead.
func (*ProjectDashboardInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectDashboardInfo) GetProjectDashboardId() string {
	if x != nil {
		return x.ProjectDashboardId
	}
	return ""
}

func (x *ProjectDashboardInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectDashboardInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectDashboardInfo) GetViewers() ProjectDashboardInfo_Viewers {
	if x != nil {
		return x.Viewers
	}
	return ProjectDashboardInfo_VIEWERS_NONE
}

func (x *ProjectDashboardInfo) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProjectDashboardInfo) GetLayouts() *_struct.ListValue {
	if x != nil {
		return x.Layouts
	}
	return nil
}

func (x *ProjectDashboardInfo) GetVariables() *_struct.Struct {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *ProjectDashboardInfo) GetSettings() *_struct.Struct {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProjectDashboardInfo) GetVariablesSchema() *_struct.Struct {
	if x != nil {
		return x.VariablesSchema
	}
	return nil
}

func (x *ProjectDashboardInfo) GetLabels() *_struct.ListValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ProjectDashboardInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ProjectDashboardInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ProjectDashboardInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ProjectDashboardInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProjectDashboardInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ProjectDashboardsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*ProjectDashboardInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                   `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ProjectDashboardsInfo) Reset() {
	*x = ProjectDashboardsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDashboardsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDashboardsInfo) ProtoMessage() {}

func (x *ProjectDashboardsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDashboardsInfo.ProtoReflect.Descriptor instead.
func (*ProjectDashboardsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectDashboardsInfo) GetResults() []*ProjectDashboardInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ProjectDashboardsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ProjectDashboardStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    *v1.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DomainId string              `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *ProjectDashboardStatQuery) Reset() {
	*x = ProjectDashboardStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDashboardStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDashboardStatQuery) ProtoMessage() {}

func (x *ProjectDashboardStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDashboardStatQuery.ProtoReflect.Descriptor instead.
func (*ProjectDashboardStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{10}
}

func (x *ProjectDashboardStatQuery) GetQuery() *v1.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ProjectDashboardStatQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type ProjectDashboardVersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectDashboardId string             `protobuf:"bytes,1,opt,name=project_dashboard_id,json=projectDashboardId,proto3" json:"project_dashboard_id,omitempty"`
	Version            int32              `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Latest             bool               `protobuf:"varint,3,opt,name=latest,proto3" json:"latest,omitempty"`
	Layouts            *_struct.ListValue `protobuf:"bytes,5,opt,name=layouts,proto3" json:"layouts,omitempty"`
	Variables          *_struct.Struct    `protobuf:"bytes,6,opt,name=variables,proto3" json:"variables,omitempty"`
	Settings           *_struct.Struct    `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
	VariablesSchema    *_struct.Struct    `protobuf:"bytes,8,opt,name=variables_schema,json=variablesSchema,proto3" json:"variables_schema,omitempty"`
	DomainId           string             `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt          string             `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ProjectDashboardVersionInfo) Reset() {
	*x = ProjectDashboardVersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDashboardVersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDashboardVersionInfo) ProtoMessage() {}

func (x *ProjectDashboardVersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDashboardVersionInfo.ProtoReflect.Descriptor instead.
func (*ProjectDashboardVersionInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{11}
}

func (x *ProjectDashboardVersionInfo) GetProjectDashboardId() string {
	if x != nil {
		return x.ProjectDashboardId
	}
	return ""
}

func (x *ProjectDashboardVersionInfo) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProjectDashboardVersionInfo) GetLatest() bool {
	if x != nil {
		return x.Latest
	}
	return false
}

func (x *ProjectDashboardVersionInfo) GetLayouts() *_struct.ListValue {
	if x != nil {
		return x.Layouts
	}
	return nil
}

func (x *ProjectDashboardVersionInfo) GetVariables() *_struct.Struct {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *ProjectDashboardVersionInfo) GetSettings() *_struct.Struct {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProjectDashboardVersionInfo) GetVariablesSchema() *_struct.Struct {
	if x != nil {
		return x.VariablesSchema
	}
	return nil
}

func (x *ProjectDashboardVersionInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ProjectDashboardVersionInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type ProjectDashboardVersionsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*ProjectDashboardVersionInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                          `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ProjectDashboardVersionsInfo) Reset() {
	*x = ProjectDashboardVersionsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDashboardVersionsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDashboardVersionsInfo) ProtoMessage() {}

func (x *ProjectDashboardVersionsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDashboardVersionsInfo.ProtoReflect.Descriptor instead.
func (*ProjectDashboardVersionsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP(), []int{12}
}

func (x *ProjectDashboardVersionsInfo) GetResults() []*ProjectDashboardVersionInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ProjectDashboardVersionsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_spaceone_api_dashboard_v1_project_dashboard_proto protoreflect.FileDescriptor

var file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDesc = []byte{
	0x0a, 0x31, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x19, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x04, 0x0a, 0x1d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5a,
	0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x40, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x73, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x6c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73,
	0x12, 0x35, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x10,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x32, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x34,
	0x0a, 0x07, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x49, 0x45,
	0x57, 0x45, 0x52, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50,
	0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41,
	0x54, 0x45, 0x10, 0x02, 0x22, 0xc9, 0x03, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x42,
	0x0a, 0x10, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x0f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x32, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x22, 0x68, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0x89, 0x01, 0x0a, 0x1e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0xba, 0x01, 0x0a, 0x1c, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x30,
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xef, 0x02, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x73, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x07, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x10,
	0x0a, 0x0c, 0x56, 0x49, 0x45, 0x57, 0x45, 0x52, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x22, 0xd9, 0x05, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x73, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x10, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0f, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x32, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x34, 0x0a, 0x07, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x49,
	0x45, 0x57, 0x45, 0x52, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56,
	0x41, 0x54, 0x45, 0x10, 0x02, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x49, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x75, 0x0a, 0x19, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0xa3, 0x03, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x09,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x10, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0f, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x50, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x8c, 0x0d, 0x0a,
	0x10, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0xa6, 0x01, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x38, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a,
	0x01, 0x2a, 0x22, 0x26, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0xa6, 0x01, 0x0a, 0x06, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x32,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x9d, 0x01,
	0x0a, 0x03, 0x67, 0x65, 0x74, 0x12, 0x35, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x9e, 0x01,
	0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0xb7,
	0x01, 0x0a, 0x0e, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x39, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74,
	0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x0b, 0x67, 0x65, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x36,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x37, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x30, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x34, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x42, 0x40, 0x5a, 0x3e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66,
	0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74,
	0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescOnce sync.Once
	file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescData = file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDesc
)

func file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescGZIP() []byte {
	file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescOnce.Do(func() {
		file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescData)
	})
	return file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDescData
}

var file_spaceone_api_dashboard_v1_project_dashboard_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_spaceone_api_dashboard_v1_project_dashboard_proto_goTypes = []interface{}{
	(CreateProjectDashboardRequest_Viewers)(0), // 0: spaceone.api.dashboard.v1.CreateProjectDashboardRequest.Viewers
	(ProjectDashboardQuery_Viewers)(0),         // 1: spaceone.api.dashboard.v1.ProjectDashboardQuery.Viewers
	(ProjectDashboardInfo_Viewers)(0),          // 2: spaceone.api.dashboard.v1.ProjectDashboardInfo.Viewers
	(*CreateProjectDashboardRequest)(nil),      // 3: spaceone.api.dashboard.v1.CreateProjectDashboardRequest
	(*UpdateProjectDashboardRequest)(nil),      // 4: spaceone.api.dashboard.v1.UpdateProjectDashboardRequest
	(*ProjectDashboardRequest)(nil),            // 5: spaceone.api.dashboard.v1.ProjectDashboardRequest
	(*GetProjectDashboardRequest)(nil),         // 6: spaceone.api.dashboard.v1.GetProjectDashboardRequest
	(*ProjectDashboardVersionRequest)(nil),     // 7: spaceone.api.dashboard.v1.ProjectDashboardVersionRequest
	(*GetProjectDashboardVersionRequest)(nil),  // 8: spaceone.api.dashboard.v1.GetProjectDashboardVersionRequest
	(*ProjectDashboardVersionQuery)(nil),       // 9: spaceone.api.dashboard.v1.ProjectDashboardVersionQuery
	(*ProjectDashboardQuery)(nil),              // 10: spaceone.api.dashboard.v1.ProjectDashboardQuery
	(*ProjectDashboardInfo)(nil),               // 11: spaceone.api.dashboard.v1.ProjectDashboardInfo
	(*ProjectDashboardsInfo)(nil),              // 12: spaceone.api.dashboard.v1.ProjectDashboardsInfo
	(*ProjectDashboardStatQuery)(nil),          // 13: spaceone.api.dashboard.v1.ProjectDashboardStatQuery
	(*ProjectDashboardVersionInfo)(nil),        // 14: spaceone.api.dashboard.v1.ProjectDashboardVersionInfo
	(*ProjectDashboardVersionsInfo)(nil),       // 15: spaceone.api.dashboard.v1.ProjectDashboardVersionsInfo
	(*_struct.ListValue)(nil),                  // 16: google.protobuf.ListValue
	(*_struct.Struct)(nil),                     // 17: google.protobuf.Struct
	(*v1.Query)(nil),                           // 18: spaceone.api.core.v1.Query
	(*v1.StatisticsQuery)(nil),                 // 19: spaceone.api.core.v1.StatisticsQuery
	(*empty.Empty)(nil),                        // 20: google.protobuf.Empty
}
var file_spaceone_api_dashboard_v1_project_dashboard_proto_depIdxs = []int32{
	0,  // 0: spaceone.api.dashboard.v1.CreateProjectDashboardRequest.viewers:type_name -> spaceone.api.dashboard.v1.CreateProjectDashboardRequest.Viewers
	16, // 1: spaceone.api.dashboard.v1.CreateProjectDashboardRequest.layouts:type_name -> google.protobuf.ListValue
	17, // 2: spaceone.api.dashboard.v1.CreateProjectDashboardRequest.variables:type_name -> google.protobuf.Struct
	17, // 3: spaceone.api.dashboard.v1.CreateProjectDashboardRequest.settings:type_name -> google.protobuf.Struct
	17, // 4: spaceone.api.dashboard.v1.CreateProjectDashboardRequest.variables_schema:type_name -> google.protobuf.Struct
	16, // 5: spaceone.api.dashboard.v1.CreateProjectDashboardRequest.labels:type_name -> google.protobuf.ListValue
	17, // 6: spaceone.api.dashboard.v1.CreateProjectDashboardRequest.tags:type_name -> google.protobuf.Struct
	16, // 7: spaceone.api.dashboard.v1.UpdateProjectDashboardRequest.layouts:type_name -> google.protobuf.ListValue
	17, // 8: spaceone.api.dashboard.v1.UpdateProjectDashboardRequest.variables:type_name -> google.protobuf.Struct
	17, // 9: spaceone.api.dashboard.v1.UpdateProjectDashboardRequest.settings:type_name -> google.protobuf.Struct
	17, // 10: spaceone.api.dashboard.v1.UpdateProjectDashboardRequest.variables_schema:type_name -> google.protobuf.Struct
	16, // 11: spaceone.api.dashboard.v1.UpdateProjectDashboardRequest.labels:type_name -> google.protobuf.ListValue
	17, // 12: spaceone.api.dashboard.v1.UpdateProjectDashboardRequest.tags:type_name -> google.protobuf.Struct
	18, // 13: spaceone.api.dashboard.v1.ProjectDashboardVersionQuery.query:type_name -> spaceone.api.core.v1.Query
	18, // 14: spaceone.api.dashboard.v1.ProjectDashboardQuery.query:type_name -> spaceone.api.core.v1.Query
	1,  // 15: spaceone.api.dashboard.v1.ProjectDashboardQuery.viewers:type_name -> spaceone.api.dashboard.v1.ProjectDashboardQuery.Viewers
	2,  // 16: spaceone.api.dashboard.v1.ProjectDashboardInfo.viewers:type_name -> spaceone.api.dashboard.v1.ProjectDashboardInfo.Viewers
	16, // 17: spaceone.api.dashboard.v1.ProjectDashboardInfo.layouts:type_name -> google.protobuf.ListValue
	17, // 18: spaceone.api.dashboard.v1.ProjectDashboardInfo.variables:type_name -> google.protobuf.Struct
	17, // 19: spaceone.api.dashboard.v1.ProjectDashboardInfo.settings:type_name -> google.protobuf.Struct
	17, // 20: spaceone.api.dashboard.v1.ProjectDashboardInfo.variables_schema:type_name -> google.protobuf.Struct
	16, // 21: spaceone.api.dashboard.v1.ProjectDashboardInfo.labels:type_name -> google.protobuf.ListValue
	17, // 22: spaceone.api.dashboard.v1.ProjectDashboardInfo.tags:type_name -> google.protobuf.Struct
	11, // 23: spaceone.api.dashboard.v1.ProjectDashboardsInfo.results:type_name -> spaceone.api.dashboard.v1.ProjectDashboardInfo
	19, // 24: spaceone.api.dashboard.v1.ProjectDashboardStatQuery.query:type_name -> spaceone.api.core.v1.StatisticsQuery
	16, // 25: spaceone.api.dashboard.v1.ProjectDashboardVersionInfo.layouts:type_name -> google.protobuf.ListValue
	17, // 26: spaceone.api.dashboard.v1.ProjectDashboardVersionInfo.variables:type_name -> google.protobuf.Struct
	17, // 27: spaceone.api.dashboard.v1.ProjectDashboardVersionInfo.settings:type_name -> google.protobuf.Struct
	17, // 28: spaceone.api.dashboard.v1.ProjectDashboardVersionInfo.variables_schema:type_name -> google.protobuf.Struct
	14, // 29: spaceone.api.dashboard.v1.ProjectDashboardVersionsInfo.results:type_name -> spaceone.api.dashboard.v1.ProjectDashboardVersionInfo
	3,  // 30: spaceone.api.dashboard.v1.ProjectDashboard.create:input_type -> spaceone.api.dashboard.v1.CreateProjectDashboardRequest
	4,  // 31: spaceone.api.dashboard.v1.ProjectDashboard.update:input_type -> spaceone.api.dashboard.v1.UpdateProjectDashboardRequest
	5,  // 32: spaceone.api.dashboard.v1.ProjectDashboard.delete:input_type -> spaceone.api.dashboard.v1.ProjectDashboardRequest
	6,  // 33: spaceone.api.dashboard.v1.ProjectDashboard.get:input_type -> spaceone.api.dashboard.v1.GetProjectDashboardRequest
	7,  // 34: spaceone.api.dashboard.v1.ProjectDashboard.delete_version:input_type -> spaceone.api.dashboard.v1.ProjectDashboardVersionRequest
	7,  // 35: spaceone.api.dashboard.v1.ProjectDashboard.revert_version:input_type -> spaceone.api.dashboard.v1.ProjectDashboardVersionRequest
	8,  // 36: spaceone.api.dashboard.v1.ProjectDashboard.get_version:input_type -> spaceone.api.dashboard.v1.GetProjectDashboardVersionRequest
	9,  // 37: spaceone.api.dashboard.v1.ProjectDashboard.list_versions:input_type -> spaceone.api.dashboard.v1.ProjectDashboardVersionQuery
	10, // 38: spaceone.api.dashboard.v1.ProjectDashboard.list:input_type -> spaceone.api.dashboard.v1.ProjectDashboardQuery
	13, // 39: spaceone.api.dashboard.v1.ProjectDashboard.stat:input_type -> spaceone.api.dashboard.v1.ProjectDashboardStatQuery
	11, // 40: spaceone.api.dashboard.v1.ProjectDashboard.create:output_type -> spaceone.api.dashboard.v1.ProjectDashboardInfo
	11, // 41: spaceone.api.dashboard.v1.ProjectDashboard.update:output_type -> spaceone.api.dashboard.v1.ProjectDashboardInfo
	20, // 42: spaceone.api.dashboard.v1.ProjectDashboard.delete:output_type -> google.protobuf.Empty
	11, // 43: spaceone.api.dashboard.v1.ProjectDashboard.get:output_type -> spaceone.api.dashboard.v1.ProjectDashboardInfo
	20, // 44: spaceone.api.dashboard.v1.ProjectDashboard.delete_version:output_type -> google.protobuf.Empty
	11, // 45: spaceone.api.dashboard.v1.ProjectDashboard.revert_version:output_type -> spaceone.api.dashboard.v1.ProjectDashboardInfo
	14, // 46: spaceone.api.dashboard.v1.ProjectDashboard.get_version:output_type -> spaceone.api.dashboard.v1.ProjectDashboardVersionInfo
	15, // 47: spaceone.api.dashboard.v1.ProjectDashboard.list_versions:output_type -> spaceone.api.dashboard.v1.ProjectDashboardVersionsInfo
	12, // 48: spaceone.api.dashboard.v1.ProjectDashboard.list:output_type -> spaceone.api.dashboard.v1.ProjectDashboardsInfo
	17, // 49: spaceone.api.dashboard.v1.ProjectDashboard.stat:output_type -> google.protobuf.Struct
	40, // [40:50] is the sub-list for method output_type
	30, // [30:40] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_spaceone_api_dashboard_v1_project_dashboard_proto_init() }
func file_spaceone_api_dashboard_v1_project_dashboard_proto_init() {
	if File_spaceone_api_dashboard_v1_project_dashboard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDashboardVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectDashboardVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDashboardVersionQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDashboardQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDashboardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDashboardsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDashboardStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDashboardVersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDashboardVersionsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_dashboard_v1_project_dashboard_proto_goTypes,
		DependencyIndexes: file_spaceone_api_dashboard_v1_project_dashboard_proto_depIdxs,
		EnumInfos:         file_spaceone_api_dashboard_v1_project_dashboard_proto_enumTypes,
		MessageInfos:      file_spaceone_api_dashboard_v1_project_dashboard_proto_msgTypes,
	}.Build()
	File_spaceone_api_dashboard_v1_project_dashboard_proto = out.File
	file_spaceone_api_dashboard_v1_project_dashboard_proto_rawDesc = nil
	file_spaceone_api_dashboard_v1_project_dashboard_proto_goTypes = nil
	file_spaceone_api_dashboard_v1_project_dashboard_proto_depIdxs = nil
}
