// A Metric is a monitoring metric data delivered from an external cloud service via a DataSource.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: spaceone/api/monitoring/plugin/metric.proto

package plugin

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options    *_struct.Struct `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	SecretData *_struct.Struct `protobuf:"bytes,2,opt,name=secret_data,json=secretData,proto3" json:"secret_data,omitempty"`
	Query      *_struct.Struct `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	Schema string `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *MetricRequest) Reset() {
	*x = MetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricRequest) ProtoMessage() {}

func (x *MetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricRequest.ProtoReflect.Descriptor instead.
func (*MetricRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_plugin_metric_proto_rawDescGZIP(), []int{0}
}

func (x *MetricRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MetricRequest) GetSecretData() *_struct.Struct {
	if x != nil {
		return x.SecretData
	}
	return nil
}

func (x *MetricRequest) GetQuery() *_struct.Struct {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *MetricRequest) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type MetricDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options     *_struct.Struct `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	SecretData  *_struct.Struct `protobuf:"bytes,2,opt,name=secret_data,json=secretData,proto3" json:"secret_data,omitempty"`
	MetricQuery *_struct.Struct `protobuf:"bytes,3,opt,name=metric_query,json=metricQuery,proto3" json:"metric_query,omitempty"`
	// metric identifier in case of requested metric info is not a single.
	Metric string `protobuf:"bytes,4,opt,name=metric,proto3" json:"metric,omitempty"`
	Start  string `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	End    string `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
	// +optional
	Period int32 `protobuf:"varint,7,opt,name=period,proto3" json:"period,omitempty"`
	// +optional
	Stat string `protobuf:"bytes,8,opt,name=stat,proto3" json:"stat,omitempty"`
	// +optional
	Schema string `protobuf:"bytes,9,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *MetricDataRequest) Reset() {
	*x = MetricDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDataRequest) ProtoMessage() {}

func (x *MetricDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricDataRequest.ProtoReflect.Descriptor instead.
func (*MetricDataRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_plugin_metric_proto_rawDescGZIP(), []int{1}
}

func (x *MetricDataRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MetricDataRequest) GetSecretData() *_struct.Struct {
	if x != nil {
		return x.SecretData
	}
	return nil
}

func (x *MetricDataRequest) GetMetricQuery() *_struct.Struct {
	if x != nil {
		return x.MetricQuery
	}
	return nil
}

func (x *MetricDataRequest) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *MetricDataRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *MetricDataRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *MetricDataRequest) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *MetricDataRequest) GetStat() string {
	if x != nil {
		return x.Stat
	}
	return ""
}

func (x *MetricDataRequest) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type MetricInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name        string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group       string          `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Unit        *_struct.Struct `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	MetricQuery *_struct.Struct `protobuf:"bytes,5,opt,name=metric_query,json=metricQuery,proto3" json:"metric_query,omitempty"`
}

func (x *MetricInfo) Reset() {
	*x = MetricInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricInfo) ProtoMessage() {}

func (x *MetricInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricInfo.ProtoReflect.Descriptor instead.
func (*MetricInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_plugin_metric_proto_rawDescGZIP(), []int{2}
}

func (x *MetricInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MetricInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetricInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *MetricInfo) GetUnit() *_struct.Struct {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *MetricInfo) GetMetricQuery() *_struct.Struct {
	if x != nil {
		return x.MetricQuery
	}
	return nil
}

type MetricsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricInfo `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *MetricsInfo) Reset() {
	*x = MetricsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsInfo) ProtoMessage() {}

func (x *MetricsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsInfo.ProtoReflect.Descriptor instead.
func (*MetricsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_plugin_metric_proto_rawDescGZIP(), []int{3}
}

func (x *MetricsInfo) GetMetrics() []*MetricInfo {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type MetricDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels *_struct.ListValue `protobuf:"bytes,1,opt,name=labels,proto3" json:"labels,omitempty"`
	Values *_struct.Struct    `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *MetricDataInfo) Reset() {
	*x = MetricDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDataInfo) ProtoMessage() {}

func (x *MetricDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricDataInfo.ProtoReflect.Descriptor instead.
func (*MetricDataInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_plugin_metric_proto_rawDescGZIP(), []int{4}
}

func (x *MetricDataInfo) GetLabels() *_struct.ListValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetricDataInfo) GetValues() *_struct.Struct {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_spaceone_api_monitoring_plugin_metric_proto protoreflect.FileDescriptor

var file_spaceone_api_monitoring_plugin_metric_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x01, 0x0a, 0x0d,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x38, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x22, 0xc0, 0x02, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x22, 0xb1, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x2b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x3a, 0x0a, 0x0c,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x53, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x75, 0x0a,
	0x0e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x32, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x32, 0xdf, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12,
	0x64, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d,
	0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_monitoring_plugin_metric_proto_rawDescOnce sync.Once
	file_spaceone_api_monitoring_plugin_metric_proto_rawDescData = file_spaceone_api_monitoring_plugin_metric_proto_rawDesc
)

func file_spaceone_api_monitoring_plugin_metric_proto_rawDescGZIP() []byte {
	file_spaceone_api_monitoring_plugin_metric_proto_rawDescOnce.Do(func() {
		file_spaceone_api_monitoring_plugin_metric_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_monitoring_plugin_metric_proto_rawDescData)
	})
	return file_spaceone_api_monitoring_plugin_metric_proto_rawDescData
}

var file_spaceone_api_monitoring_plugin_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_spaceone_api_monitoring_plugin_metric_proto_goTypes = []interface{}{
	(*MetricRequest)(nil),     // 0: spaceone.api.monitoring.plugin.MetricRequest
	(*MetricDataRequest)(nil), // 1: spaceone.api.monitoring.plugin.MetricDataRequest
	(*MetricInfo)(nil),        // 2: spaceone.api.monitoring.plugin.MetricInfo
	(*MetricsInfo)(nil),       // 3: spaceone.api.monitoring.plugin.MetricsInfo
	(*MetricDataInfo)(nil),    // 4: spaceone.api.monitoring.plugin.MetricDataInfo
	(*_struct.Struct)(nil),    // 5: google.protobuf.Struct
	(*_struct.ListValue)(nil), // 6: google.protobuf.ListValue
}
var file_spaceone_api_monitoring_plugin_metric_proto_depIdxs = []int32{
	5,  // 0: spaceone.api.monitoring.plugin.MetricRequest.options:type_name -> google.protobuf.Struct
	5,  // 1: spaceone.api.monitoring.plugin.MetricRequest.secret_data:type_name -> google.protobuf.Struct
	5,  // 2: spaceone.api.monitoring.plugin.MetricRequest.query:type_name -> google.protobuf.Struct
	5,  // 3: spaceone.api.monitoring.plugin.MetricDataRequest.options:type_name -> google.protobuf.Struct
	5,  // 4: spaceone.api.monitoring.plugin.MetricDataRequest.secret_data:type_name -> google.protobuf.Struct
	5,  // 5: spaceone.api.monitoring.plugin.MetricDataRequest.metric_query:type_name -> google.protobuf.Struct
	5,  // 6: spaceone.api.monitoring.plugin.MetricInfo.unit:type_name -> google.protobuf.Struct
	5,  // 7: spaceone.api.monitoring.plugin.MetricInfo.metric_query:type_name -> google.protobuf.Struct
	2,  // 8: spaceone.api.monitoring.plugin.MetricsInfo.metrics:type_name -> spaceone.api.monitoring.plugin.MetricInfo
	6,  // 9: spaceone.api.monitoring.plugin.MetricDataInfo.labels:type_name -> google.protobuf.ListValue
	5,  // 10: spaceone.api.monitoring.plugin.MetricDataInfo.values:type_name -> google.protobuf.Struct
	0,  // 11: spaceone.api.monitoring.plugin.Metric.list:input_type -> spaceone.api.monitoring.plugin.MetricRequest
	1,  // 12: spaceone.api.monitoring.plugin.Metric.get_data:input_type -> spaceone.api.monitoring.plugin.MetricDataRequest
	3,  // 13: spaceone.api.monitoring.plugin.Metric.list:output_type -> spaceone.api.monitoring.plugin.MetricsInfo
	4,  // 14: spaceone.api.monitoring.plugin.Metric.get_data:output_type -> spaceone.api.monitoring.plugin.MetricDataInfo
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_spaceone_api_monitoring_plugin_metric_proto_init() }
func file_spaceone_api_monitoring_plugin_metric_proto_init() {
	if File_spaceone_api_monitoring_plugin_metric_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_plugin_metric_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_monitoring_plugin_metric_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_monitoring_plugin_metric_proto_goTypes,
		DependencyIndexes: file_spaceone_api_monitoring_plugin_metric_proto_depIdxs,
		MessageInfos:      file_spaceone_api_monitoring_plugin_metric_proto_msgTypes,
	}.Build()
	File_spaceone_api_monitoring_plugin_metric_proto = out.File
	file_spaceone_api_monitoring_plugin_metric_proto_rawDesc = nil
	file_spaceone_api_monitoring_plugin_metric_proto_goTypes = nil
	file_spaceone_api_monitoring_plugin_metric_proto_depIdxs = nil
}
