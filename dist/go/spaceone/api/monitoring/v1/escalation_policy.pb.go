// An EscalationPolicy is a set of rules to deliver an alert to assigned members.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: spaceone/api/monitoring/v1/escalation_policy.proto

package v1

import (
	v1 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v1"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EscalationPolicyRule_NotificationLevel int32

const (
	EscalationPolicyRule_NONE EscalationPolicyRule_NotificationLevel = 0
	EscalationPolicyRule_ALL  EscalationPolicyRule_NotificationLevel = 1
	EscalationPolicyRule_LV1  EscalationPolicyRule_NotificationLevel = 2
	EscalationPolicyRule_LV2  EscalationPolicyRule_NotificationLevel = 3
	EscalationPolicyRule_LV3  EscalationPolicyRule_NotificationLevel = 4
	EscalationPolicyRule_LV4  EscalationPolicyRule_NotificationLevel = 5
	EscalationPolicyRule_LV5  EscalationPolicyRule_NotificationLevel = 6
)

// Enum value maps for EscalationPolicyRule_NotificationLevel.
var (
	EscalationPolicyRule_NotificationLevel_name = map[int32]string{
		0: "NONE",
		1: "ALL",
		2: "LV1",
		3: "LV2",
		4: "LV3",
		5: "LV4",
		6: "LV5",
	}
	EscalationPolicyRule_NotificationLevel_value = map[string]int32{
		"NONE": 0,
		"ALL":  1,
		"LV1":  2,
		"LV2":  3,
		"LV3":  4,
		"LV4":  5,
		"LV5":  6,
	}
)

func (x EscalationPolicyRule_NotificationLevel) Enum() *EscalationPolicyRule_NotificationLevel {
	p := new(EscalationPolicyRule_NotificationLevel)
	*p = x
	return p
}

func (x EscalationPolicyRule_NotificationLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EscalationPolicyRule_NotificationLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[0].Descriptor()
}

func (EscalationPolicyRule_NotificationLevel) Type() protoreflect.EnumType {
	return &file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[0]
}

func (x EscalationPolicyRule_NotificationLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EscalationPolicyRule_NotificationLevel.Descriptor instead.
func (EscalationPolicyRule_NotificationLevel) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{0, 0}
}

type CreateEscalationPolicyRequest_EscalationFinishCondition int32

const (
	CreateEscalationPolicyRequest_NONE         CreateEscalationPolicyRequest_EscalationFinishCondition = 0
	CreateEscalationPolicyRequest_ACKNOWLEDGED CreateEscalationPolicyRequest_EscalationFinishCondition = 1
	CreateEscalationPolicyRequest_RESOLVED     CreateEscalationPolicyRequest_EscalationFinishCondition = 2
)

// Enum value maps for CreateEscalationPolicyRequest_EscalationFinishCondition.
var (
	CreateEscalationPolicyRequest_EscalationFinishCondition_name = map[int32]string{
		0: "NONE",
		1: "ACKNOWLEDGED",
		2: "RESOLVED",
	}
	CreateEscalationPolicyRequest_EscalationFinishCondition_value = map[string]int32{
		"NONE":         0,
		"ACKNOWLEDGED": 1,
		"RESOLVED":     2,
	}
)

func (x CreateEscalationPolicyRequest_EscalationFinishCondition) Enum() *CreateEscalationPolicyRequest_EscalationFinishCondition {
	p := new(CreateEscalationPolicyRequest_EscalationFinishCondition)
	*p = x
	return p
}

func (x CreateEscalationPolicyRequest_EscalationFinishCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateEscalationPolicyRequest_EscalationFinishCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[1].Descriptor()
}

func (CreateEscalationPolicyRequest_EscalationFinishCondition) Type() protoreflect.EnumType {
	return &file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[1]
}

func (x CreateEscalationPolicyRequest_EscalationFinishCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateEscalationPolicyRequest_EscalationFinishCondition.Descriptor instead.
func (CreateEscalationPolicyRequest_EscalationFinishCondition) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{1, 0}
}

type UpdateEscalationPolicyRequest_EscalationFinishCondition int32

const (
	UpdateEscalationPolicyRequest_NONE         UpdateEscalationPolicyRequest_EscalationFinishCondition = 0
	UpdateEscalationPolicyRequest_ACKNOWLEDGED UpdateEscalationPolicyRequest_EscalationFinishCondition = 1
	UpdateEscalationPolicyRequest_RESOLVED     UpdateEscalationPolicyRequest_EscalationFinishCondition = 2
)

// Enum value maps for UpdateEscalationPolicyRequest_EscalationFinishCondition.
var (
	UpdateEscalationPolicyRequest_EscalationFinishCondition_name = map[int32]string{
		0: "NONE",
		1: "ACKNOWLEDGED",
		2: "RESOLVED",
	}
	UpdateEscalationPolicyRequest_EscalationFinishCondition_value = map[string]int32{
		"NONE":         0,
		"ACKNOWLEDGED": 1,
		"RESOLVED":     2,
	}
)

func (x UpdateEscalationPolicyRequest_EscalationFinishCondition) Enum() *UpdateEscalationPolicyRequest_EscalationFinishCondition {
	p := new(UpdateEscalationPolicyRequest_EscalationFinishCondition)
	*p = x
	return p
}

func (x UpdateEscalationPolicyRequest_EscalationFinishCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateEscalationPolicyRequest_EscalationFinishCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[2].Descriptor()
}

func (UpdateEscalationPolicyRequest_EscalationFinishCondition) Type() protoreflect.EnumType {
	return &file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[2]
}

func (x UpdateEscalationPolicyRequest_EscalationFinishCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateEscalationPolicyRequest_EscalationFinishCondition.Descriptor instead.
func (UpdateEscalationPolicyRequest_EscalationFinishCondition) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{2, 0}
}

type EscalationPolicyQuery_EscalationPolicyScope int32

const (
	EscalationPolicyQuery_SCOPE_NONE EscalationPolicyQuery_EscalationPolicyScope = 0
	EscalationPolicyQuery_DOMAIN     EscalationPolicyQuery_EscalationPolicyScope = 1
	EscalationPolicyQuery_PROJECT    EscalationPolicyQuery_EscalationPolicyScope = 2
)

// Enum value maps for EscalationPolicyQuery_EscalationPolicyScope.
var (
	EscalationPolicyQuery_EscalationPolicyScope_name = map[int32]string{
		0: "SCOPE_NONE",
		1: "DOMAIN",
		2: "PROJECT",
	}
	EscalationPolicyQuery_EscalationPolicyScope_value = map[string]int32{
		"SCOPE_NONE": 0,
		"DOMAIN":     1,
		"PROJECT":    2,
	}
)

func (x EscalationPolicyQuery_EscalationPolicyScope) Enum() *EscalationPolicyQuery_EscalationPolicyScope {
	p := new(EscalationPolicyQuery_EscalationPolicyScope)
	*p = x
	return p
}

func (x EscalationPolicyQuery_EscalationPolicyScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EscalationPolicyQuery_EscalationPolicyScope) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[3].Descriptor()
}

func (EscalationPolicyQuery_EscalationPolicyScope) Type() protoreflect.EnumType {
	return &file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[3]
}

func (x EscalationPolicyQuery_EscalationPolicyScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EscalationPolicyQuery_EscalationPolicyScope.Descriptor instead.
func (EscalationPolicyQuery_EscalationPolicyScope) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{5, 0}
}

type EscalationPolicyQuery_EscalationFinishCondition int32

const (
	EscalationPolicyQuery_NONE         EscalationPolicyQuery_EscalationFinishCondition = 0
	EscalationPolicyQuery_ACKNOWLEDGED EscalationPolicyQuery_EscalationFinishCondition = 1
	EscalationPolicyQuery_RESOLVED     EscalationPolicyQuery_EscalationFinishCondition = 2
)

// Enum value maps for EscalationPolicyQuery_EscalationFinishCondition.
var (
	EscalationPolicyQuery_EscalationFinishCondition_name = map[int32]string{
		0: "NONE",
		1: "ACKNOWLEDGED",
		2: "RESOLVED",
	}
	EscalationPolicyQuery_EscalationFinishCondition_value = map[string]int32{
		"NONE":         0,
		"ACKNOWLEDGED": 1,
		"RESOLVED":     2,
	}
)

func (x EscalationPolicyQuery_EscalationFinishCondition) Enum() *EscalationPolicyQuery_EscalationFinishCondition {
	p := new(EscalationPolicyQuery_EscalationFinishCondition)
	*p = x
	return p
}

func (x EscalationPolicyQuery_EscalationFinishCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EscalationPolicyQuery_EscalationFinishCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[4].Descriptor()
}

func (EscalationPolicyQuery_EscalationFinishCondition) Type() protoreflect.EnumType {
	return &file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[4]
}

func (x EscalationPolicyQuery_EscalationFinishCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EscalationPolicyQuery_EscalationFinishCondition.Descriptor instead.
func (EscalationPolicyQuery_EscalationFinishCondition) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{5, 1}
}

type EscalationPolicyInfo_EscalationPolicyScope int32

const (
	EscalationPolicyInfo_SCOPE_NONE EscalationPolicyInfo_EscalationPolicyScope = 0
	EscalationPolicyInfo_DOMAIN     EscalationPolicyInfo_EscalationPolicyScope = 1
	EscalationPolicyInfo_PROJECT    EscalationPolicyInfo_EscalationPolicyScope = 2
)

// Enum value maps for EscalationPolicyInfo_EscalationPolicyScope.
var (
	EscalationPolicyInfo_EscalationPolicyScope_name = map[int32]string{
		0: "SCOPE_NONE",
		1: "DOMAIN",
		2: "PROJECT",
	}
	EscalationPolicyInfo_EscalationPolicyScope_value = map[string]int32{
		"SCOPE_NONE": 0,
		"DOMAIN":     1,
		"PROJECT":    2,
	}
)

func (x EscalationPolicyInfo_EscalationPolicyScope) Enum() *EscalationPolicyInfo_EscalationPolicyScope {
	p := new(EscalationPolicyInfo_EscalationPolicyScope)
	*p = x
	return p
}

func (x EscalationPolicyInfo_EscalationPolicyScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EscalationPolicyInfo_EscalationPolicyScope) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[5].Descriptor()
}

func (EscalationPolicyInfo_EscalationPolicyScope) Type() protoreflect.EnumType {
	return &file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[5]
}

func (x EscalationPolicyInfo_EscalationPolicyScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EscalationPolicyInfo_EscalationPolicyScope.Descriptor instead.
func (EscalationPolicyInfo_EscalationPolicyScope) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{6, 0}
}

type EscalationPolicyInfo_EscalationFinishCondition int32

const (
	EscalationPolicyInfo_NONE         EscalationPolicyInfo_EscalationFinishCondition = 0
	EscalationPolicyInfo_ACKNOWLEDGED EscalationPolicyInfo_EscalationFinishCondition = 1
	EscalationPolicyInfo_RESOLVED     EscalationPolicyInfo_EscalationFinishCondition = 2
)

// Enum value maps for EscalationPolicyInfo_EscalationFinishCondition.
var (
	EscalationPolicyInfo_EscalationFinishCondition_name = map[int32]string{
		0: "NONE",
		1: "ACKNOWLEDGED",
		2: "RESOLVED",
	}
	EscalationPolicyInfo_EscalationFinishCondition_value = map[string]int32{
		"NONE":         0,
		"ACKNOWLEDGED": 1,
		"RESOLVED":     2,
	}
)

func (x EscalationPolicyInfo_EscalationFinishCondition) Enum() *EscalationPolicyInfo_EscalationFinishCondition {
	p := new(EscalationPolicyInfo_EscalationFinishCondition)
	*p = x
	return p
}

func (x EscalationPolicyInfo_EscalationFinishCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EscalationPolicyInfo_EscalationFinishCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[6].Descriptor()
}

func (EscalationPolicyInfo_EscalationFinishCondition) Type() protoreflect.EnumType {
	return &file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes[6]
}

func (x EscalationPolicyInfo_EscalationFinishCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EscalationPolicyInfo_EscalationFinishCondition.Descriptor instead.
func (EscalationPolicyInfo_EscalationFinishCondition) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{6, 1}
}

type EscalationPolicyRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationLevel EscalationPolicyRule_NotificationLevel `protobuf:"varint,1,opt,name=notification_level,json=notificationLevel,proto3,enum=spaceone.api.monitoring.v1.EscalationPolicyRule_NotificationLevel" json:"notification_level,omitempty"`
	EscalateMinutes   int32                                  `protobuf:"varint,2,opt,name=escalate_minutes,json=escalateMinutes,proto3" json:"escalate_minutes,omitempty"`
}

func (x *EscalationPolicyRule) Reset() {
	*x = EscalationPolicyRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscalationPolicyRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscalationPolicyRule) ProtoMessage() {}

func (x *EscalationPolicyRule) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscalationPolicyRule.ProtoReflect.Descriptor instead.
func (*EscalationPolicyRule) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{0}
}

func (x *EscalationPolicyRule) GetNotificationLevel() EscalationPolicyRule_NotificationLevel {
	if x != nil {
		return x.NotificationLevel
	}
	return EscalationPolicyRule_NONE
}

func (x *EscalationPolicyRule) GetEscalateMinutes() int32 {
	if x != nil {
		return x.EscalateMinutes
	}
	return 0
}

//	{
//	   "name": "es-test",
//	   "rules": [{"notification_level": "LV1", "escalate_minutes": 30},
//	             {"notification_level": "LV2", "escalate_minutes": 30}],
//	   "repeat_count": 2,
//	   "finish_condition": "ACKNOWLEDGED",
//	   "domain_id": "domain-58010aa2e451"
//	}
type CreateEscalationPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rules []*EscalationPolicyRule `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
	// +optional
	RepeatCount int32 `protobuf:"varint,3,opt,name=repeat_count,json=repeatCount,proto3" json:"repeat_count,omitempty"`
	// +optional
	FinishCondition CreateEscalationPolicyRequest_EscalationFinishCondition `protobuf:"varint,4,opt,name=finish_condition,json=finishCondition,proto3,enum=spaceone.api.monitoring.v1.CreateEscalationPolicyRequest_EscalationFinishCondition" json:"finish_condition,omitempty"`
	// +optional
	ProjectId string `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// +optional
	Tags     *_struct.Struct `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId string          `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CreateEscalationPolicyRequest) Reset() {
	*x = CreateEscalationPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEscalationPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEscalationPolicyRequest) ProtoMessage() {}

func (x *CreateEscalationPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEscalationPolicyRequest.ProtoReflect.Descriptor instead.
func (*CreateEscalationPolicyRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEscalationPolicyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEscalationPolicyRequest) GetRules() []*EscalationPolicyRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *CreateEscalationPolicyRequest) GetRepeatCount() int32 {
	if x != nil {
		return x.RepeatCount
	}
	return 0
}

func (x *CreateEscalationPolicyRequest) GetFinishCondition() CreateEscalationPolicyRequest_EscalationFinishCondition {
	if x != nil {
		return x.FinishCondition
	}
	return CreateEscalationPolicyRequest_NONE
}

func (x *CreateEscalationPolicyRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateEscalationPolicyRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateEscalationPolicyRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "escalation_policy_id": "ep-526e536fdca9",
//	   "name": "es-test2",
//	   "rules": [{"notification_level": "LV1", "escalate_minutes": 15},
//	             {"notification_level": "LV2", "escalate_minutes": 15},
//	             {"notification_level": "LV3", "escalate_minutes": 15}],
//	   "repeat_count": 1,
//	   "finish_condition": "RESOLVED",
//	   "domain_id": "domain-58010aa2e451"
//	}
type UpdateEscalationPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EscalationPolicyId string `protobuf:"bytes,1,opt,name=escalation_policy_id,json=escalationPolicyId,proto3" json:"escalation_policy_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Rules []*EscalationPolicyRule `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
	// +optional
	RepeatCount int32 `protobuf:"varint,4,opt,name=repeat_count,json=repeatCount,proto3" json:"repeat_count,omitempty"`
	// +optional
	FinishCondition UpdateEscalationPolicyRequest_EscalationFinishCondition `protobuf:"varint,5,opt,name=finish_condition,json=finishCondition,proto3,enum=spaceone.api.monitoring.v1.UpdateEscalationPolicyRequest_EscalationFinishCondition" json:"finish_condition,omitempty"`
	// +optional
	Tags     *_struct.Struct `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId string          `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *UpdateEscalationPolicyRequest) Reset() {
	*x = UpdateEscalationPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEscalationPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEscalationPolicyRequest) ProtoMessage() {}

func (x *UpdateEscalationPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEscalationPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateEscalationPolicyRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateEscalationPolicyRequest) GetEscalationPolicyId() string {
	if x != nil {
		return x.EscalationPolicyId
	}
	return ""
}

func (x *UpdateEscalationPolicyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateEscalationPolicyRequest) GetRules() []*EscalationPolicyRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *UpdateEscalationPolicyRequest) GetRepeatCount() int32 {
	if x != nil {
		return x.RepeatCount
	}
	return 0
}

func (x *UpdateEscalationPolicyRequest) GetFinishCondition() UpdateEscalationPolicyRequest_EscalationFinishCondition {
	if x != nil {
		return x.FinishCondition
	}
	return UpdateEscalationPolicyRequest_NONE
}

func (x *UpdateEscalationPolicyRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateEscalationPolicyRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "escalation_policy_id": "ep-526e536fdca9",
//	   "domain_id": "domain-58010aa2e451"
//	}
type EscalationPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EscalationPolicyId string `protobuf:"bytes,1,opt,name=escalation_policy_id,json=escalationPolicyId,proto3" json:"escalation_policy_id,omitempty"`
	DomainId           string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *EscalationPolicyRequest) Reset() {
	*x = EscalationPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscalationPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscalationPolicyRequest) ProtoMessage() {}

func (x *EscalationPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscalationPolicyRequest.ProtoReflect.Descriptor instead.
func (*EscalationPolicyRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{3}
}

func (x *EscalationPolicyRequest) GetEscalationPolicyId() string {
	if x != nil {
		return x.EscalationPolicyId
	}
	return ""
}

func (x *EscalationPolicyRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "escalation_policy_id": "ep-d75670166af4",
//	   "domain_id": "domain-58010aa2e451"
//	}
type GetEscalationPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EscalationPolicyId string `protobuf:"bytes,1,opt,name=escalation_policy_id,json=escalationPolicyId,proto3" json:"escalation_policy_id,omitempty"`
	DomainId           string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	Only []string `protobuf:"bytes,3,rep,name=only,proto3" json:"only,omitempty"`
}

func (x *GetEscalationPolicyRequest) Reset() {
	*x = GetEscalationPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEscalationPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEscalationPolicyRequest) ProtoMessage() {}

func (x *GetEscalationPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEscalationPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetEscalationPolicyRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{4}
}

func (x *GetEscalationPolicyRequest) GetEscalationPolicyId() string {
	if x != nil {
		return x.EscalationPolicyId
	}
	return ""
}

func (x *GetEscalationPolicyRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *GetEscalationPolicyRequest) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

//	{
//	   "query": {},
//	   "domain_id": "domain-58010aa2e451"
//	}
type EscalationPolicyQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query *v1.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	EscalationPolicyId string `protobuf:"bytes,2,opt,name=escalation_policy_id,json=escalationPolicyId,proto3" json:"escalation_policy_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	IsDefault bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	// +optional
	FinishCondition EscalationPolicyQuery_EscalationFinishCondition `protobuf:"varint,5,opt,name=finish_condition,json=finishCondition,proto3,enum=spaceone.api.monitoring.v1.EscalationPolicyQuery_EscalationFinishCondition" json:"finish_condition,omitempty"`
	// +optional
	Scope EscalationPolicyQuery_EscalationPolicyScope `protobuf:"varint,6,opt,name=scope,proto3,enum=spaceone.api.monitoring.v1.EscalationPolicyQuery_EscalationPolicyScope" json:"scope,omitempty"`
	// +optional
	ProjectId string `protobuf:"bytes,7,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DomainId  string `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *EscalationPolicyQuery) Reset() {
	*x = EscalationPolicyQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscalationPolicyQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscalationPolicyQuery) ProtoMessage() {}

func (x *EscalationPolicyQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscalationPolicyQuery.ProtoReflect.Descriptor instead.
func (*EscalationPolicyQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{5}
}

func (x *EscalationPolicyQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *EscalationPolicyQuery) GetEscalationPolicyId() string {
	if x != nil {
		return x.EscalationPolicyId
	}
	return ""
}

func (x *EscalationPolicyQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EscalationPolicyQuery) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *EscalationPolicyQuery) GetFinishCondition() EscalationPolicyQuery_EscalationFinishCondition {
	if x != nil {
		return x.FinishCondition
	}
	return EscalationPolicyQuery_NONE
}

func (x *EscalationPolicyQuery) GetScope() EscalationPolicyQuery_EscalationPolicyScope {
	if x != nil {
		return x.Scope
	}
	return EscalationPolicyQuery_SCOPE_NONE
}

func (x *EscalationPolicyQuery) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *EscalationPolicyQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	       "escalation_policy_id": "ep-526e536fdca9",
//	       "name": "es-test",
//	       "rules": [
//	           {
//	               "notification_level": "LV1",
//	               "escalate_minutes": 30
//	           },
//	           {
//	               "notification_level": "LV2",
//	               "escalate_minutes": 30
//	           }
//	       ],
//	       "repeat_count": 2,
//	       "finish_condition": "ACKNOWLEDGED",
//	       "scope": "DOMAIN",
//	       "tags": {},
//	       "domain_id": "domain-58010aa2e451",
//	       "created_at": "2022-06-21T09:22:45.340Z"
//	}
type EscalationPolicyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EscalationPolicyId string                                         `protobuf:"bytes,1,opt,name=escalation_policy_id,json=escalationPolicyId,proto3" json:"escalation_policy_id,omitempty"`
	Name               string                                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsDefault          bool                                           `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Rules              []*EscalationPolicyRule                        `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
	RepeatCount        int32                                          `protobuf:"varint,5,opt,name=repeat_count,json=repeatCount,proto3" json:"repeat_count,omitempty"`
	FinishCondition    EscalationPolicyInfo_EscalationFinishCondition `protobuf:"varint,6,opt,name=finish_condition,json=finishCondition,proto3,enum=spaceone.api.monitoring.v1.EscalationPolicyInfo_EscalationFinishCondition" json:"finish_condition,omitempty"`
	Scope              EscalationPolicyInfo_EscalationPolicyScope     `protobuf:"varint,7,opt,name=scope,proto3,enum=spaceone.api.monitoring.v1.EscalationPolicyInfo_EscalationPolicyScope" json:"scope,omitempty"`
	ProjectId          string                                         `protobuf:"bytes,8,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Tags               *_struct.Struct                                `protobuf:"bytes,9,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId           string                                         `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt          string                                         `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *EscalationPolicyInfo) Reset() {
	*x = EscalationPolicyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscalationPolicyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscalationPolicyInfo) ProtoMessage() {}

func (x *EscalationPolicyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscalationPolicyInfo.ProtoReflect.Descriptor instead.
func (*EscalationPolicyInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{6}
}

func (x *EscalationPolicyInfo) GetEscalationPolicyId() string {
	if x != nil {
		return x.EscalationPolicyId
	}
	return ""
}

func (x *EscalationPolicyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EscalationPolicyInfo) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *EscalationPolicyInfo) GetRules() []*EscalationPolicyRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *EscalationPolicyInfo) GetRepeatCount() int32 {
	if x != nil {
		return x.RepeatCount
	}
	return 0
}

func (x *EscalationPolicyInfo) GetFinishCondition() EscalationPolicyInfo_EscalationFinishCondition {
	if x != nil {
		return x.FinishCondition
	}
	return EscalationPolicyInfo_NONE
}

func (x *EscalationPolicyInfo) GetScope() EscalationPolicyInfo_EscalationPolicyScope {
	if x != nil {
		return x.Scope
	}
	return EscalationPolicyInfo_SCOPE_NONE
}

func (x *EscalationPolicyInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *EscalationPolicyInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *EscalationPolicyInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *EscalationPolicyInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

//	{
//	   "results": [
//	       {
//	           "escalation_policy_id": "ep-7c9745003372",
//	           "name": "0525-ms-test-1",
//	           "rules": [
//	               {
//	                   "notification_level": "LV1"
//	               }
//	           ],
//	           "finish_condition": "ACKNOWLEDGED",
//	           "scope": "DOMAIN",
//	           "tags": {},
//	           "domain_id": "domain-58010aa2e451",
//	           "created_at": "2022-05-25T09:31:15.150Z"
//	       },
//	       {
//	           "escalation_policy_id": "ep-d75670166af4",
//	           "name": "0525-ms-test-2",
//	           "rules": [
//	               {
//	                   "notification_level": "LV2",
//	                   "escalate_minutes": 30
//	               },
//	               {
//	                   "notification_level": "LV2"
//	               }
//	           ],
//	           "finish_condition": "ACKNOWLEDGED",
//	           "scope": "DOMAIN",
//	           "tags": {},
//	           "domain_id": "domain-58010aa2e451",
//	           "created_at": "2022-05-25T09:31:38.573Z"
//	       }
//	   ],
//	   "total_count": 2
//	}
type EscalationPoliciesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*EscalationPolicyInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                   `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *EscalationPoliciesInfo) Reset() {
	*x = EscalationPoliciesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscalationPoliciesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscalationPoliciesInfo) ProtoMessage() {}

func (x *EscalationPoliciesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscalationPoliciesInfo.ProtoReflect.Descriptor instead.
func (*EscalationPoliciesInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{7}
}

func (x *EscalationPoliciesInfo) GetResults() []*EscalationPolicyInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *EscalationPoliciesInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type EscalationPolicyStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    *v1.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DomainId string              `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *EscalationPolicyStatQuery) Reset() {
	*x = EscalationPolicyStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscalationPolicyStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscalationPolicyStatQuery) ProtoMessage() {}

func (x *EscalationPolicyStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscalationPolicyStatQuery.ProtoReflect.Descriptor instead.
func (*EscalationPolicyStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP(), []int{8}
}

func (x *EscalationPolicyStatQuery) GetQuery() *v1.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *EscalationPolicyStatQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

var File_spaceone_api_monitoring_v1_escalation_policy_proto protoreflect.FileDescriptor

var file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDesc = []byte{
	0x0a, 0x32, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x63,
	0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x02, 0x0a, 0x14,
	0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x71, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x42, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x75,
	0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x73, 0x63, 0x61, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x22, 0x53, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56,
	0x31, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56, 0x32, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03,
	0x4c, 0x56, 0x33, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56, 0x34, 0x10, 0x05, 0x12, 0x07,
	0x0a, 0x03, 0x4c, 0x56, 0x35, 0x10, 0x06, 0x22, 0xce, 0x03, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x7e, 0x0a, 0x10, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x53, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x22, 0x45, 0x0a, 0x19, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x4b, 0x4e,
	0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45,
	0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x02, 0x22, 0xe1, 0x03, 0x0a, 0x1d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x46, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x63,
	0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x7e, 0x0a, 0x10, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x53, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x19, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x41, 0x43, 0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x02, 0x22, 0x68, 0x0a, 0x17,
	0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x73, 0x63, 0x61, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x73, 0x63,
	0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0xcb, 0x04, 0x0a, 0x15, 0x45, 0x73, 0x63, 0x61,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x76, 0x0a, 0x10, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x5d, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x47, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x15,
	0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x02, 0x22, 0x45,
	0x0a, 0x19, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x4b, 0x4e, 0x4f, 0x57, 0x4c,
	0x45, 0x44, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x4c,
	0x56, 0x45, 0x44, 0x10, 0x02, 0x22, 0xcc, 0x05, 0x0a, 0x14, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30,
	0x0a, 0x14, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x46, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x75,
	0x0a, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x40, 0x0a, 0x15, 0x45,
	0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x02, 0x22, 0x45, 0x0a,
	0x19, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45,
	0x44, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56,
	0x45, 0x44, 0x10, 0x02, 0x22, 0x85, 0x01, 0x0a, 0x16, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x4a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x75, 0x0a, 0x19,
	0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x32, 0xf6, 0x08, 0x0a, 0x10, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xa9, 0x01, 0x0a, 0x06, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x39, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x63, 0x61,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x63, 0x61,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0xa9, 0x01, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x39, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x32, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0xad, 0x01, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a,
	0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2f, 0x73, 0x65, 0x74, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x89, 0x01, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c,
	0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xa0, 0x01, 0x0a,
	0x03, 0x67, 0x65, 0x74, 0x12, 0x36, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x12,
	0x9f, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x32, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x63, 0x61, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x88, 0x01, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x35, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x42, 0x41, 0x5a, 0x3f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73,
	0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescOnce sync.Once
	file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescData = file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDesc
)

func file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescGZIP() []byte {
	file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescOnce.Do(func() {
		file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescData)
	})
	return file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDescData
}

var file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_spaceone_api_monitoring_v1_escalation_policy_proto_goTypes = []interface{}{
	(EscalationPolicyRule_NotificationLevel)(0),                  // 0: spaceone.api.monitoring.v1.EscalationPolicyRule.NotificationLevel
	(CreateEscalationPolicyRequest_EscalationFinishCondition)(0), // 1: spaceone.api.monitoring.v1.CreateEscalationPolicyRequest.EscalationFinishCondition
	(UpdateEscalationPolicyRequest_EscalationFinishCondition)(0), // 2: spaceone.api.monitoring.v1.UpdateEscalationPolicyRequest.EscalationFinishCondition
	(EscalationPolicyQuery_EscalationPolicyScope)(0),             // 3: spaceone.api.monitoring.v1.EscalationPolicyQuery.EscalationPolicyScope
	(EscalationPolicyQuery_EscalationFinishCondition)(0),         // 4: spaceone.api.monitoring.v1.EscalationPolicyQuery.EscalationFinishCondition
	(EscalationPolicyInfo_EscalationPolicyScope)(0),              // 5: spaceone.api.monitoring.v1.EscalationPolicyInfo.EscalationPolicyScope
	(EscalationPolicyInfo_EscalationFinishCondition)(0),          // 6: spaceone.api.monitoring.v1.EscalationPolicyInfo.EscalationFinishCondition
	(*EscalationPolicyRule)(nil),                                 // 7: spaceone.api.monitoring.v1.EscalationPolicyRule
	(*CreateEscalationPolicyRequest)(nil),                        // 8: spaceone.api.monitoring.v1.CreateEscalationPolicyRequest
	(*UpdateEscalationPolicyRequest)(nil),                        // 9: spaceone.api.monitoring.v1.UpdateEscalationPolicyRequest
	(*EscalationPolicyRequest)(nil),                              // 10: spaceone.api.monitoring.v1.EscalationPolicyRequest
	(*GetEscalationPolicyRequest)(nil),                           // 11: spaceone.api.monitoring.v1.GetEscalationPolicyRequest
	(*EscalationPolicyQuery)(nil),                                // 12: spaceone.api.monitoring.v1.EscalationPolicyQuery
	(*EscalationPolicyInfo)(nil),                                 // 13: spaceone.api.monitoring.v1.EscalationPolicyInfo
	(*EscalationPoliciesInfo)(nil),                               // 14: spaceone.api.monitoring.v1.EscalationPoliciesInfo
	(*EscalationPolicyStatQuery)(nil),                            // 15: spaceone.api.monitoring.v1.EscalationPolicyStatQuery
	(*_struct.Struct)(nil),                                       // 16: google.protobuf.Struct
	(*v1.Query)(nil),                                             // 17: spaceone.api.core.v1.Query
	(*v1.StatisticsQuery)(nil),                                   // 18: spaceone.api.core.v1.StatisticsQuery
	(*empty.Empty)(nil),                                          // 19: google.protobuf.Empty
}
var file_spaceone_api_monitoring_v1_escalation_policy_proto_depIdxs = []int32{
	0,  // 0: spaceone.api.monitoring.v1.EscalationPolicyRule.notification_level:type_name -> spaceone.api.monitoring.v1.EscalationPolicyRule.NotificationLevel
	7,  // 1: spaceone.api.monitoring.v1.CreateEscalationPolicyRequest.rules:type_name -> spaceone.api.monitoring.v1.EscalationPolicyRule
	1,  // 2: spaceone.api.monitoring.v1.CreateEscalationPolicyRequest.finish_condition:type_name -> spaceone.api.monitoring.v1.CreateEscalationPolicyRequest.EscalationFinishCondition
	16, // 3: spaceone.api.monitoring.v1.CreateEscalationPolicyRequest.tags:type_name -> google.protobuf.Struct
	7,  // 4: spaceone.api.monitoring.v1.UpdateEscalationPolicyRequest.rules:type_name -> spaceone.api.monitoring.v1.EscalationPolicyRule
	2,  // 5: spaceone.api.monitoring.v1.UpdateEscalationPolicyRequest.finish_condition:type_name -> spaceone.api.monitoring.v1.UpdateEscalationPolicyRequest.EscalationFinishCondition
	16, // 6: spaceone.api.monitoring.v1.UpdateEscalationPolicyRequest.tags:type_name -> google.protobuf.Struct
	17, // 7: spaceone.api.monitoring.v1.EscalationPolicyQuery.query:type_name -> spaceone.api.core.v1.Query
	4,  // 8: spaceone.api.monitoring.v1.EscalationPolicyQuery.finish_condition:type_name -> spaceone.api.monitoring.v1.EscalationPolicyQuery.EscalationFinishCondition
	3,  // 9: spaceone.api.monitoring.v1.EscalationPolicyQuery.scope:type_name -> spaceone.api.monitoring.v1.EscalationPolicyQuery.EscalationPolicyScope
	7,  // 10: spaceone.api.monitoring.v1.EscalationPolicyInfo.rules:type_name -> spaceone.api.monitoring.v1.EscalationPolicyRule
	6,  // 11: spaceone.api.monitoring.v1.EscalationPolicyInfo.finish_condition:type_name -> spaceone.api.monitoring.v1.EscalationPolicyInfo.EscalationFinishCondition
	5,  // 12: spaceone.api.monitoring.v1.EscalationPolicyInfo.scope:type_name -> spaceone.api.monitoring.v1.EscalationPolicyInfo.EscalationPolicyScope
	16, // 13: spaceone.api.monitoring.v1.EscalationPolicyInfo.tags:type_name -> google.protobuf.Struct
	13, // 14: spaceone.api.monitoring.v1.EscalationPoliciesInfo.results:type_name -> spaceone.api.monitoring.v1.EscalationPolicyInfo
	18, // 15: spaceone.api.monitoring.v1.EscalationPolicyStatQuery.query:type_name -> spaceone.api.core.v1.StatisticsQuery
	8,  // 16: spaceone.api.monitoring.v1.EscalationPolicy.create:input_type -> spaceone.api.monitoring.v1.CreateEscalationPolicyRequest
	9,  // 17: spaceone.api.monitoring.v1.EscalationPolicy.update:input_type -> spaceone.api.monitoring.v1.UpdateEscalationPolicyRequest
	10, // 18: spaceone.api.monitoring.v1.EscalationPolicy.set_default:input_type -> spaceone.api.monitoring.v1.EscalationPolicyRequest
	10, // 19: spaceone.api.monitoring.v1.EscalationPolicy.delete:input_type -> spaceone.api.monitoring.v1.EscalationPolicyRequest
	11, // 20: spaceone.api.monitoring.v1.EscalationPolicy.get:input_type -> spaceone.api.monitoring.v1.GetEscalationPolicyRequest
	12, // 21: spaceone.api.monitoring.v1.EscalationPolicy.list:input_type -> spaceone.api.monitoring.v1.EscalationPolicyQuery
	15, // 22: spaceone.api.monitoring.v1.EscalationPolicy.stat:input_type -> spaceone.api.monitoring.v1.EscalationPolicyStatQuery
	13, // 23: spaceone.api.monitoring.v1.EscalationPolicy.create:output_type -> spaceone.api.monitoring.v1.EscalationPolicyInfo
	13, // 24: spaceone.api.monitoring.v1.EscalationPolicy.update:output_type -> spaceone.api.monitoring.v1.EscalationPolicyInfo
	13, // 25: spaceone.api.monitoring.v1.EscalationPolicy.set_default:output_type -> spaceone.api.monitoring.v1.EscalationPolicyInfo
	19, // 26: spaceone.api.monitoring.v1.EscalationPolicy.delete:output_type -> google.protobuf.Empty
	13, // 27: spaceone.api.monitoring.v1.EscalationPolicy.get:output_type -> spaceone.api.monitoring.v1.EscalationPolicyInfo
	14, // 28: spaceone.api.monitoring.v1.EscalationPolicy.list:output_type -> spaceone.api.monitoring.v1.EscalationPoliciesInfo
	16, // 29: spaceone.api.monitoring.v1.EscalationPolicy.stat:output_type -> google.protobuf.Struct
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_spaceone_api_monitoring_v1_escalation_policy_proto_init() }
func file_spaceone_api_monitoring_v1_escalation_policy_proto_init() {
	if File_spaceone_api_monitoring_v1_escalation_policy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscalationPolicyRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEscalationPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEscalationPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscalationPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEscalationPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscalationPolicyQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscalationPolicyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscalationPoliciesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscalationPolicyStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_monitoring_v1_escalation_policy_proto_goTypes,
		DependencyIndexes: file_spaceone_api_monitoring_v1_escalation_policy_proto_depIdxs,
		EnumInfos:         file_spaceone_api_monitoring_v1_escalation_policy_proto_enumTypes,
		MessageInfos:      file_spaceone_api_monitoring_v1_escalation_policy_proto_msgTypes,
	}.Build()
	File_spaceone_api_monitoring_v1_escalation_policy_proto = out.File
	file_spaceone_api_monitoring_v1_escalation_policy_proto_rawDesc = nil
	file_spaceone_api_monitoring_v1_escalation_policy_proto_goTypes = nil
	file_spaceone_api_monitoring_v1_escalation_policy_proto_depIdxs = nil
}
