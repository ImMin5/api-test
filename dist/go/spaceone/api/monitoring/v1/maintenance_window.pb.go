// A MaintenanceWindow is a resource snoozing Alerts during maintenance time.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: spaceone/api/monitoring/v1/maintenance_window.proto

package v1

import (
	v1 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v1"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MaintenanceWindowQuery_MaintenanceWindowState int32

const (
	MaintenanceWindowQuery_NONE   MaintenanceWindowQuery_MaintenanceWindowState = 0
	MaintenanceWindowQuery_OPEN   MaintenanceWindowQuery_MaintenanceWindowState = 1
	MaintenanceWindowQuery_CLOSED MaintenanceWindowQuery_MaintenanceWindowState = 2
)

// Enum value maps for MaintenanceWindowQuery_MaintenanceWindowState.
var (
	MaintenanceWindowQuery_MaintenanceWindowState_name = map[int32]string{
		0: "NONE",
		1: "OPEN",
		2: "CLOSED",
	}
	MaintenanceWindowQuery_MaintenanceWindowState_value = map[string]int32{
		"NONE":   0,
		"OPEN":   1,
		"CLOSED": 2,
	}
)

func (x MaintenanceWindowQuery_MaintenanceWindowState) Enum() *MaintenanceWindowQuery_MaintenanceWindowState {
	p := new(MaintenanceWindowQuery_MaintenanceWindowState)
	*p = x
	return p
}

func (x MaintenanceWindowQuery_MaintenanceWindowState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaintenanceWindowQuery_MaintenanceWindowState) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_enumTypes[0].Descriptor()
}

func (MaintenanceWindowQuery_MaintenanceWindowState) Type() protoreflect.EnumType {
	return &file_spaceone_api_monitoring_v1_maintenance_window_proto_enumTypes[0]
}

func (x MaintenanceWindowQuery_MaintenanceWindowState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaintenanceWindowQuery_MaintenanceWindowState.Descriptor instead.
func (MaintenanceWindowQuery_MaintenanceWindowState) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP(), []int{4, 0}
}

type MaintenanceWindowInfo_MaintenanceWindowState int32

const (
	MaintenanceWindowInfo_NONE   MaintenanceWindowInfo_MaintenanceWindowState = 0
	MaintenanceWindowInfo_OPEN   MaintenanceWindowInfo_MaintenanceWindowState = 1
	MaintenanceWindowInfo_CLOSED MaintenanceWindowInfo_MaintenanceWindowState = 2
)

// Enum value maps for MaintenanceWindowInfo_MaintenanceWindowState.
var (
	MaintenanceWindowInfo_MaintenanceWindowState_name = map[int32]string{
		0: "NONE",
		1: "OPEN",
		2: "CLOSED",
	}
	MaintenanceWindowInfo_MaintenanceWindowState_value = map[string]int32{
		"NONE":   0,
		"OPEN":   1,
		"CLOSED": 2,
	}
)

func (x MaintenanceWindowInfo_MaintenanceWindowState) Enum() *MaintenanceWindowInfo_MaintenanceWindowState {
	p := new(MaintenanceWindowInfo_MaintenanceWindowState)
	*p = x
	return p
}

func (x MaintenanceWindowInfo_MaintenanceWindowState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaintenanceWindowInfo_MaintenanceWindowState) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_enumTypes[1].Descriptor()
}

func (MaintenanceWindowInfo_MaintenanceWindowState) Type() protoreflect.EnumType {
	return &file_spaceone_api_monitoring_v1_maintenance_window_proto_enumTypes[1]
}

func (x MaintenanceWindowInfo_MaintenanceWindowState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaintenanceWindowInfo_MaintenanceWindowState.Descriptor instead.
func (MaintenanceWindowInfo_MaintenanceWindowState) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP(), []int{5, 0}
}

//	{
//	   "title": "The dev server is under regular maintenance.",
//	   "projects": ["project-123456789012"],
//	   "start_time": "2022-01-01T09:45:00.000Z",
//	   "end_time": "2022-01-01T10:45:00.000Z",
//	   "domain_id": "domain-123456789012"
//	}
type CreateMaintenanceWindowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Projects  []string `protobuf:"bytes,2,rep,name=projects,proto3" json:"projects,omitempty"`
	StartTime string   `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string   `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// +optional
	Tags     *_struct.Struct `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId string          `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CreateMaintenanceWindowRequest) Reset() {
	*x = CreateMaintenanceWindowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMaintenanceWindowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMaintenanceWindowRequest) ProtoMessage() {}

func (x *CreateMaintenanceWindowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMaintenanceWindowRequest.ProtoReflect.Descriptor instead.
func (*CreateMaintenanceWindowRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMaintenanceWindowRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMaintenanceWindowRequest) GetProjects() []string {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *CreateMaintenanceWindowRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateMaintenanceWindowRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CreateMaintenanceWindowRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateMaintenanceWindowRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "maintenance_window_id": "mw-123456789012",
//	   "title": "The dev server is under regular maintenance.",
//	   "projects": ["project-123456789012"],
//	   "start_time": "2022-01-03T00:00:00.000Z",
//	   "end_time": "2022-01-03T01:00:00.000Z",
//	   "domain_id": "domain-123456789012"
//	}
type UpdateMaintenanceWindowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaintenanceWindowId string `protobuf:"bytes,1,opt,name=maintenance_window_id,json=maintenanceWindowId,proto3" json:"maintenance_window_id,omitempty"`
	// +optional
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// +optional
	Projects []string `protobuf:"bytes,3,rep,name=projects,proto3" json:"projects,omitempty"`
	// +optional
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// +optional
	EndTime string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// +optional
	Tags     *_struct.Struct `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId string          `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *UpdateMaintenanceWindowRequest) Reset() {
	*x = UpdateMaintenanceWindowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMaintenanceWindowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMaintenanceWindowRequest) ProtoMessage() {}

func (x *UpdateMaintenanceWindowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMaintenanceWindowRequest.ProtoReflect.Descriptor instead.
func (*UpdateMaintenanceWindowRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateMaintenanceWindowRequest) GetMaintenanceWindowId() string {
	if x != nil {
		return x.MaintenanceWindowId
	}
	return ""
}

func (x *UpdateMaintenanceWindowRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateMaintenanceWindowRequest) GetProjects() []string {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *UpdateMaintenanceWindowRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UpdateMaintenanceWindowRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *UpdateMaintenanceWindowRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateMaintenanceWindowRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "maintenance_window_id": "mw-123456789012",
//	   "domain_id": "domain-123456789012"
//	}
type MaintenanceWindowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaintenanceWindowId string `protobuf:"bytes,1,opt,name=maintenance_window_id,json=maintenanceWindowId,proto3" json:"maintenance_window_id,omitempty"`
	DomainId            string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *MaintenanceWindowRequest) Reset() {
	*x = MaintenanceWindowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceWindowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceWindowRequest) ProtoMessage() {}

func (x *MaintenanceWindowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceWindowRequest.ProtoReflect.Descriptor instead.
func (*MaintenanceWindowRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP(), []int{2}
}

func (x *MaintenanceWindowRequest) GetMaintenanceWindowId() string {
	if x != nil {
		return x.MaintenanceWindowId
	}
	return ""
}

func (x *MaintenanceWindowRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "maintenance_window_id": "mw-123456789012",
//	   "domain_id": "domain-123456789012"
//	}
type GetMaintenanceWindowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaintenanceWindowId string `protobuf:"bytes,1,opt,name=maintenance_window_id,json=maintenanceWindowId,proto3" json:"maintenance_window_id,omitempty"`
	DomainId            string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	Only []string `protobuf:"bytes,3,rep,name=only,proto3" json:"only,omitempty"`
}

func (x *GetMaintenanceWindowRequest) Reset() {
	*x = GetMaintenanceWindowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaintenanceWindowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaintenanceWindowRequest) ProtoMessage() {}

func (x *GetMaintenanceWindowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaintenanceWindowRequest.ProtoReflect.Descriptor instead.
func (*GetMaintenanceWindowRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP(), []int{3}
}

func (x *GetMaintenanceWindowRequest) GetMaintenanceWindowId() string {
	if x != nil {
		return x.MaintenanceWindowId
	}
	return ""
}

func (x *GetMaintenanceWindowRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *GetMaintenanceWindowRequest) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

//	{
//	   "query": {},
//	   "domain_id": "domain-123456789012"
//	}
type MaintenanceWindowQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query *v1.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	MaintenanceWindowId string `protobuf:"bytes,2,opt,name=maintenance_window_id,json=maintenanceWindowId,proto3" json:"maintenance_window_id,omitempty"`
	// +optional
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// +optional
	State MaintenanceWindowQuery_MaintenanceWindowState `protobuf:"varint,4,opt,name=state,proto3,enum=spaceone.api.monitoring.v1.MaintenanceWindowQuery_MaintenanceWindowState" json:"state,omitempty"`
	// +optional
	ProjectId string `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// +optional
	CreatedBy string `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	DomainId  string `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *MaintenanceWindowQuery) Reset() {
	*x = MaintenanceWindowQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceWindowQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceWindowQuery) ProtoMessage() {}

func (x *MaintenanceWindowQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceWindowQuery.ProtoReflect.Descriptor instead.
func (*MaintenanceWindowQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP(), []int{4}
}

func (x *MaintenanceWindowQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *MaintenanceWindowQuery) GetMaintenanceWindowId() string {
	if x != nil {
		return x.MaintenanceWindowId
	}
	return ""
}

func (x *MaintenanceWindowQuery) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MaintenanceWindowQuery) GetState() MaintenanceWindowQuery_MaintenanceWindowState {
	if x != nil {
		return x.State
	}
	return MaintenanceWindowQuery_NONE
}

func (x *MaintenanceWindowQuery) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *MaintenanceWindowQuery) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MaintenanceWindowQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	     "maintenance_window_id": "mw-123456789012",
//	     "title": "The dev server is under regular maintenance.",
//	     "state": "OPEN",
//	     "start_time": "2022-01-01T09:45:00.000Z",
//	     "end_time": "2022-01-01T10:45:00.000Z",
//	     "tags": {},
//	     "projects": [
//	     "project-123456789012"
//	     ],
//	     "domain_id": "domain-123456789012",
//	     "created_by": "user1@email.com",
//	     "created_at": "2022-06-02T09:46:49.196Z",
//	     "updated_at": "2022-06-02T09:46:49.196Z"
//	}
type MaintenanceWindowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaintenanceWindowId string                                       `protobuf:"bytes,1,opt,name=maintenance_window_id,json=maintenanceWindowId,proto3" json:"maintenance_window_id,omitempty"`
	Title               string                                       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	State               MaintenanceWindowInfo_MaintenanceWindowState `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.monitoring.v1.MaintenanceWindowInfo_MaintenanceWindowState" json:"state,omitempty"`
	StartTime           string                                       `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime             string                                       `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Tags                *_struct.Struct                              `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	Projects            []string                                     `protobuf:"bytes,11,rep,name=projects,proto3" json:"projects,omitempty"`
	DomainId            string                                       `protobuf:"bytes,12,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedBy           string                                       `protobuf:"bytes,13,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt           string                                       `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           string                                       `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ClosedAt            string                                       `protobuf:"bytes,23,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
}

func (x *MaintenanceWindowInfo) Reset() {
	*x = MaintenanceWindowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceWindowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceWindowInfo) ProtoMessage() {}

func (x *MaintenanceWindowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceWindowInfo.ProtoReflect.Descriptor instead.
func (*MaintenanceWindowInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP(), []int{5}
}

func (x *MaintenanceWindowInfo) GetMaintenanceWindowId() string {
	if x != nil {
		return x.MaintenanceWindowId
	}
	return ""
}

func (x *MaintenanceWindowInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MaintenanceWindowInfo) GetState() MaintenanceWindowInfo_MaintenanceWindowState {
	if x != nil {
		return x.State
	}
	return MaintenanceWindowInfo_NONE
}

func (x *MaintenanceWindowInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *MaintenanceWindowInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *MaintenanceWindowInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MaintenanceWindowInfo) GetProjects() []string {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *MaintenanceWindowInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *MaintenanceWindowInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MaintenanceWindowInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MaintenanceWindowInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *MaintenanceWindowInfo) GetClosedAt() string {
	if x != nil {
		return x.ClosedAt
	}
	return ""
}

//	{
//	     "results": [
//	     {
//	     "maintenance_window_id": "mw-123456789012",
//	     "title": "The dev server is under regular maintenance.",
//	     "state": "OPEN",
//	     "start_time": "2022-06-03T00:00:00.000Z",
//	     "end_time": "2022-06-03T01:00:00.000Z",
//	     "tags": {},
//	     "projects": [
//	     "project-123456789012"
//	     ],
//	     "domain_id": "domain-123456789012",
//	     "created_by": "user1@email.com",
//	     "created_at": "2022-01-01T09:59:01.966Z",
//	     "updated_at": "2022-01-01T09:59:01.966Z"
//	     },
//	     {
//	     "maintenance_window_id": "mw-987654321098",
//	     "title": "The prd server is under regular maintenance.",
//	     "state": "OPEN",
//	     "start_time": "2022-06-03T00:00:00.000Z",
//	     "end_time": "2022-06-03T01:00:00.000Z",
//	     "tags": {},
//	     "projects": [
//	     "project-123456789012"
//	     ],
//	     "domain_id": "domain-123456789012",
//	     "created_by": "user2@email.com",
//	     "created_at": "2022-01-02T09:57:28.999Z",
//	     "updated_at": "2022-01-02T09:57:28.999Z"
//	     }
//	     ],
//	     "total_count": 50
//	}
type MaintenanceWindowsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*MaintenanceWindowInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                    `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *MaintenanceWindowsInfo) Reset() {
	*x = MaintenanceWindowsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceWindowsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceWindowsInfo) ProtoMessage() {}

func (x *MaintenanceWindowsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceWindowsInfo.ProtoReflect.Descriptor instead.
func (*MaintenanceWindowsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP(), []int{6}
}

func (x *MaintenanceWindowsInfo) GetResults() []*MaintenanceWindowInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *MaintenanceWindowsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type MaintenanceWindowStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    *v1.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DomainId string              `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *MaintenanceWindowStatQuery) Reset() {
	*x = MaintenanceWindowStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintenanceWindowStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceWindowStatQuery) ProtoMessage() {}

func (x *MaintenanceWindowStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceWindowStatQuery.ProtoReflect.Descriptor instead.
func (*MaintenanceWindowStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP(), []int{7}
}

func (x *MaintenanceWindowStatQuery) GetQuery() *v1.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *MaintenanceWindowStatQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

var File_spaceone_api_monitoring_v1_maintenance_window_proto protoreflect.FileDescriptor

var file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDesc = []byte{
	0x0a, 0x33, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd6, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x8a, 0x02, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x18, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0x8b, 0x03, 0x0a, 0x16, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x5f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x16, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f,
	0x53, 0x45, 0x44, 0x10, 0x02, 0x22, 0x95, 0x04, 0x0a, 0x15, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x32, 0x0a, 0x15, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x5e, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x38, 0x0a, 0x16, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x22, 0x86, 0x01,
	0x0a, 0x16, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x1a, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x32, 0xef,
	0x07, 0x0a, 0x11, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x12, 0xac, 0x01, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x3a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2d, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0xac, 0x01, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2d, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0xa4, 0x01, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x34, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a,
	0x22, 0x27, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2d, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x2f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x03, 0x67, 0x65,
	0x74, 0x12, 0x37, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2d, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2f, 0x67, 0x65, 0x74, 0x12,
	0xa1, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x32, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2d, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x8a, 0x01, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x36, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2d, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescOnce sync.Once
	file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescData = file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDesc
)

func file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescGZIP() []byte {
	file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescOnce.Do(func() {
		file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescData)
	})
	return file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDescData
}

var file_spaceone_api_monitoring_v1_maintenance_window_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_spaceone_api_monitoring_v1_maintenance_window_proto_goTypes = []interface{}{
	(MaintenanceWindowQuery_MaintenanceWindowState)(0), // 0: spaceone.api.monitoring.v1.MaintenanceWindowQuery.MaintenanceWindowState
	(MaintenanceWindowInfo_MaintenanceWindowState)(0),  // 1: spaceone.api.monitoring.v1.MaintenanceWindowInfo.MaintenanceWindowState
	(*CreateMaintenanceWindowRequest)(nil),             // 2: spaceone.api.monitoring.v1.CreateMaintenanceWindowRequest
	(*UpdateMaintenanceWindowRequest)(nil),             // 3: spaceone.api.monitoring.v1.UpdateMaintenanceWindowRequest
	(*MaintenanceWindowRequest)(nil),                   // 4: spaceone.api.monitoring.v1.MaintenanceWindowRequest
	(*GetMaintenanceWindowRequest)(nil),                // 5: spaceone.api.monitoring.v1.GetMaintenanceWindowRequest
	(*MaintenanceWindowQuery)(nil),                     // 6: spaceone.api.monitoring.v1.MaintenanceWindowQuery
	(*MaintenanceWindowInfo)(nil),                      // 7: spaceone.api.monitoring.v1.MaintenanceWindowInfo
	(*MaintenanceWindowsInfo)(nil),                     // 8: spaceone.api.monitoring.v1.MaintenanceWindowsInfo
	(*MaintenanceWindowStatQuery)(nil),                 // 9: spaceone.api.monitoring.v1.MaintenanceWindowStatQuery
	(*_struct.Struct)(nil),                             // 10: google.protobuf.Struct
	(*v1.Query)(nil),                                   // 11: spaceone.api.core.v1.Query
	(*v1.StatisticsQuery)(nil),                         // 12: spaceone.api.core.v1.StatisticsQuery
}
var file_spaceone_api_monitoring_v1_maintenance_window_proto_depIdxs = []int32{
	10, // 0: spaceone.api.monitoring.v1.CreateMaintenanceWindowRequest.tags:type_name -> google.protobuf.Struct
	10, // 1: spaceone.api.monitoring.v1.UpdateMaintenanceWindowRequest.tags:type_name -> google.protobuf.Struct
	11, // 2: spaceone.api.monitoring.v1.MaintenanceWindowQuery.query:type_name -> spaceone.api.core.v1.Query
	0,  // 3: spaceone.api.monitoring.v1.MaintenanceWindowQuery.state:type_name -> spaceone.api.monitoring.v1.MaintenanceWindowQuery.MaintenanceWindowState
	1,  // 4: spaceone.api.monitoring.v1.MaintenanceWindowInfo.state:type_name -> spaceone.api.monitoring.v1.MaintenanceWindowInfo.MaintenanceWindowState
	10, // 5: spaceone.api.monitoring.v1.MaintenanceWindowInfo.tags:type_name -> google.protobuf.Struct
	7,  // 6: spaceone.api.monitoring.v1.MaintenanceWindowsInfo.results:type_name -> spaceone.api.monitoring.v1.MaintenanceWindowInfo
	12, // 7: spaceone.api.monitoring.v1.MaintenanceWindowStatQuery.query:type_name -> spaceone.api.core.v1.StatisticsQuery
	2,  // 8: spaceone.api.monitoring.v1.MaintenanceWindow.create:input_type -> spaceone.api.monitoring.v1.CreateMaintenanceWindowRequest
	3,  // 9: spaceone.api.monitoring.v1.MaintenanceWindow.update:input_type -> spaceone.api.monitoring.v1.UpdateMaintenanceWindowRequest
	4,  // 10: spaceone.api.monitoring.v1.MaintenanceWindow.close:input_type -> spaceone.api.monitoring.v1.MaintenanceWindowRequest
	5,  // 11: spaceone.api.monitoring.v1.MaintenanceWindow.get:input_type -> spaceone.api.monitoring.v1.GetMaintenanceWindowRequest
	6,  // 12: spaceone.api.monitoring.v1.MaintenanceWindow.list:input_type -> spaceone.api.monitoring.v1.MaintenanceWindowQuery
	9,  // 13: spaceone.api.monitoring.v1.MaintenanceWindow.stat:input_type -> spaceone.api.monitoring.v1.MaintenanceWindowStatQuery
	7,  // 14: spaceone.api.monitoring.v1.MaintenanceWindow.create:output_type -> spaceone.api.monitoring.v1.MaintenanceWindowInfo
	7,  // 15: spaceone.api.monitoring.v1.MaintenanceWindow.update:output_type -> spaceone.api.monitoring.v1.MaintenanceWindowInfo
	7,  // 16: spaceone.api.monitoring.v1.MaintenanceWindow.close:output_type -> spaceone.api.monitoring.v1.MaintenanceWindowInfo
	7,  // 17: spaceone.api.monitoring.v1.MaintenanceWindow.get:output_type -> spaceone.api.monitoring.v1.MaintenanceWindowInfo
	8,  // 18: spaceone.api.monitoring.v1.MaintenanceWindow.list:output_type -> spaceone.api.monitoring.v1.MaintenanceWindowsInfo
	10, // 19: spaceone.api.monitoring.v1.MaintenanceWindow.stat:output_type -> google.protobuf.Struct
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_spaceone_api_monitoring_v1_maintenance_window_proto_init() }
func file_spaceone_api_monitoring_v1_maintenance_window_proto_init() {
	if File_spaceone_api_monitoring_v1_maintenance_window_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMaintenanceWindowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMaintenanceWindowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceWindowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaintenanceWindowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceWindowQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceWindowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceWindowsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintenanceWindowStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_monitoring_v1_maintenance_window_proto_goTypes,
		DependencyIndexes: file_spaceone_api_monitoring_v1_maintenance_window_proto_depIdxs,
		EnumInfos:         file_spaceone_api_monitoring_v1_maintenance_window_proto_enumTypes,
		MessageInfos:      file_spaceone_api_monitoring_v1_maintenance_window_proto_msgTypes,
	}.Build()
	File_spaceone_api_monitoring_v1_maintenance_window_proto = out.File
	file_spaceone_api_monitoring_v1_maintenance_window_proto_rawDesc = nil
	file_spaceone_api_monitoring_v1_maintenance_window_proto_goTypes = nil
	file_spaceone_api_monitoring_v1_maintenance_window_proto_depIdxs = nil
}
