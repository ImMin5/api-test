// A Metric is a monitoring metric of a specific cloud service delivered from a DataSource.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: spaceone/api/monitoring/v1/metric.proto

package v1

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//	{
//	   "data_source_id": "ds-31190a65a42a",
//	   "resources": ["cloud-svc-cd0105d255da"],
//	   "domain_id": "domain-58010aa2e451"
//	}
type MetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceId string   `protobuf:"bytes,1,opt,name=data_source_id,json=dataSourceId,proto3" json:"data_source_id,omitempty"`
	Resources    []string `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	DomainId     string   `protobuf:"bytes,10,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *MetricRequest) Reset() {
	*x = MetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_metric_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricRequest) ProtoMessage() {}

func (x *MetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_metric_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricRequest.ProtoReflect.Descriptor instead.
func (*MetricRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_metric_proto_rawDescGZIP(), []int{0}
}

func (x *MetricRequest) GetDataSourceId() string {
	if x != nil {
		return x.DataSourceId
	}
	return ""
}

func (x *MetricRequest) GetResources() []string {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *MetricRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "data_source_id": "ds-31190a65a42a",
//	   "metric_query": {
//	       "cloud-svc-cd0105d255da": {
//	           "Dimensions": [
//	               {
//	                   "Name": "InstanceId",
//	                   "Value": "i-0400cdd39f1a4d5e9"
//	               }
//	           ],
//	           "MetricName": "CPUUtilization",
//	           "Namespace": "AWS/EC2"
//	       }
//	   },
//	   "metric": "CPUUtilization",
//	   "start": "2022-06-21T03:11:29.438Z",
//	   "end": "2022-06-21T04:11:29.438Z",
//	   "stat": "AVERAGE",
//	   "domain_id": "domain-58010aa2e451"
//	}
type MetricDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceId string          `protobuf:"bytes,1,opt,name=data_source_id,json=dataSourceId,proto3" json:"data_source_id,omitempty"`
	MetricQuery  *_struct.Struct `protobuf:"bytes,2,opt,name=metric_query,json=metricQuery,proto3" json:"metric_query,omitempty"`
	Metric       string          `protobuf:"bytes,3,opt,name=metric,proto3" json:"metric,omitempty"`
	Start        string          `protobuf:"bytes,10,opt,name=start,proto3" json:"start,omitempty"`
	End          string          `protobuf:"bytes,11,opt,name=end,proto3" json:"end,omitempty"`
	// +optional
	Period int32 `protobuf:"varint,12,opt,name=period,proto3" json:"period,omitempty"`
	// +optional
	Stat     string `protobuf:"bytes,13,opt,name=stat,proto3" json:"stat,omitempty"`
	DomainId string `protobuf:"bytes,20,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *MetricDataRequest) Reset() {
	*x = MetricDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_metric_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDataRequest) ProtoMessage() {}

func (x *MetricDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_metric_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricDataRequest.ProtoReflect.Descriptor instead.
func (*MetricDataRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_metric_proto_rawDescGZIP(), []int{1}
}

func (x *MetricDataRequest) GetDataSourceId() string {
	if x != nil {
		return x.DataSourceId
	}
	return ""
}

func (x *MetricDataRequest) GetMetricQuery() *_struct.Struct {
	if x != nil {
		return x.MetricQuery
	}
	return nil
}

func (x *MetricDataRequest) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *MetricDataRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *MetricDataRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *MetricDataRequest) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *MetricDataRequest) GetStat() string {
	if x != nil {
		return x.Stat
	}
	return ""
}

func (x *MetricDataRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type MetricInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name        string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group       string          `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Unit        *_struct.Struct `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	MetricQuery *_struct.Struct `protobuf:"bytes,5,opt,name=metric_query,json=metricQuery,proto3" json:"metric_query,omitempty"`
}

func (x *MetricInfo) Reset() {
	*x = MetricInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_metric_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricInfo) ProtoMessage() {}

func (x *MetricInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_metric_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricInfo.ProtoReflect.Descriptor instead.
func (*MetricInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_metric_proto_rawDescGZIP(), []int{2}
}

func (x *MetricInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MetricInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetricInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *MetricInfo) GetUnit() *_struct.Struct {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *MetricInfo) GetMetricQuery() *_struct.Struct {
	if x != nil {
		return x.MetricQuery
	}
	return nil
}

//	{
//	   "metrics": [
//	       {
//	           "key": "CPUUtilization",
//	           "group": "AWS/EC2",
//	           "name": "CPUUtilization",
//	           "unit": {
//	               "y": "Percent",
//	               "x": "Timestamp"
//	           },
//	           "metric_query": {
//	               "cloud-svc-cd0105d255da": {
//	                   "Dimensions": [
//	                       {
//	                           "Name": "InstanceId",
//	                           "Value": "i-0400cdd39f1a4d5e9"
//	                       }
//	                   ],
//	                   "MetricName": "CPUUtilization",
//	                   "Namespace": "AWS/EC2"
//	               }
//	           }
//	       },
//	       {
//	           "key": "NetworkIn",
//	           "group": "AWS/EC2",
//	           "name": "NetworkIn",
//	           "unit": {
//	               "y": "Bytes",
//	               "x": "Timestamp"
//	           },
//	           "metric_query": {
//	               "cloud-svc-cd0105d255da": {
//	                   "Dimensions": [
//	                       {
//	                           "Name": "InstanceId",
//	                           "Value": "i-0400cdd39f1a4d5e9"
//	                       }
//	                   ],
//	                   "MetricName": "NetworkIn",
//	                   "Namespace": "AWS/EC2"
//	               }
//	           }
//	       }
//	   ],
//	   "available_resources": {
//	       "cloud-svc-cd0105d255da": true
//	   },
//	   "domain_id": "domain-31190a65a42a"
//	}
type MetricsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics            []*MetricInfo   `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	AvailableResources *_struct.Struct `protobuf:"bytes,2,opt,name=available_resources,json=availableResources,proto3" json:"available_resources,omitempty"`
	DomainId           string          `protobuf:"bytes,3,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *MetricsInfo) Reset() {
	*x = MetricsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_metric_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsInfo) ProtoMessage() {}

func (x *MetricsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_metric_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsInfo.ProtoReflect.Descriptor instead.
func (*MetricsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_metric_proto_rawDescGZIP(), []int{3}
}

func (x *MetricsInfo) GetMetrics() []*MetricInfo {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *MetricsInfo) GetAvailableResources() *_struct.Struct {
	if x != nil {
		return x.AvailableResources
	}
	return nil
}

func (x *MetricsInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "labels": [
//	       "2022-06-21T03:13:00.000Z",
//	       "2022-06-21T03:18:00.000Z",
//	       "2022-06-21T03:23:00.000Z",
//	       "2022-06-21T03:28:00.000Z",
//	       "2022-06-21T03:33:00.000Z",
//	       "2022-06-21T03:38:00.000Z",
//	       "2022-06-21T03:43:00.000Z",
//	       "2022-06-21T03:48:00.000Z",
//	       "2022-06-21T03:53:00.000Z",
//	       "2022-06-21T03:58:00.000Z",
//	       "2022-06-21T04:03:00.000Z",
//	       "2022-06-21T04:08:00.000Z"
//	   ],
//	   "resource_values": {
//	       "cloud-svc-cd0105d255da": [
//	           0.099999999999999,
//	           0.10001852366397981,
//	           0.10001852366397981,
//	           0.1328230362675432,
//	           0.099472075576548,
//	           0.06507936507936621,
//	           0.166703713994628,
//	           0.1338983050847476,
//	           0.1327868852458988,
//	           0.1339168287487284,
//	           0.1328610417160508,
//	           0.10056497175141618
//	       ]
//	   },
//	   "domain_id": "domain-58010aa2e451"
//	}
type MetricDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels   *_struct.ListValue `protobuf:"bytes,1,opt,name=labels,proto3" json:"labels,omitempty"`
	Values   *_struct.Struct    `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
	DomainId string             `protobuf:"bytes,3,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *MetricDataInfo) Reset() {
	*x = MetricDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_monitoring_v1_metric_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDataInfo) ProtoMessage() {}

func (x *MetricDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_monitoring_v1_metric_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricDataInfo.ProtoReflect.Descriptor instead.
func (*MetricDataInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_monitoring_v1_metric_proto_rawDescGZIP(), []int{4}
}

func (x *MetricDataInfo) GetLabels() *_struct.ListValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetricDataInfo) GetValues() *_struct.Struct {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *MetricDataInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

var File_spaceone_api_monitoring_v1_metric_proto protoreflect.FileDescriptor

var file_spaceone_api_monitoring_v1_metric_proto_rawDesc = []byte{
	0x0a, 0x27, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x70, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x3a, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x2b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x3a, 0x0a, 0x0c,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0xb6, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x48, 0x0a, 0x13, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x32, 0x9f, 0x02, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x81, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x25,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x90, 0x01, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x2d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f,
	0x67, 0x65, 0x74, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65,
	0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f,
	0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_monitoring_v1_metric_proto_rawDescOnce sync.Once
	file_spaceone_api_monitoring_v1_metric_proto_rawDescData = file_spaceone_api_monitoring_v1_metric_proto_rawDesc
)

func file_spaceone_api_monitoring_v1_metric_proto_rawDescGZIP() []byte {
	file_spaceone_api_monitoring_v1_metric_proto_rawDescOnce.Do(func() {
		file_spaceone_api_monitoring_v1_metric_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_monitoring_v1_metric_proto_rawDescData)
	})
	return file_spaceone_api_monitoring_v1_metric_proto_rawDescData
}

var file_spaceone_api_monitoring_v1_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_spaceone_api_monitoring_v1_metric_proto_goTypes = []interface{}{
	(*MetricRequest)(nil),     // 0: spaceone.api.monitoring.v1.MetricRequest
	(*MetricDataRequest)(nil), // 1: spaceone.api.monitoring.v1.MetricDataRequest
	(*MetricInfo)(nil),        // 2: spaceone.api.monitoring.v1.MetricInfo
	(*MetricsInfo)(nil),       // 3: spaceone.api.monitoring.v1.MetricsInfo
	(*MetricDataInfo)(nil),    // 4: spaceone.api.monitoring.v1.MetricDataInfo
	(*_struct.Struct)(nil),    // 5: google.protobuf.Struct
	(*_struct.ListValue)(nil), // 6: google.protobuf.ListValue
}
var file_spaceone_api_monitoring_v1_metric_proto_depIdxs = []int32{
	5, // 0: spaceone.api.monitoring.v1.MetricDataRequest.metric_query:type_name -> google.protobuf.Struct
	5, // 1: spaceone.api.monitoring.v1.MetricInfo.unit:type_name -> google.protobuf.Struct
	5, // 2: spaceone.api.monitoring.v1.MetricInfo.metric_query:type_name -> google.protobuf.Struct
	2, // 3: spaceone.api.monitoring.v1.MetricsInfo.metrics:type_name -> spaceone.api.monitoring.v1.MetricInfo
	5, // 4: spaceone.api.monitoring.v1.MetricsInfo.available_resources:type_name -> google.protobuf.Struct
	6, // 5: spaceone.api.monitoring.v1.MetricDataInfo.labels:type_name -> google.protobuf.ListValue
	5, // 6: spaceone.api.monitoring.v1.MetricDataInfo.values:type_name -> google.protobuf.Struct
	0, // 7: spaceone.api.monitoring.v1.Metric.list:input_type -> spaceone.api.monitoring.v1.MetricRequest
	1, // 8: spaceone.api.monitoring.v1.Metric.get_data:input_type -> spaceone.api.monitoring.v1.MetricDataRequest
	3, // 9: spaceone.api.monitoring.v1.Metric.list:output_type -> spaceone.api.monitoring.v1.MetricsInfo
	4, // 10: spaceone.api.monitoring.v1.Metric.get_data:output_type -> spaceone.api.monitoring.v1.MetricDataInfo
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_spaceone_api_monitoring_v1_metric_proto_init() }
func file_spaceone_api_monitoring_v1_metric_proto_init() {
	if File_spaceone_api_monitoring_v1_metric_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_monitoring_v1_metric_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_metric_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_metric_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_metric_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_monitoring_v1_metric_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_monitoring_v1_metric_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_monitoring_v1_metric_proto_goTypes,
		DependencyIndexes: file_spaceone_api_monitoring_v1_metric_proto_depIdxs,
		MessageInfos:      file_spaceone_api_monitoring_v1_metric_proto_msgTypes,
	}.Build()
	File_spaceone_api_monitoring_v1_metric_proto = out.File
	file_spaceone_api_monitoring_v1_metric_proto_rawDesc = nil
	file_spaceone_api_monitoring_v1_metric_proto_goTypes = nil
	file_spaceone_api_monitoring_v1_metric_proto_depIdxs = nil
}
