// A Notification is a service that delivers event data generated in Cloudforet to a Project or User.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: spaceone/api/notification/v1/notification.proto

package v1

import (
	v1 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v1"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateNotificationRequest_NotificationType int32

const (
	CreateNotificationRequest_NOTIFICATION_TYPE_NONE CreateNotificationRequest_NotificationType = 0
	CreateNotificationRequest_INFO                   CreateNotificationRequest_NotificationType = 1
	CreateNotificationRequest_ERROR                  CreateNotificationRequest_NotificationType = 2
	CreateNotificationRequest_SUCCESS                CreateNotificationRequest_NotificationType = 3
	CreateNotificationRequest_WARNING                CreateNotificationRequest_NotificationType = 4
)

// Enum value maps for CreateNotificationRequest_NotificationType.
var (
	CreateNotificationRequest_NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_NONE",
		1: "INFO",
		2: "ERROR",
		3: "SUCCESS",
		4: "WARNING",
	}
	CreateNotificationRequest_NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_NONE": 0,
		"INFO":                   1,
		"ERROR":                  2,
		"SUCCESS":                3,
		"WARNING":                4,
	}
)

func (x CreateNotificationRequest_NotificationType) Enum() *CreateNotificationRequest_NotificationType {
	p := new(CreateNotificationRequest_NotificationType)
	*p = x
	return p
}

func (x CreateNotificationRequest_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateNotificationRequest_NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_notification_v1_notification_proto_enumTypes[0].Descriptor()
}

func (CreateNotificationRequest_NotificationType) Type() protoreflect.EnumType {
	return &file_spaceone_api_notification_v1_notification_proto_enumTypes[0]
}

func (x CreateNotificationRequest_NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateNotificationRequest_NotificationType.Descriptor instead.
func (CreateNotificationRequest_NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{0, 0}
}

type CreateNotificationRequest_NotificationLEVEL int32

const (
	CreateNotificationRequest_NONE CreateNotificationRequest_NotificationLEVEL = 0
	CreateNotificationRequest_ALL  CreateNotificationRequest_NotificationLEVEL = 1
	CreateNotificationRequest_LV1  CreateNotificationRequest_NotificationLEVEL = 2
	CreateNotificationRequest_LV2  CreateNotificationRequest_NotificationLEVEL = 3
	CreateNotificationRequest_LV3  CreateNotificationRequest_NotificationLEVEL = 4
	CreateNotificationRequest_LV4  CreateNotificationRequest_NotificationLEVEL = 5
	CreateNotificationRequest_LV5  CreateNotificationRequest_NotificationLEVEL = 6
)

// Enum value maps for CreateNotificationRequest_NotificationLEVEL.
var (
	CreateNotificationRequest_NotificationLEVEL_name = map[int32]string{
		0: "NONE",
		1: "ALL",
		2: "LV1",
		3: "LV2",
		4: "LV3",
		5: "LV4",
		6: "LV5",
	}
	CreateNotificationRequest_NotificationLEVEL_value = map[string]int32{
		"NONE": 0,
		"ALL":  1,
		"LV1":  2,
		"LV2":  3,
		"LV3":  4,
		"LV4":  5,
		"LV5":  6,
	}
)

func (x CreateNotificationRequest_NotificationLEVEL) Enum() *CreateNotificationRequest_NotificationLEVEL {
	p := new(CreateNotificationRequest_NotificationLEVEL)
	*p = x
	return p
}

func (x CreateNotificationRequest_NotificationLEVEL) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateNotificationRequest_NotificationLEVEL) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_notification_v1_notification_proto_enumTypes[1].Descriptor()
}

func (CreateNotificationRequest_NotificationLEVEL) Type() protoreflect.EnumType {
	return &file_spaceone_api_notification_v1_notification_proto_enumTypes[1]
}

func (x CreateNotificationRequest_NotificationLEVEL) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateNotificationRequest_NotificationLEVEL.Descriptor instead.
func (CreateNotificationRequest_NotificationLEVEL) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{0, 1}
}

type NotificationQuery_NotificationType int32

const (
	NotificationQuery_NOTIFICATION_TYPE_NONE NotificationQuery_NotificationType = 0
	NotificationQuery_INFO                   NotificationQuery_NotificationType = 1
	NotificationQuery_ERROR                  NotificationQuery_NotificationType = 2
	NotificationQuery_SUCCESS                NotificationQuery_NotificationType = 3
	NotificationQuery_WARNING                NotificationQuery_NotificationType = 4
)

// Enum value maps for NotificationQuery_NotificationType.
var (
	NotificationQuery_NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_NONE",
		1: "INFO",
		2: "ERROR",
		3: "SUCCESS",
		4: "WARNING",
	}
	NotificationQuery_NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_NONE": 0,
		"INFO":                   1,
		"ERROR":                  2,
		"SUCCESS":                3,
		"WARNING":                4,
	}
)

func (x NotificationQuery_NotificationType) Enum() *NotificationQuery_NotificationType {
	p := new(NotificationQuery_NotificationType)
	*p = x
	return p
}

func (x NotificationQuery_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationQuery_NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_notification_v1_notification_proto_enumTypes[2].Descriptor()
}

func (NotificationQuery_NotificationType) Type() protoreflect.EnumType {
	return &file_spaceone_api_notification_v1_notification_proto_enumTypes[2]
}

func (x NotificationQuery_NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationQuery_NotificationType.Descriptor instead.
func (NotificationQuery_NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{5, 0}
}

type NotificationQuery_NotificationLEVEL int32

const (
	NotificationQuery_NONE NotificationQuery_NotificationLEVEL = 0
	NotificationQuery_ALL  NotificationQuery_NotificationLEVEL = 1
	NotificationQuery_LV1  NotificationQuery_NotificationLEVEL = 2
	NotificationQuery_LV2  NotificationQuery_NotificationLEVEL = 3
	NotificationQuery_LV3  NotificationQuery_NotificationLEVEL = 4
	NotificationQuery_LV4  NotificationQuery_NotificationLEVEL = 5
	NotificationQuery_LV5  NotificationQuery_NotificationLEVEL = 6
)

// Enum value maps for NotificationQuery_NotificationLEVEL.
var (
	NotificationQuery_NotificationLEVEL_name = map[int32]string{
		0: "NONE",
		1: "ALL",
		2: "LV1",
		3: "LV2",
		4: "LV3",
		5: "LV4",
		6: "LV5",
	}
	NotificationQuery_NotificationLEVEL_value = map[string]int32{
		"NONE": 0,
		"ALL":  1,
		"LV1":  2,
		"LV2":  3,
		"LV3":  4,
		"LV4":  5,
		"LV5":  6,
	}
)

func (x NotificationQuery_NotificationLEVEL) Enum() *NotificationQuery_NotificationLEVEL {
	p := new(NotificationQuery_NotificationLEVEL)
	*p = x
	return p
}

func (x NotificationQuery_NotificationLEVEL) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationQuery_NotificationLEVEL) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_notification_v1_notification_proto_enumTypes[3].Descriptor()
}

func (NotificationQuery_NotificationLEVEL) Type() protoreflect.EnumType {
	return &file_spaceone_api_notification_v1_notification_proto_enumTypes[3]
}

func (x NotificationQuery_NotificationLEVEL) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationQuery_NotificationLEVEL.Descriptor instead.
func (NotificationQuery_NotificationLEVEL) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{5, 1}
}

type NotificationInfo_NotificationType int32

const (
	NotificationInfo_NOTIFICATION_TYPE_NONE NotificationInfo_NotificationType = 0
	NotificationInfo_INFO                   NotificationInfo_NotificationType = 1
	NotificationInfo_ERROR                  NotificationInfo_NotificationType = 2
	NotificationInfo_SUCCESS                NotificationInfo_NotificationType = 3
	NotificationInfo_WARNING                NotificationInfo_NotificationType = 4
)

// Enum value maps for NotificationInfo_NotificationType.
var (
	NotificationInfo_NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_NONE",
		1: "INFO",
		2: "ERROR",
		3: "SUCCESS",
		4: "WARNING",
	}
	NotificationInfo_NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_NONE": 0,
		"INFO":                   1,
		"ERROR":                  2,
		"SUCCESS":                3,
		"WARNING":                4,
	}
)

func (x NotificationInfo_NotificationType) Enum() *NotificationInfo_NotificationType {
	p := new(NotificationInfo_NotificationType)
	*p = x
	return p
}

func (x NotificationInfo_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationInfo_NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_notification_v1_notification_proto_enumTypes[4].Descriptor()
}

func (NotificationInfo_NotificationType) Type() protoreflect.EnumType {
	return &file_spaceone_api_notification_v1_notification_proto_enumTypes[4]
}

func (x NotificationInfo_NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationInfo_NotificationType.Descriptor instead.
func (NotificationInfo_NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{6, 0}
}

type NotificationInfo_NotificationLEVEL int32

const (
	NotificationInfo_NONE NotificationInfo_NotificationLEVEL = 0
	NotificationInfo_ALL  NotificationInfo_NotificationLEVEL = 1
	NotificationInfo_LV1  NotificationInfo_NotificationLEVEL = 2
	NotificationInfo_LV2  NotificationInfo_NotificationLEVEL = 3
	NotificationInfo_LV3  NotificationInfo_NotificationLEVEL = 4
	NotificationInfo_LV4  NotificationInfo_NotificationLEVEL = 5
	NotificationInfo_LV5  NotificationInfo_NotificationLEVEL = 6
)

// Enum value maps for NotificationInfo_NotificationLEVEL.
var (
	NotificationInfo_NotificationLEVEL_name = map[int32]string{
		0: "NONE",
		1: "ALL",
		2: "LV1",
		3: "LV2",
		4: "LV3",
		5: "LV4",
		6: "LV5",
	}
	NotificationInfo_NotificationLEVEL_value = map[string]int32{
		"NONE": 0,
		"ALL":  1,
		"LV1":  2,
		"LV2":  3,
		"LV3":  4,
		"LV4":  5,
		"LV5":  6,
	}
)

func (x NotificationInfo_NotificationLEVEL) Enum() *NotificationInfo_NotificationLEVEL {
	p := new(NotificationInfo_NotificationLEVEL)
	*p = x
	return p
}

func (x NotificationInfo_NotificationLEVEL) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationInfo_NotificationLEVEL) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_notification_v1_notification_proto_enumTypes[5].Descriptor()
}

func (NotificationInfo_NotificationLEVEL) Type() protoreflect.EnumType {
	return &file_spaceone_api_notification_v1_notification_proto_enumTypes[5]
}

func (x NotificationInfo_NotificationLEVEL) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationInfo_NotificationLEVEL.Descriptor instead.
func (NotificationInfo_NotificationLEVEL) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{6, 1}
}

//	{
//	   "resource_type": "identity.Project",
//	   "resource_id": "resource-123456789012",
//	   "topic": "monitoring.Alert",
//	   "message": {
//	       "title": "[Alerting] Not Running Pods 0:OK alert",
//	       "description": "[spaceone-dev] Not Running Pods 0 is OK\n\nFailure level : WorkerNode\nPanel ... ",
//	       "tags": {
//	           "urgency": "LOW",
//	           "resource_id": "pod",
//	           "assignee": "user1@email.com",
//	           "created_at": "2022-01-01T17:12:45.990Z",
//	           "state": "ACKNOWLEDGED",
//	           "project_id": "project-123456789012"
//	       }
//	   },
//	   "notification_type": "INFO",
//	   "notification_level": "LV2"
//	}
type CreateNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// is_required: true
	// The type of resource to which the notification is dispatched.
	// Currently, only "identity.Project" or "identity.User" can be set.
	ResourceType string `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// is_required: true
	// The ID of the resource to which notifications are dispatched.
	// If resource_type is "identity.Project", then resource_id requires a project ID values.
	// If resource_type is "identity.User", then resource_id requires a user ID value.
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// is_required: true
	// The topic of notification.
	Topic string `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	// is_required: true
	// This message is used for each protocol.
	Message *_struct.Struct `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// is_required: false
	// The type of notification.
	NotificationType CreateNotificationRequest_NotificationType `protobuf:"varint,5,opt,name=notification_type,json=notificationType,proto3,enum=spaceone.api.notification.v1.CreateNotificationRequest_NotificationType" json:"notification_type,omitempty"`
	// is_required: false
	// The level of notification.
	NotificationLevel CreateNotificationRequest_NotificationLEVEL `protobuf:"varint,7,opt,name=notification_level,json=notificationLevel,proto3,enum=spaceone.api.notification.v1.CreateNotificationRequest_NotificationLEVEL" json:"notification_level,omitempty"`
	// is_required: true
	// The ID of domain.
	DomainId string `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CreateNotificationRequest) Reset() {
	*x = CreateNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationRequest) ProtoMessage() {}

func (x *CreateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNotificationRequest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *CreateNotificationRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *CreateNotificationRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CreateNotificationRequest) GetMessage() *_struct.Struct {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CreateNotificationRequest) GetNotificationType() CreateNotificationRequest_NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return CreateNotificationRequest_NOTIFICATION_TYPE_NONE
}

func (x *CreateNotificationRequest) GetNotificationLevel() CreateNotificationRequest_NotificationLEVEL {
	if x != nil {
		return x.NotificationLevel
	}
	return CreateNotificationRequest_NONE
}

func (x *CreateNotificationRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "protocol_id": "protocol-fb30cb6c28d6",
//	   "data": {
//	       "phone_number": "01012345678"
//	   },
//	   "message": {
//	       "tags": [
//	           {
//	               "key": "project_id",
//	               "value": "project-xxxx"
//	           },
//	           {
//	               "key": "project_name",
//	               "value": "Test Project"
//	           },
//	           {
//	               "key": "resource_id",
//	               "value": "server-yyyyy"
//	           },
//	           {
//	               "key": "resource_name",
//	               "value": "web-server-001"
//	           }
//	       ],
//	       "description": "This is Sample Message",
//	       "title": "Sample"
//	   }
//	}
type PushNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// is_required: true
	// The ID of Protocol.
	ProtocolId string `protobuf:"bytes,1,opt,name=protocol_id,json=protocolId,proto3" json:"protocol_id,omitempty"`
	// is_required: true
	Data *_struct.Struct `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// is_required: true
	Message *_struct.Struct `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// is_required: false
	NotificationType string `protobuf:"bytes,4,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	// is_required: false
	NotificationLevel string `protobuf:"bytes,5,opt,name=notification_level,json=notificationLevel,proto3" json:"notification_level,omitempty"`
	// is_required: true
	DomainId string `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *PushNotificationRequest) Reset() {
	*x = PushNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushNotificationRequest) ProtoMessage() {}

func (x *PushNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushNotificationRequest.ProtoReflect.Descriptor instead.
func (*PushNotificationRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{1}
}

func (x *PushNotificationRequest) GetProtocolId() string {
	if x != nil {
		return x.ProtocolId
	}
	return ""
}

func (x *PushNotificationRequest) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PushNotificationRequest) GetMessage() *_struct.Struct {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *PushNotificationRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *PushNotificationRequest) GetNotificationLevel() string {
	if x != nil {
		return x.NotificationLevel
	}
	return ""
}

func (x *PushNotificationRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "notifications": [
//	       "notification-4025c1b61225",
//	       "notification-13hk3fh32534",
//	       "notification-4kth40jth5jy"
//	   ]
//	}
type NotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// is_required: true
	// ID list of Notifications.
	Notifications []string `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// is_required: true
	// The ID of domain.
	DomainId string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *NotificationRequest) Reset() {
	*x = NotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationRequest) ProtoMessage() {}

func (x *NotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationRequest.ProtoReflect.Descriptor instead.
func (*NotificationRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{2}
}

func (x *NotificationRequest) GetNotifications() []string {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *NotificationRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "notifications": [
//	       "notification-6c548a37ee77",
//	       "notification-4j3jt9384fnf"
//	   ]
//	}
type SetReadNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// is_required: true
	// The ID list of notification that want to change read status.
	Notifications []string `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// is_required: true
	// The ID of domain.
	DomainId string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *SetReadNotificationRequest) Reset() {
	*x = SetReadNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetReadNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReadNotificationRequest) ProtoMessage() {}

func (x *SetReadNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReadNotificationRequest.ProtoReflect.Descriptor instead.
func (*SetReadNotificationRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{3}
}

func (x *SetReadNotificationRequest) GetNotifications() []string {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *SetReadNotificationRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "notification_id": "notification-4025c1b61225"
//	}
type GetNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// is_required: true
	// The ID of Notification.
	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// is_required: true
	// The ID of domain.
	DomainId string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// is_required: false
	// The list of the notification information column you want to be returned. It must be specified in the NotificationInfo.
	Only []string `protobuf:"bytes,3,rep,name=only,proto3" json:"only,omitempty"`
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{4}
}

func (x *GetNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *GetNotificationRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *GetNotificationRequest) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

//	{
//	   "query": {
//	       "filter": [
//	           {
//	               "key": "notification_type",
//	               "value": "INFO",
//	               "operator": "eq"
//	           }
//	       ]
//	   }
//	}
type NotificationQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// is_required: false
	// Query format provided by SpaceONE. Please check the link for more information.
	Query *v1.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// is_required: false
	// The ID of notification.
	NotificationId string `protobuf:"bytes,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// is_required: false
	// The topic of notification.
	Topic string `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	// is_required: false
	// The type of notification.
	NotificationType NotificationQuery_NotificationType `protobuf:"varint,4,opt,name=notification_type,json=notificationType,proto3,enum=spaceone.api.notification.v1.NotificationQuery_NotificationType" json:"notification_type,omitempty"`
	// is_required: false
	// The level of notification.
	NotificationLevel NotificationQuery_NotificationLEVEL `protobuf:"varint,5,opt,name=notification_level,json=notificationLevel,proto3,enum=spaceone.api.notification.v1.NotificationQuery_NotificationLEVEL" json:"notification_level,omitempty"`
	// is_required: false
	// Whether or not to check the notification.
	// If is_read is False, the user has not checked the notification yet.
	IsRead bool `protobuf:"varint,6,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	// is_required: false
	// The ID of parent notification. Not used yet.
	ParentNotificationId string `protobuf:"bytes,7,opt,name=parent_notification_id,json=parentNotificationId,proto3" json:"parent_notification_id,omitempty"`
	// is_required: false
	// The project ID to which the notification will be dispatched.
	ProjectId string `protobuf:"bytes,8,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// is_required: false
	// The ID of user.
	UserId string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// is_required: true
	// The ID of domain.
	DomainId string `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *NotificationQuery) Reset() {
	*x = NotificationQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationQuery) ProtoMessage() {}

func (x *NotificationQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationQuery.ProtoReflect.Descriptor instead.
func (*NotificationQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{5}
}

func (x *NotificationQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *NotificationQuery) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *NotificationQuery) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *NotificationQuery) GetNotificationType() NotificationQuery_NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return NotificationQuery_NOTIFICATION_TYPE_NONE
}

func (x *NotificationQuery) GetNotificationLevel() NotificationQuery_NotificationLEVEL {
	if x != nil {
		return x.NotificationLevel
	}
	return NotificationQuery_NONE
}

func (x *NotificationQuery) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *NotificationQuery) GetParentNotificationId() string {
	if x != nil {
		return x.ParentNotificationId
	}
	return ""
}

func (x *NotificationQuery) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *NotificationQuery) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "notification_id": "notification-4025c1b61225",
//	   "topic": "monitoring.Alert",
//	   "message": {
//	       "tags": {
//	           "project_id": "project-18655561c535",
//	           "created_at": null,
//	           "urgency": "LOW",
//	           "state": "TRIGGERED",
//	           "resource_id": "AWS/NetworkELB",
//	           "resource_name": "[Asia Pacific (Seoul)]:[AWS/NetworkELB]: net/af83f347171a044af46453ebb34c8225/743a23562a96c595"
//	       },
//	       "title": "[Asia Pacific (Seoul)]: NLB-TCP_Target_Reset_Count-Alert",
//	       "description": "Threshold Crossed: 1 out of the last 1 datapoints [200.0 (25/06/21 06:38:00)] was not greater than the threshold (200.0)"
//	   },
//	   "notification_type": "INFO",
//	   "notification_level": "ALL",
//	   "is_read": true,
//	   "user_id": "user1@spaceone.dev",
//	   "domain_id": "domain-58010aa2e451",
//	   "created_at": "2021-06-25T06:42:05.867Z"
//	}
type NotificationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of notification.
	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// The topic of notification.
	Topic string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	// The contents of notification.
	// This message is used for each protocol.
	Message *_struct.Struct `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// The type of notification.
	NotificationType NotificationInfo_NotificationType `protobuf:"varint,4,opt,name=notification_type,json=notificationType,proto3,enum=spaceone.api.notification.v1.NotificationInfo_NotificationType" json:"notification_type,omitempty"`
	// The level of notification.
	NotificationLevel NotificationInfo_NotificationLEVEL `protobuf:"varint,5,opt,name=notification_level,json=notificationLevel,proto3,enum=spaceone.api.notification.v1.NotificationInfo_NotificationLEVEL" json:"notification_level,omitempty"`
	// Whether or not to check the notification.
	// If notification has been returned at least once through the Get or List method, is_read is changed to True.
	IsRead bool `protobuf:"varint,6,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	// The ID of user to whom the notification was dispatched.
	UserId string `protobuf:"bytes,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The ID of domain
	DomainId string `protobuf:"bytes,12,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// Notification creation time.
	CreatedAt string `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *NotificationInfo) Reset() {
	*x = NotificationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationInfo) ProtoMessage() {}

func (x *NotificationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationInfo.ProtoReflect.Descriptor instead.
func (*NotificationInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{6}
}

func (x *NotificationInfo) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *NotificationInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *NotificationInfo) GetMessage() *_struct.Struct {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *NotificationInfo) GetNotificationType() NotificationInfo_NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return NotificationInfo_NOTIFICATION_TYPE_NONE
}

func (x *NotificationInfo) GetNotificationLevel() NotificationInfo_NotificationLEVEL {
	if x != nil {
		return x.NotificationLevel
	}
	return NotificationInfo_NONE
}

func (x *NotificationInfo) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *NotificationInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *NotificationInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

//	{
//	   "results": [
//	       {
//	           "notification_id": "notification-9f1476af11b7",
//	           "topic": "monitoring.Alert",
//	           "message": {
//	               "tags": {
//	                   "state": "ACKNOWLEDGED",
//	                   "resource_id": "pod",
//	                   "project_id": "project-18655561c535",
//	                   "urgency": "LOW",
//	                   "created_at": null,
//	                   "assignee": "yuda@test.co"
//	               },
//	               "title": "[Alerting] Not Running Pods 0:OK alert",
//	               "description": "[cloudone-dev-v1-eks-cluster] Not Running Pods 0 is OK"
//	           },
//	           "notification_type": "INFO",
//	           "notification_level": "LV2",
//	           "is_read": true,
//	           "user_id": "user33@spaceone.dev",
//	           "domain_id": "domain-58010aa2e451",
//	           "created_at": "2021-06-21T17:13:39.570Z"
//	       },
//	       {
//	           "notification_id": "notification-4025c1b61225",
//	           "topic": "monitoring.Alert",
//	           "message": {
//	               "title": "[Asia Pacific (Seoul)]: NLB-TCP_Target_Reset_Count-Alert",
//	               "description": "Threshold Crossed: 1 out of the last 1 datapoints [200.0 (25/06/21 06:38:00)] was not greater than the threshold (200.0)",
//	               "tags": {
//	                   "resource_id": "AWS/NetworkELB",
//	                   "resource_name": "[Asia Pacific (Seoul)]:[AWS/NetworkELB]: net/dfsbvs/advdr32rwqdsvzc",
//	                   "created_at": null,
//	                   "state": "TRIGGERED",
//	                   "project_id": "project-18655561c535",
//	                   "urgency": "LOW"
//	               }
//	           },
//	           "notification_type": "INFO",
//	           "notification_level": "ALL",
//	           "is_read": true,
//	           "user_id": "user1@cloudforet.io",
//	           "domain_id": "domain-58010aa2e451",
//	           "created_at": "2021-06-25T06:42:05.867Z"
//	       }
//	   ],
//	   "total_count": 2
//	}
type NotificationsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of queried notifications.
	Results []*NotificationInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// Total counts of queried notifications.
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *NotificationsInfo) Reset() {
	*x = NotificationsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsInfo) ProtoMessage() {}

func (x *NotificationsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsInfo.ProtoReflect.Descriptor instead.
func (*NotificationsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{7}
}

func (x *NotificationsInfo) GetResults() []*NotificationInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *NotificationsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type NotificationStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// is_required: true
	// Statistics Query format provided by SpaceONE. Please check the link for more information.
	Query *v1.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// is_required: true
	// The ID of domain.
	DomainId string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *NotificationStatQuery) Reset() {
	*x = NotificationStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationStatQuery) ProtoMessage() {}

func (x *NotificationStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_notification_v1_notification_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationStatQuery.ProtoReflect.Descriptor instead.
func (*NotificationStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_notification_v1_notification_proto_rawDescGZIP(), []int{8}
}

func (x *NotificationStatQuery) GetQuery() *v1.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *NotificationStatQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

var File_spaceone_api_notification_v1_notification_proto protoreflect.FileDescriptor

var file_spaceone_api_notification_v1_notification_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x04, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x75, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x48, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x78,
	0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x45, 0x56, 0x45, 0x4c, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x04, 0x22, 0x53, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x4c, 0x56, 0x31, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56, 0x32, 0x10, 0x03, 0x12, 0x07,
	0x0a, 0x03, 0x4c, 0x56, 0x33, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56, 0x34, 0x10, 0x05,
	0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56, 0x35, 0x10, 0x06, 0x22, 0x93, 0x02, 0x0a, 0x17, 0x50, 0x75,
	0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22,
	0x58, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x1a, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0xbe,
	0x05, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x6d, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x40, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x70, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x41, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x10, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a,
	0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x22, 0x53, 0x0a, 0x11, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56, 0x31, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4c,
	0x56, 0x32, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56, 0x33, 0x10, 0x04, 0x12, 0x07, 0x0a,
	0x03, 0x4c, 0x56, 0x34, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56, 0x35, 0x10, 0x06, 0x22,
	0x85, 0x05, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x6c, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x6f, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x40, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x5d, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47,
	0x10, 0x04, 0x22, 0x53, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56,
	0x31, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56, 0x32, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03,
	0x4c, 0x56, 0x33, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x56, 0x34, 0x10, 0x05, 0x12, 0x07,
	0x0a, 0x03, 0x4c, 0x56, 0x35, 0x10, 0x06, 0x22, 0x7e, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x71, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x32, 0xf7, 0x07, 0x0a, 0x0c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8a, 0x01, 0x0a, 0x06,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x37, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a,
	0x01, 0x2a, 0x22, 0x24, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x04, 0x70, 0x75, 0x73,
	0x68, 0x12, 0x35, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x12,
	0x84, 0x01, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a,
	0x22, 0x24, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x38, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a,
	0x22, 0x26, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x73, 0x65, 0x74, 0x2d, 0x72, 0x65, 0x61, 0x64, 0x12, 0x99, 0x01, 0x0a, 0x03, 0x67, 0x65, 0x74,
	0x12, 0x34, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01,
	0x2a, 0x22, 0x21, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x67, 0x65, 0x74, 0x12, 0x97, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x2f,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x83,
	0x01, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a,
	0x22, 0x22, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_spaceone_api_notification_v1_notification_proto_rawDescOnce sync.Once
	file_spaceone_api_notification_v1_notification_proto_rawDescData = file_spaceone_api_notification_v1_notification_proto_rawDesc
)

func file_spaceone_api_notification_v1_notification_proto_rawDescGZIP() []byte {
	file_spaceone_api_notification_v1_notification_proto_rawDescOnce.Do(func() {
		file_spaceone_api_notification_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_notification_v1_notification_proto_rawDescData)
	})
	return file_spaceone_api_notification_v1_notification_proto_rawDescData
}

var file_spaceone_api_notification_v1_notification_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_spaceone_api_notification_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_spaceone_api_notification_v1_notification_proto_goTypes = []interface{}{
	(CreateNotificationRequest_NotificationType)(0),  // 0: spaceone.api.notification.v1.CreateNotificationRequest.NotificationType
	(CreateNotificationRequest_NotificationLEVEL)(0), // 1: spaceone.api.notification.v1.CreateNotificationRequest.NotificationLEVEL
	(NotificationQuery_NotificationType)(0),          // 2: spaceone.api.notification.v1.NotificationQuery.NotificationType
	(NotificationQuery_NotificationLEVEL)(0),         // 3: spaceone.api.notification.v1.NotificationQuery.NotificationLEVEL
	(NotificationInfo_NotificationType)(0),           // 4: spaceone.api.notification.v1.NotificationInfo.NotificationType
	(NotificationInfo_NotificationLEVEL)(0),          // 5: spaceone.api.notification.v1.NotificationInfo.NotificationLEVEL
	(*CreateNotificationRequest)(nil),                // 6: spaceone.api.notification.v1.CreateNotificationRequest
	(*PushNotificationRequest)(nil),                  // 7: spaceone.api.notification.v1.PushNotificationRequest
	(*NotificationRequest)(nil),                      // 8: spaceone.api.notification.v1.NotificationRequest
	(*SetReadNotificationRequest)(nil),               // 9: spaceone.api.notification.v1.SetReadNotificationRequest
	(*GetNotificationRequest)(nil),                   // 10: spaceone.api.notification.v1.GetNotificationRequest
	(*NotificationQuery)(nil),                        // 11: spaceone.api.notification.v1.NotificationQuery
	(*NotificationInfo)(nil),                         // 12: spaceone.api.notification.v1.NotificationInfo
	(*NotificationsInfo)(nil),                        // 13: spaceone.api.notification.v1.NotificationsInfo
	(*NotificationStatQuery)(nil),                    // 14: spaceone.api.notification.v1.NotificationStatQuery
	(*_struct.Struct)(nil),                           // 15: google.protobuf.Struct
	(*v1.Query)(nil),                                 // 16: spaceone.api.core.v1.Query
	(*v1.StatisticsQuery)(nil),                       // 17: spaceone.api.core.v1.StatisticsQuery
	(*empty.Empty)(nil),                              // 18: google.protobuf.Empty
}
var file_spaceone_api_notification_v1_notification_proto_depIdxs = []int32{
	15, // 0: spaceone.api.notification.v1.CreateNotificationRequest.message:type_name -> google.protobuf.Struct
	0,  // 1: spaceone.api.notification.v1.CreateNotificationRequest.notification_type:type_name -> spaceone.api.notification.v1.CreateNotificationRequest.NotificationType
	1,  // 2: spaceone.api.notification.v1.CreateNotificationRequest.notification_level:type_name -> spaceone.api.notification.v1.CreateNotificationRequest.NotificationLEVEL
	15, // 3: spaceone.api.notification.v1.PushNotificationRequest.data:type_name -> google.protobuf.Struct
	15, // 4: spaceone.api.notification.v1.PushNotificationRequest.message:type_name -> google.protobuf.Struct
	16, // 5: spaceone.api.notification.v1.NotificationQuery.query:type_name -> spaceone.api.core.v1.Query
	2,  // 6: spaceone.api.notification.v1.NotificationQuery.notification_type:type_name -> spaceone.api.notification.v1.NotificationQuery.NotificationType
	3,  // 7: spaceone.api.notification.v1.NotificationQuery.notification_level:type_name -> spaceone.api.notification.v1.NotificationQuery.NotificationLEVEL
	15, // 8: spaceone.api.notification.v1.NotificationInfo.message:type_name -> google.protobuf.Struct
	4,  // 9: spaceone.api.notification.v1.NotificationInfo.notification_type:type_name -> spaceone.api.notification.v1.NotificationInfo.NotificationType
	5,  // 10: spaceone.api.notification.v1.NotificationInfo.notification_level:type_name -> spaceone.api.notification.v1.NotificationInfo.NotificationLEVEL
	12, // 11: spaceone.api.notification.v1.NotificationsInfo.results:type_name -> spaceone.api.notification.v1.NotificationInfo
	17, // 12: spaceone.api.notification.v1.NotificationStatQuery.query:type_name -> spaceone.api.core.v1.StatisticsQuery
	6,  // 13: spaceone.api.notification.v1.Notification.create:input_type -> spaceone.api.notification.v1.CreateNotificationRequest
	7,  // 14: spaceone.api.notification.v1.Notification.push:input_type -> spaceone.api.notification.v1.PushNotificationRequest
	8,  // 15: spaceone.api.notification.v1.Notification.delete:input_type -> spaceone.api.notification.v1.NotificationRequest
	9,  // 16: spaceone.api.notification.v1.Notification.set_read:input_type -> spaceone.api.notification.v1.SetReadNotificationRequest
	10, // 17: spaceone.api.notification.v1.Notification.get:input_type -> spaceone.api.notification.v1.GetNotificationRequest
	11, // 18: spaceone.api.notification.v1.Notification.list:input_type -> spaceone.api.notification.v1.NotificationQuery
	14, // 19: spaceone.api.notification.v1.Notification.stat:input_type -> spaceone.api.notification.v1.NotificationStatQuery
	18, // 20: spaceone.api.notification.v1.Notification.create:output_type -> google.protobuf.Empty
	18, // 21: spaceone.api.notification.v1.Notification.push:output_type -> google.protobuf.Empty
	18, // 22: spaceone.api.notification.v1.Notification.delete:output_type -> google.protobuf.Empty
	18, // 23: spaceone.api.notification.v1.Notification.set_read:output_type -> google.protobuf.Empty
	12, // 24: spaceone.api.notification.v1.Notification.get:output_type -> spaceone.api.notification.v1.NotificationInfo
	13, // 25: spaceone.api.notification.v1.Notification.list:output_type -> spaceone.api.notification.v1.NotificationsInfo
	15, // 26: spaceone.api.notification.v1.Notification.stat:output_type -> google.protobuf.Struct
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_spaceone_api_notification_v1_notification_proto_init() }
func file_spaceone_api_notification_v1_notification_proto_init() {
	if File_spaceone_api_notification_v1_notification_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_notification_v1_notification_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_notification_v1_notification_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_notification_v1_notification_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_notification_v1_notification_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetReadNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_notification_v1_notification_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_notification_v1_notification_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_notification_v1_notification_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_notification_v1_notification_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_notification_v1_notification_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_notification_v1_notification_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_notification_v1_notification_proto_goTypes,
		DependencyIndexes: file_spaceone_api_notification_v1_notification_proto_depIdxs,
		EnumInfos:         file_spaceone_api_notification_v1_notification_proto_enumTypes,
		MessageInfos:      file_spaceone_api_notification_v1_notification_proto_msgTypes,
	}.Build()
	File_spaceone_api_notification_v1_notification_proto = out.File
	file_spaceone_api_notification_v1_notification_proto_rawDesc = nil
	file_spaceone_api_notification_v1_notification_proto_goTypes = nil
	file_spaceone_api_notification_v1_notification_proto_depIdxs = nil
}
