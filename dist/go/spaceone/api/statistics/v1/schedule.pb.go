// A Schedule is a time schedule of when a User will use a query.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: spaceone/api/statistics/v1/schedule.proto

package v1

import (
	v1 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v1"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScheduleInfo_State int32

const (
	ScheduleInfo_NONE     ScheduleInfo_State = 0
	ScheduleInfo_ENABLED  ScheduleInfo_State = 1
	ScheduleInfo_DISABLED ScheduleInfo_State = 2
)

// Enum value maps for ScheduleInfo_State.
var (
	ScheduleInfo_State_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	ScheduleInfo_State_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x ScheduleInfo_State) Enum() *ScheduleInfo_State {
	p := new(ScheduleInfo_State)
	*p = x
	return p
}

func (x ScheduleInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScheduleInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_statistics_v1_schedule_proto_enumTypes[0].Descriptor()
}

func (ScheduleInfo_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_statistics_v1_schedule_proto_enumTypes[0]
}

func (x ScheduleInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScheduleInfo_State.Descriptor instead.
func (ScheduleInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{7, 0}
}

type Scheduled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cron     string  `protobuf:"bytes,1,opt,name=cron,proto3" json:"cron,omitempty"`
	Interval int32   `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Minutes  []int32 `protobuf:"varint,3,rep,packed,name=minutes,proto3" json:"minutes,omitempty"`
	Hours    []int32 `protobuf:"varint,4,rep,packed,name=hours,proto3" json:"hours,omitempty"`
}

func (x *Scheduled) Reset() {
	*x = Scheduled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scheduled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scheduled) ProtoMessage() {}

func (x *Scheduled) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scheduled.ProtoReflect.Descriptor instead.
func (*Scheduled) Descriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{0}
}

func (x *Scheduled) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *Scheduled) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Scheduled) GetMinutes() []int32 {
	if x != nil {
		return x.Minutes
	}
	return nil
}

func (x *Scheduled) GetHours() []int32 {
	if x != nil {
		return x.Hours
	}
	return nil
}

type QueryOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aggregate *StatAggregate `protobuf:"bytes,1,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
	// +optional
	Page *StatPage `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *QueryOption) Reset() {
	*x = QueryOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOption) ProtoMessage() {}

func (x *QueryOption) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOption.ProtoReflect.Descriptor instead.
func (*QueryOption) Descriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{1}
}

func (x *QueryOption) GetAggregate() *StatAggregate {
	if x != nil {
		return x.Aggregate
	}
	return nil
}

func (x *QueryOption) GetPage() *StatPage {
	if x != nil {
		return x.Page
	}
	return nil
}

//	{
//	   "topic": "daily_cloud_service_summary_test",
//	   "options": {"aggregate": [{"query": {
//	       "extend_data": {"label": "Server"}, "query": {
//	           "filter": [{"key": "ref_cloud_service_type.is_primary", "value": true, "operator": "eq"},
//	                      {"value": "Server", "operator": "eq", "key": "ref_cloud_service_type.labels"}],
//	           "aggregate": [{"group": {
//	               "fields": [
//	                   {
//	                       "name": "value",
//	                       "operator": "count"}],
//	               "keys": [
//	                   {
//	                       "name": "project_id",
//	                       "key": "project_id"},
//	                   {
//	                       "key": "cloud_service_type",
//	                       "name": "cloud_service_type"},
//	                   {
//	                       "key": "cloud_service_group",
//	                       "name": "cloud_service_group"},
//	                   {
//	                       "key": "provider",
//	                       "name": "provider"}]}}]},
//	       "resource_type": "inventory.CloudService"}}, {"concat": {"resource_type": "inventory.CloudService", "query": {
//	       "aggregate": [{"group": {"keys": [{"key": "project_id", "name": "project_id"},
//	                                         {"name": "cloud_service_type", "key": "cloud_service_type"},
//	                                         {"key": "cloud_service_group", "name": "cloud_service_group"},
//	                                         {"key": "provider", "name": "provider"}],
//	                                "fields": [{"name": "value", "operator": "count"}]}}],
//	       "filter": [{"value": true, "operator": "eq", "key": "ref_cloud_service_type.is_primary"},
//	                  {"value": "Database", "operator": "eq", "key": "ref_cloud_service_type.labels"}]},
//	                                                                "extend_data": {"label": "Database"}}}, {"concat": {
//	       "resource_type": "inventory.CloudService", "extend_data": {"label": "Container"}, "query": {
//	           "filter": [{"value": true, "key": "ref_cloud_service_type.is_primary", "operator": "eq"},
//	                      {"key": "ref_cloud_service_type.labels", "value": "Container", "operator": "eq"}],
//	           "aggregate": [{
//	               "group": {
//	                   "fields": [
//	                       {
//	                           "name": "value",
//	                           "operator": "count"}],
//	                   "keys": [
//	                       {
//	                           "key": "project_id",
//	                           "name": "project_id"},
//	                       {
//	                           "name": "cloud_service_type",
//	                           "key": "cloud_service_type"},
//	                       {
//	                           "name": "cloud_service_group",
//	                           "key": "cloud_service_group"},
//	                       {
//	                           "key": "provider",
//	                           "name": "provider"}]}}]}}},
//	       {"concat": {
//	           "extend_data": {"label": "Networking"},
//	           "query": {"aggregate": [{"group": {
//	               "keys": [{"name": "project_id",
//	                         "key": "project_id"}, {
//	                            "key": "cloud_service_type",
//	                            "name": "cloud_service_type"},
//	                        {
//	                            "key": "cloud_service_group",
//	                            "name": "cloud_service_group"},
//	                        {"key": "provider",
//	                         "name": "provider"}],
//	               "fields": [{"name": "value",
//	                           "operator": "count"}]}}],
//	               "filter": [{
//	                   "key": "ref_cloud_service_type.is_primary",
//	                   "operator": "eq",
//	                   "value": true},
//	                   {
//	                       "key": "ref_cloud_service_type.labels",
//	                       "value": "Networking",
//	                       "operator": "eq"}]},
//	           "resource_type": "inventory.CloudService"}},
//	       {"concat": {
//	           "resource_type": "inventory.CloudService",
//	           "query": {"filter": [{
//	               "key": "ref_cloud_service_type.is_primary",
//	               "value": true,
//	               "operator": "eq"},
//	               {"operator": "eq",
//	                "value": "Security",
//	                "key": "ref_cloud_service_type.labels"}],
//	               "aggregate": [{"group": {
//	                   "keys": [
//	                       {"key": "project_id",
//	                        "name": "project_id"},
//	                       {
//	                           "key": "cloud_service_type",
//	                           "name": "cloud_service_type"},
//	                       {
//	                           "name": "cloud_service_group",
//	                           "key": "cloud_service_group"},
//	                       {"key": "provider",
//	                        "name": "provider"}],
//	                   "fields": [
//	                       {"name": "value",
//	                        "operator": "count"}]}}]},
//	           "extend_data": {"label": "Security"}}},
//	       {"concat": {
//	           "resource_type": "inventory.CloudService",
//	           "extend_data": {"label": "Analytics"},
//	           "query": {"filter": [{"value": true,
//	                                 "key": "ref_cloud_service_type.is_primary",
//	                                 "operator": "eq"},
//	                                {"operator": "eq",
//	                                 "value": "Analytics",
//	                                 "key": "ref_cloud_service_type.labels"}],
//	                     "aggregate": [{"group": {
//	                         "fields": [
//	                             {"operator": "count",
//	                              "name": "value"}],
//	                         "keys": [
//	                             {"name": "project_id",
//	                              "key": "project_id"},
//	                             {
//	                                 "key": "cloud_service_type",
//	                                 "name": "cloud_service_type"},
//	                             {
//	                                 "key": "cloud_service_group",
//	                                 "name": "cloud_service_group"},
//	                             {"key": "provider",
//	                              "name": "provider"}]}}]}}},
//	       {"concat": {
//	           "resource_type": "inventory.CloudService",
//	           "extend_data": {"label": "All"},
//	           "query": {"aggregate": [{"group": {
//	               "keys": [{"name": "project_id",
//	                         "key": "project_id"}, {
//	                            "name": "cloud_service_type",
//	                            "key": "cloud_service_type"},
//	                        {
//	                            "name": "cloud_service_group",
//	                            "key": "cloud_service_group"},
//	                        {"key": "provider",
//	                         "name": "provider"}],
//	               "fields": [{"operator": "count",
//	                           "name": "value"}]}}],
//	               "filter": [{
//	                   "key": "ref_cloud_service_type.is_primary",
//	                   "operator": "eq",
//	                   "value": true}]}}},
//	       {"concat": {"query": {"filter": [
//	           {"value": true, "operator": "eq",
//	            "key": "ref_cloud_service_type.is_major"},
//	           {"value": "Storage", "operator": "eq",
//	            "key": "ref_cloud_service_type.labels"}],
//	           "aggregate": [{
//	               "group": {
//	                   "fields": [
//	                       {
//	                           "name": "value",
//	                           "key": "data.size",
//	                           "operator": "sum"}],
//	                   "keys": [
//	                       {
//	                           "name": "project_id",
//	                           "key": "project_id"},
//	                       {
//	                           "name": "cloud_service_type",
//	                           "key": "cloud_service_type"},
//	                       {
//	                           "key": "cloud_service_group",
//	                           "name": "cloud_service_group"},
//	                       {
//	                           "key": "provider",
//	                           "name": "provider"}]}}]},
//	           "resource_type": "inventory.CloudService",
//	           "extend_data": {
//	               "label": "Storage"}
//	       }}]},
//	   "schedule": {"hours": [1]},
//	   "tags": {},
//	   "domain_id": "domain-58010aa2e451"}
type AddScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic    string          `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Options  *_struct.Struct `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	Schedule *Scheduled      `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// +optional
	Tags     *_struct.Struct `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	UserId   string          `protobuf:"bytes,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DomainId string          `protobuf:"bytes,12,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *AddScheduleRequest) Reset() {
	*x = AddScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScheduleRequest) ProtoMessage() {}

func (x *AddScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScheduleRequest.ProtoReflect.Descriptor instead.
func (*AddScheduleRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{2}
}

func (x *AddScheduleRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *AddScheduleRequest) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *AddScheduleRequest) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *AddScheduleRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AddScheduleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddScheduleRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "schedule_id": "sch-65bb6b55d162",
//	   "schedule": {"hours": [2]},
//	   "tags": {"a": "b"},
//	   "domain_id": "domain-58010aa2e451"
//	}
type UpdateScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId string `protobuf:"bytes,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// +optional
	Schedule *Scheduled `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// +optional
	Tags      *_struct.Struct `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	StorageId string          `protobuf:"bytes,4,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	DomainId  string          `protobuf:"bytes,11,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *UpdateScheduleRequest) Reset() {
	*x = UpdateScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduleRequest) ProtoMessage() {}

func (x *UpdateScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduleRequest.ProtoReflect.Descriptor instead.
func (*UpdateScheduleRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *UpdateScheduleRequest) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *UpdateScheduleRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateScheduleRequest) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *UpdateScheduleRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "schedule_id": "sch-65bb6b55d162",
//	   "domain_id": "domain-58010aa2e451"
//	}
type ScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId string `protobuf:"bytes,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	DomainId   string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *ScheduleRequest) Reset() {
	*x = ScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleRequest) ProtoMessage() {}

func (x *ScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleRequest.ProtoReflect.Descriptor instead.
func (*ScheduleRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{4}
}

func (x *ScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *ScheduleRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "schedule_id": "sch-3da9c9ed2ee2",
//	   "domain_id": "domain-58010aa2e451"
//	}
type GetScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId string `protobuf:"bytes,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	DomainId   string `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// +optional
	Only []string `protobuf:"bytes,3,rep,name=only,proto3" json:"only,omitempty"`
}

func (x *GetScheduleRequest) Reset() {
	*x = GetScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleRequest) ProtoMessage() {}

func (x *GetScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetScheduleRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{5}
}

func (x *GetScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *GetScheduleRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *GetScheduleRequest) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

//	{
//	   "query": {},
//	   "domain_id": "domain-58010aa2e451"
//	}
type ScheduleQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query *v1.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	ScheduleId string `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// +optional
	Topic string `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	// +optional
	State string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	// +optional
	ResourceType string `protobuf:"bytes,5,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	DomainId     string `protobuf:"bytes,6,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *ScheduleQuery) Reset() {
	*x = ScheduleQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleQuery) ProtoMessage() {}

func (x *ScheduleQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleQuery.ProtoReflect.Descriptor instead.
func (*ScheduleQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{6}
}

func (x *ScheduleQuery) GetQuery() *v1.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ScheduleQuery) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *ScheduleQuery) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ScheduleQuery) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ScheduleQuery) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *ScheduleQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

//	{
//	   "schedule_id": "sch-65bb6b55d162",
//	   "topic": "daily_cloud_service_summary_test",
//	   "state": "ENABLED",
//	   "options": {
//	       "aggregate": [
//	           {
//	               "query": {
//	                   "extend_data": {
//	                       "label": "Server"
//	                   },
//	                   "resource_type": "inventory.CloudService",
//	                   "query": {
//	                       "filter": [
//	                           {
//	                               "key": "ref_cloud_service_type.is_primary",
//	                               "value": true,
//	                               "operator": "eq"
//	                           },
//	                           {
//	                               "operator": "eq",
//	                               "key": "ref_cloud_service_type.labels",
//	                               "value": "Server"
//	                           }
//	                       ],
//	                       "aggregate": [
//	                           {
//	                               "group": {
//	                                   "fields": [
//	                                       {
//	                                           "operator": "count",
//	                                           "name": "value"
//	                                       }
//	                                   ],
//	                                   "keys": [
//	                                       {
//	                                           "name": "project_id",
//	                                           "key": "project_id"
//	                                       },
//	                                       {
//	                                           "name": "cloud_service_type",
//	                                           "key": "cloud_service_type"
//	                                       },
//	                                       {
//	                                           "key": "cloud_service_group",
//	                                           "name": "cloud_service_group"
//	                                       },
//	                                       {
//	                                           "key": "provider",
//	                                           "name": "provider"
//	                                       }
//	                                   ]
//	                               }
//	                           }
//	                       ]
//	                   }
//	               }
//	           },
//	           {
//	               "concat": {
//	                   "query": {
//	                       "aggregate": [
//	                           {
//	                               "group": {
//	                                   "fields": [
//	                                       {
//	                                           "operator": "count",
//	                                           "name": "value"
//	                                       }
//	                                   ],
//	                                   "keys": [
//	                                       {
//	                                           "name": "project_id",
//	                                           "key": "project_id"
//	                                       },
//	                                       {
//	                                           "name": "cloud_service_type",
//	                                           "key": "cloud_service_type"
//	                                       },
//	                                       {
//	                                           "key": "cloud_service_group",
//	                                           "name": "cloud_service_group"
//	                                       },
//	                                       {
//	                                           "key": "provider",
//	                                           "name": "provider"
//	                                       }
//	                                   ]
//	                               }
//	                           }
//	                       ],
//	                       "filter": [
//	                           {
//	                               "operator": "eq",
//	                               "value": true,
//	                               "key": "ref_cloud_service_type.is_primary"
//	                           },
//	                           {
//	                               "operator": "eq",
//	                               "key": "ref_cloud_service_type.labels",
//	                               "value": "Database"
//	                           }
//	                       ]
//	                   },
//	                   "resource_type": "inventory.CloudService",
//	                   "extend_data": {
//	                       "label": "Database"
//	                   }
//	               }
//	           },
//	           {
//	               "concat": {
//	                   "resource_type": "inventory.CloudService",
//	                   "query": {
//	                       "aggregate": [
//	                           {
//	                               "group": {
//	                                   "fields": [
//	                                       {
//	                                           "operator": "count",
//	                                           "name": "value"
//	                                       }
//	                                   ],
//	                                   "keys": [
//	                                       {
//	                                           "key": "project_id",
//	                                           "name": "project_id"
//	                                       },
//	                                       {
//	                                           "name": "cloud_service_type",
//	                                           "key": "cloud_service_type"
//	                                       },
//	                                       {
//	                                           "key": "cloud_service_group",
//	                                           "name": "cloud_service_group"
//	                                       },
//	                                       {
//	                                           "name": "provider",
//	                                           "key": "provider"
//	                                       }
//	                                   ]
//	                               }
//	                           }
//	                       ],
//	                       "filter": [
//	                           {
//	                               "key": "ref_cloud_service_type.is_primary",
//	                               "value": true,
//	                               "operator": "eq"
//	                           },
//	                           {
//	                               "operator": "eq",
//	                               "key": "ref_cloud_service_type.labels",
//	                               "value": "Container"
//	                           }
//	                       ]
//	                   },
//	                   "extend_data": {
//	                       "label": "Container"
//	                   }
//	               }
//	           },
//	           {
//	               "concat": {
//	                   "query": {
//	                       "aggregate": [
//	                           {
//	                               "group": {
//	                                   "keys": [
//	                                       {
//	                                           "key": "project_id",
//	                                           "name": "project_id"
//	                                       },
//	                                       {
//	                                           "name": "cloud_service_type",
//	                                           "key": "cloud_service_type"
//	                                       },
//	                                       {
//	                                           "name": "cloud_service_group",
//	                                           "key": "cloud_service_group"
//	                                       },
//	                                       {
//	                                           "key": "provider",
//	                                           "name": "provider"
//	                                       }
//	                                   ],
//	                                   "fields": [
//	                                       {
//	                                           "operator": "count",
//	                                           "name": "value"
//	                                       }
//	                                   ]
//	                               }
//	                           }
//	                       ],
//	                       "filter": [
//	                           {
//	                               "key": "ref_cloud_service_type.is_primary",
//	                               "operator": "eq",
//	                               "value": true
//	                           },
//	                           {
//	                               "key": "ref_cloud_service_type.labels",
//	                               "operator": "eq",
//	                               "value": "Networking"
//	                           }
//	                       ]
//	                   },
//	                   "resource_type": "inventory.CloudService",
//	                   "extend_data": {
//	                       "label": "Networking"
//	                   }
//	               }
//	           },
//	           {
//	               "concat": {
//	                   "resource_type": "inventory.CloudService",
//	                   "extend_data": {
//	                       "label": "Security"
//	                   },
//	                   "query": {
//	                       "filter": [
//	                           {
//	                               "operator": "eq",
//	                               "key": "ref_cloud_service_type.is_primary",
//	                               "value": true
//	                           },
//	                           {
//	                               "operator": "eq",
//	                               "key": "ref_cloud_service_type.labels",
//	                               "value": "Security"
//	                           }
//	                       ],
//	                       "aggregate": [
//	                           {
//	                               "group": {
//	                                   "keys": [
//	                                       {
//	                                           "name": "project_id",
//	                                           "key": "project_id"
//	                                       },
//	                                       {
//	                                           "name": "cloud_service_type",
//	                                           "key": "cloud_service_type"
//	                                       },
//	                                       {
//	                                           "name": "cloud_service_group",
//	                                           "key": "cloud_service_group"
//	                                       },
//	                                       {
//	                                           "key": "provider",
//	                                           "name": "provider"
//	                                       }
//	                                   ],
//	                                   "fields": [
//	                                       {
//	                                           "name": "value",
//	                                           "operator": "count"
//	                                       }
//	                                   ]
//	                               }
//	                           }
//	                       ]
//	                   }
//	               }
//	           },
//	           {
//	               "concat": {
//	                   "resource_type": "inventory.CloudService",
//	                   "query": {
//	                       "filter": [
//	                           {
//	                               "key": "ref_cloud_service_type.is_primary",
//	                               "value": true,
//	                               "operator": "eq"
//	                           },
//	                           {
//	                               "key": "ref_cloud_service_type.labels",
//	                               "value": "Analytics",
//	                               "operator": "eq"
//	                           }
//	                       ],
//	                       "aggregate": [
//	                           {
//	                               "group": {
//	                                   "keys": [
//	                                       {
//	                                           "key": "project_id",
//	                                           "name": "project_id"
//	                                       },
//	                                       {
//	                                           "key": "cloud_service_type",
//	                                           "name": "cloud_service_type"
//	                                       },
//	                                       {
//	                                           "key": "cloud_service_group",
//	                                           "name": "cloud_service_group"
//	                                       },
//	                                       {
//	                                           "key": "provider",
//	                                           "name": "provider"
//	                                       }
//	                                   ],
//	                                   "fields": [
//	                                       {
//	                                           "operator": "count",
//	                                           "name": "value"
//	                                       }
//	                                   ]
//	                               }
//	                           }
//	                       ]
//	                   },
//	                   "extend_data": {
//	                       "label": "Analytics"
//	                   }
//	               }
//	           },
//	           {
//	               "concat": {
//	                   "extend_data": {
//	                       "label": "All"
//	                   },
//	                   "resource_type": "inventory.CloudService",
//	                   "query": {
//	                       "filter": [
//	                           {
//	                               "key": "ref_cloud_service_type.is_primary",
//	                               "value": true,
//	                               "operator": "eq"
//	                           }
//	                       ],
//	                       "aggregate": [
//	                           {
//	                               "group": {
//	                                   "fields": [
//	                                       {
//	                                           "name": "value",
//	                                           "operator": "count"
//	                                       }
//	                                   ],
//	                                   "keys": [
//	                                       {
//	                                           "key": "project_id",
//	                                           "name": "project_id"
//	                                       },
//	                                       {
//	                                           "key": "cloud_service_type",
//	                                           "name": "cloud_service_type"
//	                                       },
//	                                       {
//	                                           "key": "cloud_service_group",
//	                                           "name": "cloud_service_group"
//	                                       },
//	                                       {
//	                                           "key": "provider",
//	                                           "name": "provider"
//	                                       }
//	                                   ]
//	                               }
//	                           }
//	                       ]
//	                   }
//	               }
//	           },
//	           {
//	               "concat": {
//	                   "resource_type": "inventory.CloudService",
//	                   "query": {
//	                       "aggregate": [
//	                           {
//	                               "group": {
//	                                   "fields": [
//	                                       {
//	                                           "operator": "sum",
//	                                           "name": "value",
//	                                           "key": "data.size"
//	                                       }
//	                                   ],
//	                                   "keys": [
//	                                       {
//	                                           "name": "project_id",
//	                                           "key": "project_id"
//	                                       },
//	                                       {
//	                                           "key": "cloud_service_type",
//	                                           "name": "cloud_service_type"
//	                                       },
//	                                       {
//	                                           "name": "cloud_service_group",
//	                                           "key": "cloud_service_group"
//	                                       },
//	                                       {
//	                                           "name": "provider",
//	                                           "key": "provider"
//	                                       }
//	                                   ]
//	                               }
//	                           }
//	                       ],
//	                       "filter": [
//	                           {
//	                               "operator": "eq",
//	                               "key": "ref_cloud_service_type.is_major",
//	                               "value": true
//	                           },
//	                           {
//	                               "value": "Storage",
//	                               "operator": "eq",
//	                               "key": "ref_cloud_service_type.labels"
//	                           }
//	                       ]
//	                   },
//	                   "extend_data": {
//	                       "label": "Storage"
//	                   }
//	               }
//	           }
//	       ]
//	   },
//	   "schedule": {
//	       "hours": [
//	           1
//	       ]
//	   },
//	   "tags": {},
//	   "domain_id": "domain-58010aa2e451",
//	   "created_at": "2022-07-26T02:08:48.233Z"
//	}
type ScheduleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduleId      string             `protobuf:"bytes,1,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	Topic           string             `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	State           ScheduleInfo_State `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.statistics.v1.ScheduleInfo_State" json:"state,omitempty"`
	Options         *_struct.Struct    `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	Schedule        *Scheduled         `protobuf:"bytes,5,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Tags            *_struct.Struct    `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId        string             `protobuf:"bytes,7,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt       string             `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastScheduledAt string             `protobuf:"bytes,9,opt,name=last_scheduled_at,json=lastScheduledAt,proto3" json:"last_scheduled_at,omitempty"`
}

func (x *ScheduleInfo) Reset() {
	*x = ScheduleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleInfo) ProtoMessage() {}

func (x *ScheduleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleInfo.ProtoReflect.Descriptor instead.
func (*ScheduleInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{7}
}

func (x *ScheduleInfo) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *ScheduleInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ScheduleInfo) GetState() ScheduleInfo_State {
	if x != nil {
		return x.State
	}
	return ScheduleInfo_NONE
}

func (x *ScheduleInfo) GetOptions() *_struct.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ScheduleInfo) GetSchedule() *Scheduled {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *ScheduleInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ScheduleInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ScheduleInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ScheduleInfo) GetLastScheduledAt() string {
	if x != nil {
		return x.LastScheduledAt
	}
	return ""
}

//	{
//	   "results": [
//	       {
//	           "schedule_id": "sch-3da9c9ed2ee2",
//	           "topic": "daily_cloud_service_summary",
//	           "state": "ENABLED",
//	           "options": {
//	               "aggregate": [
//	                   {
//	                       "query": {
//	                           "query": {
//	                               "aggregate": [
//	                                   {
//	                                       "group": {
//	                                           "keys": [
//	                                               {
//	                                                   "key": "project_id",
//	                                                   "name": "project_id"
//	                                               },
//	                                               {
//	                                                   "name": "cloud_service_type",
//	                                                   "key": "cloud_service_type"
//	                                               },
//	                                               {
//	                                                   "name": "cloud_service_group",
//	                                                   "key": "cloud_service_group"
//	                                               },
//	                                               {
//	                                                   "key": "provider",
//	                                                   "name": "provider"
//	                                               }
//	                                           ],
//	                                           "fields": [
//	                                               {
//	                                                   "operator": "count",
//	                                                   "name": "value"
//	                                               }
//	                                           ]
//	                                       }
//	                                   }
//	                               ],
//	                               "filter": [
//	                                   {
//	                                       "key": "ref_cloud_service_type.is_primary",
//	                                       "operator": "eq",
//	                                       "value": true
//	                                   },
//	                                   {
//	                                       "key": "ref_cloud_service_type.labels",
//	                                       "value": "Server",
//	                                       "operator": "eq"
//	                                   }
//	                               ]
//	                           },
//	                           "resource_type": "inventory.CloudService",
//	                           "extend_data": {
//	                               "label": "Server"
//	                           }
//	                       }
//	                   },
//	                   {
//	                       "concat": {
//	                           "query": {
//	                               "aggregate": [
//	                                   {
//	                                       "group": {
//	                                           "keys": [
//	                                               {
//	                                                   "key": "project_id",
//	                                                   "name": "project_id"
//	                                               },
//	                                               {
//	                                                   "name": "cloud_service_type",
//	                                                   "key": "cloud_service_type"
//	                                               },
//	                                               {
//	                                                   "name": "cloud_service_group",
//	                                                   "key": "cloud_service_group"
//	                                               },
//	                                               {
//	                                                   "key": "provider",
//	                                                   "name": "provider"
//	                                               }
//	                                           ],
//	                                           "fields": [
//	                                               {
//	                                                   "operator": "count",
//	                                                   "name": "value"
//	                                               }
//	                                           ]
//	                                       }
//	                                   }
//	                               ],
//	                               "filter": [
//	                                   {
//	                                       "operator": "eq",
//	                                       "key": "ref_cloud_service_type.is_primary",
//	                                       "value": true
//	                                   },
//	                                   {
//	                                       "key": "ref_cloud_service_type.labels",
//	                                       "operator": "eq",
//	                                       "value": "Database"
//	                                   }
//	                               ]
//	                           },
//	                           "resource_type": "inventory.CloudService",
//	                           "extend_data": {
//	                               "label": "Database"
//	                           }
//	                       }
//	                   },
//	                   {
//	                       "concat": {
//	                           "query": {
//	                               "aggregate": [
//	                                   {
//	                                       "group": {
//	                                           "keys": [
//	                                               {
//	                                                   "key": "project_id",
//	                                                   "name": "project_id"
//	                                               },
//	                                               {
//	                                                   "name": "cloud_service_type",
//	                                                   "key": "cloud_service_type"
//	                                               },
//	                                               {
//	                                                   "name": "cloud_service_group",
//	                                                   "key": "cloud_service_group"
//	                                               },
//	                                               {
//	                                                   "key": "provider",
//	                                                   "name": "provider"
//	                                               }
//	                                           ],
//	                                           "fields": [
//	                                               {
//	                                                   "name": "value",
//	                                                   "operator": "count"
//	                                               }
//	                                           ]
//	                                       }
//	                                   }
//	                               ],
//	                               "filter": [
//	                                   {
//	                                       "key": "ref_cloud_service_type.is_primary",
//	                                       "operator": "eq",
//	                                       "value": true
//	                                   },
//	                                   {
//	                                       "operator": "eq",
//	                                       "value": "Container",
//	                                       "key": "ref_cloud_service_type.labels"
//	                                   }
//	                               ]
//	                           },
//	                           "resource_type": "inventory.CloudService",
//	                           "extend_data": {
//	                               "label": "Container"
//	                           }
//	                       }
//	                   },
//	                   {
//	                       "concat": {
//	                           "query": {
//	                               "filter": [
//	                                   {
//	                                       "key": "ref_cloud_service_type.is_primary",
//	                                       "value": true,
//	                                       "operator": "eq"
//	                                   },
//	                                   {
//	                                       "key": "ref_cloud_service_type.labels",
//	                                       "operator": "eq",
//	                                       "value": "Networking"
//	                                   }
//	                               ],
//	                               "aggregate": [
//	                                   {
//	                                       "group": {
//	                                           "keys": [
//	                                               {
//	                                                   "key": "project_id",
//	                                                   "name": "project_id"
//	                                               },
//	                                               {
//	                                                   "key": "cloud_service_type",
//	                                                   "name": "cloud_service_type"
//	                                               },
//	                                               {
//	                                                   "key": "cloud_service_group",
//	                                                   "name": "cloud_service_group"
//	                                               },
//	                                               {
//	                                                   "key": "provider",
//	                                                   "name": "provider"
//	                                               }
//	                                           ],
//	                                           "fields": [
//	                                               {
//	                                                   "name": "value",
//	                                                   "operator": "count"
//	                                               }
//	                                           ]
//	                                       }
//	                                   }
//	                               ]
//	                           },
//	                           "extend_data": {
//	                               "label": "Networking"
//	                           },
//	                           "resource_type": "inventory.CloudService"
//	                       }
//	                   },
//	                   {
//	                       "concat": {
//	                           "extend_data": {
//	                               "label": "Security"
//	                           },
//	                           "query": {
//	                               "filter": [
//	                                   {
//	                                       "key": "ref_cloud_service_type.is_primary",
//	                                       "value": true,
//	                                       "operator": "eq"
//	                                   },
//	                                   {
//	                                       "key": "ref_cloud_service_type.labels",
//	                                       "value": "Security",
//	                                       "operator": "eq"
//	                                   }
//	                               ],
//	                               "aggregate": [
//	                                   {
//	                                       "group": {
//	                                           "keys": [
//	                                               {
//	                                                   "name": "project_id",
//	                                                   "key": "project_id"
//	                                               },
//	                                               {
//	                                                   "name": "cloud_service_type",
//	                                                   "key": "cloud_service_type"
//	                                               },
//	                                               {
//	                                                   "name": "cloud_service_group",
//	                                                   "key": "cloud_service_group"
//	                                               },
//	                                               {
//	                                                   "name": "provider",
//	                                                   "key": "provider"
//	                                               }
//	                                           ],
//	                                           "fields": [
//	                                               {
//	                                                   "operator": "count",
//	                                                   "name": "value"
//	                                               }
//	                                           ]
//	                                       }
//	                                   }
//	                               ]
//	                           },
//	                           "resource_type": "inventory.CloudService"
//	                       }
//	                   },
//	                   {
//	                       "concat": {
//	                           "resource_type": "inventory.CloudService",
//	                           "query": {
//	                               "filter": [
//	                                   {
//	                                       "value": true,
//	                                       "operator": "eq",
//	                                       "key": "ref_cloud_service_type.is_primary"
//	                                   },
//	                                   {
//	                                       "key": "ref_cloud_service_type.labels",
//	                                       "operator": "eq",
//	                                       "value": "Analytics"
//	                                   }
//	                               ],
//	                               "aggregate": [
//	                                   {
//	                                       "group": {
//	                                           "keys": [
//	                                               {
//	                                                   "name": "project_id",
//	                                                   "key": "project_id"
//	                                               },
//	                                               {
//	                                                   "name": "cloud_service_type",
//	                                                   "key": "cloud_service_type"
//	                                               },
//	                                               {
//	                                                   "key": "cloud_service_group",
//	                                                   "name": "cloud_service_group"
//	                                               },
//	                                               {
//	                                                   "key": "provider",
//	                                                   "name": "provider"
//	                                               }
//	                                           ],
//	                                           "fields": [
//	                                               {
//	                                                   "name": "value",
//	                                                   "operator": "count"
//	                                               }
//	                                           ]
//	                                       }
//	                                   }
//	                               ]
//	                           },
//	                           "extend_data": {
//	                               "label": "Analytics"
//	                           }
//	                       }
//	                   },
//	                   {
//	                       "concat": {
//	                           "resource_type": "inventory.CloudService",
//	                           "query": {
//	                               "aggregate": [
//	                                   {
//	                                       "group": {
//	                                           "fields": [
//	                                               {
//	                                                   "name": "value",
//	                                                   "operator": "count"
//	                                               }
//	                                           ],
//	                                           "keys": [
//	                                               {
//	                                                   "name": "project_id",
//	                                                   "key": "project_id"
//	                                               },
//	                                               {
//	                                                   "key": "cloud_service_type",
//	                                                   "name": "cloud_service_type"
//	                                               },
//	                                               {
//	                                                   "key": "cloud_service_group",
//	                                                   "name": "cloud_service_group"
//	                                               },
//	                                               {
//	                                                   "name": "provider",
//	                                                   "key": "provider"
//	                                               }
//	                                           ]
//	                                       }
//	                                   }
//	                               ],
//	                               "filter": [
//	                                   {
//	                                       "value": true,
//	                                       "operator": "eq",
//	                                       "key": "ref_cloud_service_type.is_primary"
//	                                   }
//	                               ]
//	                           },
//	                           "extend_data": {
//	                               "label": "All"
//	                           }
//	                       }
//	                   },
//	                   {
//	                       "concat": {
//	                           "resource_type": "inventory.CloudService",
//	                           "extend_data": {
//	                               "label": "Storage"
//	                           },
//	                           "query": {
//	                               "filter": [
//	                                   {
//	                                       "key": "ref_cloud_service_type.is_major",
//	                                       "operator": "eq",
//	                                       "value": true
//	                                   },
//	                                   {
//	                                       "key": "ref_cloud_service_type.labels",
//	                                       "operator": "eq",
//	                                       "value": "Storage"
//	                                   }
//	                               ],
//	                               "aggregate": [
//	                                   {
//	                                       "group": {
//	                                           "keys": [
//	                                               {
//	                                                   "name": "project_id",
//	                                                   "key": "project_id"
//	                                               },
//	                                               {
//	                                                   "key": "cloud_service_type",
//	                                                   "name": "cloud_service_type"
//	                                               },
//	                                               {
//	                                                   "name": "cloud_service_group",
//	                                                   "key": "cloud_service_group"
//	                                               },
//	                                               {
//	                                                   "key": "provider",
//	                                                   "name": "provider"
//	                                               }
//	                                           ],
//	                                           "fields": [
//	                                               {
//	                                                   "name": "value",
//	                                                   "operator": "sum",
//	                                                   "key": "data.size"
//	                                               }
//	                                           ]
//	                                       }
//	                                   }
//	                               ]
//	                           }
//	                       }
//	                   }
//	               ]
//	           },
//	           "schedule": {
//	               "hours": [
//	                   1
//	               ]
//	           },
//	           "tags": {},
//	           "domain_id": "domain-58010aa2e451",
//	           "created_at": "2022-06-13T11:41:35.811Z"
//	       }
//	   ],
//	   "total_count": 1
//	}
type SchedulesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*ScheduleInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *SchedulesInfo) Reset() {
	*x = SchedulesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulesInfo) ProtoMessage() {}

func (x *SchedulesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulesInfo.ProtoReflect.Descriptor instead.
func (*SchedulesInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{8}
}

func (x *SchedulesInfo) GetResults() []*ScheduleInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SchedulesInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ScheduleStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    *v1.StatisticsQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DomainId string              `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *ScheduleStatQuery) Reset() {
	*x = ScheduleStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleStatQuery) ProtoMessage() {}

func (x *ScheduleStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_statistics_v1_schedule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleStatQuery.ProtoReflect.Descriptor instead.
func (*ScheduleStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP(), []int{9}
}

func (x *ScheduleStatQuery) GetQuery() *v1.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ScheduleStatQuery) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

var File_spaceone_api_statistics_v1_schedule_proto protoreflect.FileDescriptor

var file_spaceone_api_statistics_v1_schedule_proto_rawDesc = []byte{
	0x0a, 0x29, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x29, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a,
	0x09, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x0b, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x09, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x83, 0x02,
	0x0a, 0x12, 0x41, 0x64, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x22, 0xe4, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0f, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6f,
	0x6e, 0x6c, 0x79, 0x22, 0xd1, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xc4, 0x03, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x2c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x74,
	0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x42, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6d, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x32, 0xc5, 0x08, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x87, 0x01, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x12, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x64, 0x12, 0x8d, 0x01, 0x0a, 0x06, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x78, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a,
	0x22, 0x1e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x87, 0x01, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x29,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x77, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x42, 0x41, 0x5a, 0x3f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66,
	0x6f, 0x72, 0x65, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74,
	0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6f, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spaceone_api_statistics_v1_schedule_proto_rawDescOnce sync.Once
	file_spaceone_api_statistics_v1_schedule_proto_rawDescData = file_spaceone_api_statistics_v1_schedule_proto_rawDesc
)

func file_spaceone_api_statistics_v1_schedule_proto_rawDescGZIP() []byte {
	file_spaceone_api_statistics_v1_schedule_proto_rawDescOnce.Do(func() {
		file_spaceone_api_statistics_v1_schedule_proto_rawDescData = protoimpl.X.CompressGZIP(file_spaceone_api_statistics_v1_schedule_proto_rawDescData)
	})
	return file_spaceone_api_statistics_v1_schedule_proto_rawDescData
}

var file_spaceone_api_statistics_v1_schedule_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spaceone_api_statistics_v1_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_spaceone_api_statistics_v1_schedule_proto_goTypes = []interface{}{
	(ScheduleInfo_State)(0),       // 0: spaceone.api.statistics.v1.ScheduleInfo.State
	(*Scheduled)(nil),             // 1: spaceone.api.statistics.v1.Scheduled
	(*QueryOption)(nil),           // 2: spaceone.api.statistics.v1.QueryOption
	(*AddScheduleRequest)(nil),    // 3: spaceone.api.statistics.v1.AddScheduleRequest
	(*UpdateScheduleRequest)(nil), // 4: spaceone.api.statistics.v1.UpdateScheduleRequest
	(*ScheduleRequest)(nil),       // 5: spaceone.api.statistics.v1.ScheduleRequest
	(*GetScheduleRequest)(nil),    // 6: spaceone.api.statistics.v1.GetScheduleRequest
	(*ScheduleQuery)(nil),         // 7: spaceone.api.statistics.v1.ScheduleQuery
	(*ScheduleInfo)(nil),          // 8: spaceone.api.statistics.v1.ScheduleInfo
	(*SchedulesInfo)(nil),         // 9: spaceone.api.statistics.v1.SchedulesInfo
	(*ScheduleStatQuery)(nil),     // 10: spaceone.api.statistics.v1.ScheduleStatQuery
	(*StatAggregate)(nil),         // 11: spaceone.api.statistics.v1.StatAggregate
	(*StatPage)(nil),              // 12: spaceone.api.statistics.v1.StatPage
	(*_struct.Struct)(nil),        // 13: google.protobuf.Struct
	(*v1.Query)(nil),              // 14: spaceone.api.core.v1.Query
	(*v1.StatisticsQuery)(nil),    // 15: spaceone.api.core.v1.StatisticsQuery
	(*empty.Empty)(nil),           // 16: google.protobuf.Empty
}
var file_spaceone_api_statistics_v1_schedule_proto_depIdxs = []int32{
	11, // 0: spaceone.api.statistics.v1.QueryOption.aggregate:type_name -> spaceone.api.statistics.v1.StatAggregate
	12, // 1: spaceone.api.statistics.v1.QueryOption.page:type_name -> spaceone.api.statistics.v1.StatPage
	13, // 2: spaceone.api.statistics.v1.AddScheduleRequest.options:type_name -> google.protobuf.Struct
	1,  // 3: spaceone.api.statistics.v1.AddScheduleRequest.schedule:type_name -> spaceone.api.statistics.v1.Scheduled
	13, // 4: spaceone.api.statistics.v1.AddScheduleRequest.tags:type_name -> google.protobuf.Struct
	1,  // 5: spaceone.api.statistics.v1.UpdateScheduleRequest.schedule:type_name -> spaceone.api.statistics.v1.Scheduled
	13, // 6: spaceone.api.statistics.v1.UpdateScheduleRequest.tags:type_name -> google.protobuf.Struct
	14, // 7: spaceone.api.statistics.v1.ScheduleQuery.query:type_name -> spaceone.api.core.v1.Query
	0,  // 8: spaceone.api.statistics.v1.ScheduleInfo.state:type_name -> spaceone.api.statistics.v1.ScheduleInfo.State
	13, // 9: spaceone.api.statistics.v1.ScheduleInfo.options:type_name -> google.protobuf.Struct
	1,  // 10: spaceone.api.statistics.v1.ScheduleInfo.schedule:type_name -> spaceone.api.statistics.v1.Scheduled
	13, // 11: spaceone.api.statistics.v1.ScheduleInfo.tags:type_name -> google.protobuf.Struct
	8,  // 12: spaceone.api.statistics.v1.SchedulesInfo.results:type_name -> spaceone.api.statistics.v1.ScheduleInfo
	15, // 13: spaceone.api.statistics.v1.ScheduleStatQuery.query:type_name -> spaceone.api.core.v1.StatisticsQuery
	3,  // 14: spaceone.api.statistics.v1.Schedule.add:input_type -> spaceone.api.statistics.v1.AddScheduleRequest
	4,  // 15: spaceone.api.statistics.v1.Schedule.update:input_type -> spaceone.api.statistics.v1.UpdateScheduleRequest
	5,  // 16: spaceone.api.statistics.v1.Schedule.enable:input_type -> spaceone.api.statistics.v1.ScheduleRequest
	5,  // 17: spaceone.api.statistics.v1.Schedule.disable:input_type -> spaceone.api.statistics.v1.ScheduleRequest
	5,  // 18: spaceone.api.statistics.v1.Schedule.delete:input_type -> spaceone.api.statistics.v1.ScheduleRequest
	6,  // 19: spaceone.api.statistics.v1.Schedule.get:input_type -> spaceone.api.statistics.v1.GetScheduleRequest
	7,  // 20: spaceone.api.statistics.v1.Schedule.list:input_type -> spaceone.api.statistics.v1.ScheduleQuery
	10, // 21: spaceone.api.statistics.v1.Schedule.stat:input_type -> spaceone.api.statistics.v1.ScheduleStatQuery
	8,  // 22: spaceone.api.statistics.v1.Schedule.add:output_type -> spaceone.api.statistics.v1.ScheduleInfo
	8,  // 23: spaceone.api.statistics.v1.Schedule.update:output_type -> spaceone.api.statistics.v1.ScheduleInfo
	8,  // 24: spaceone.api.statistics.v1.Schedule.enable:output_type -> spaceone.api.statistics.v1.ScheduleInfo
	8,  // 25: spaceone.api.statistics.v1.Schedule.disable:output_type -> spaceone.api.statistics.v1.ScheduleInfo
	16, // 26: spaceone.api.statistics.v1.Schedule.delete:output_type -> google.protobuf.Empty
	8,  // 27: spaceone.api.statistics.v1.Schedule.get:output_type -> spaceone.api.statistics.v1.ScheduleInfo
	9,  // 28: spaceone.api.statistics.v1.Schedule.list:output_type -> spaceone.api.statistics.v1.SchedulesInfo
	13, // 29: spaceone.api.statistics.v1.Schedule.stat:output_type -> google.protobuf.Struct
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_spaceone_api_statistics_v1_schedule_proto_init() }
func file_spaceone_api_statistics_v1_schedule_proto_init() {
	if File_spaceone_api_statistics_v1_schedule_proto != nil {
		return
	}
	file_spaceone_api_statistics_v1_resource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_spaceone_api_statistics_v1_schedule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scheduled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_statistics_v1_schedule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_statistics_v1_schedule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_statistics_v1_schedule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_statistics_v1_schedule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_statistics_v1_schedule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_statistics_v1_schedule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_statistics_v1_schedule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_statistics_v1_schedule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spaceone_api_statistics_v1_schedule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spaceone_api_statistics_v1_schedule_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_statistics_v1_schedule_proto_goTypes,
		DependencyIndexes: file_spaceone_api_statistics_v1_schedule_proto_depIdxs,
		EnumInfos:         file_spaceone_api_statistics_v1_schedule_proto_enumTypes,
		MessageInfos:      file_spaceone_api_statistics_v1_schedule_proto_msgTypes,
	}.Build()
	File_spaceone_api_statistics_v1_schedule_proto = out.File
	file_spaceone_api_statistics_v1_schedule_proto_rawDesc = nil
	file_spaceone_api_statistics_v1_schedule_proto_goTypes = nil
	file_spaceone_api_statistics_v1_schedule_proto_depIdxs = nil
}
