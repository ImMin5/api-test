syntax = "proto3";

package spaceone.api.identity.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service APIKey {
    rpc create (CreateAPIKeyRequest) returns (APIKeyInfo) {
        option (google.api.http) = {
            post: "/identity/v1/api-key/create"
            body: "*"
        };
    }
    rpc enable (APIKeyRequest) returns (APIKeyInfo) {
        option (google.api.http) = {
            post: "/identity/v1/api-key/enable"
            body: "*"
        };
    }
    rpc disable (APIKeyRequest) returns (APIKeyInfo) {
        option (google.api.http) = {
            post: "/identity/v1/api-key/disable"
            body: "*"
        };
    }
    rpc delete (APIKeyRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/identity/v1/api-key/delete"
            body: "*"
        };
    }
    rpc get (GetAPIKeyRequest) returns (APIKeyInfo) {
        option (google.api.http) = {
            post: "/identity/v1/api-key/get"
            body: "*"
        };
    }
    rpc list (APIKeyQuery) returns (APIKeysInfo) {
        option (google.api.http) = {
            post: "/identity/v1/api-key/list"
            body: "*"
        };
    }
    rpc stat (APIKeyStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/identity/v1/api-key/stat"
            body: "*"
        };
    }
}

message CreateAPIKeyRequest {
    string user_id = 1;
    string domain_id = 2;
}

message APIKeyRequest {
    string api_key_id = 1;
    string domain_id = 2;
}

message GetAPIKeyRequest {
    string api_key_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

message APIKeyInfo {
    enum State {
        NONE_STATE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }

    string api_key_id = 1;
    string api_key = 2;
    State state = 3;
    string user_id = 4;
    string domain_id = 5;
    string last_accessed_at = 10;
    string created_at = 11;
}

message APIKeyQuery {
    enum State {
        NONE_STATE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }

    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string api_key_id = 2;
    // +optional
    State state = 3;
    // +optional
    string user_id = 4;
    string domain_id = 5;
}

message APIKeysInfo {
    repeated APIKeyInfo results = 1;
    int32 total_count = 2;
}

message APIKeyStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}