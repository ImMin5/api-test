syntax = "proto3";

package spaceone.api.identity.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";

service Provider {
    rpc create (CreateProviderRequest) returns (ProviderInfo) {
        option (google.api.http) = {
            post: "/identity/v1/provider/create"
            body: "*"
        };
    }
    rpc update (UpdateProviderRequest) returns (ProviderInfo) {
        option (google.api.http) = {
            post: "/identity/v1/provider/update"
            body: "*"
        };
    }
    rpc delete (ProviderRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/identity/v1/provider/delete"
            body: "*"
        };
    }
    rpc get (GetProviderRequest) returns (ProviderInfo) {
        option (google.api.http) = {
            post: "/identity/v1/provider/get"
            body: "*"
        };
    }
    rpc list (ProviderQuery) returns (ProvidersInfo) {
        option (google.api.http) = {
            post: "/identity/v1/provider/list"
            body: "*"
        };
    }
    rpc stat (ProviderStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/identity/v1/provider/stat"
            body: "*"
        };
    }
}

message CreateProviderRequest {
    string provider = 1;
    string name = 2;
    // +optional
    int32 order = 3;
    google.protobuf.Struct template = 4;
    // +optional
    google.protobuf.Struct metadata = 5;
    // +optional
    google.protobuf.Struct capability = 6;
    // +optional
    google.protobuf.Struct tags = 7;
    string domain_id = 11;
}

message UpdateProviderRequest {
    string provider = 1;
    // +optional
    string name = 2;
    // +optional
    int32 order = 3;
    // +optional
    google.protobuf.Struct template = 4;
    // +optional
    google.protobuf.Struct metadata = 5;
    // +optional
    google.protobuf.Struct capability = 6;
    // +optional
    google.protobuf.Struct tags = 7;
    string domain_id = 11;
}

message ProviderRequest {
    string provider = 1;
    string domain_id = 2;
}

message GetProviderRequest {
    string provider = 1;
    // +optional
    repeated string only = 2;
    string domain_id = 3;
}

message ProviderQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string provider = 2;
    // +optional
    string name = 3;
    string domain_id = 4;
}

message ProviderInfo {
    string provider = 1;
    string name = 2;
    int32 order = 3;
    google.protobuf.Struct template = 4;
    google.protobuf.Struct metadata = 5;
    google.protobuf.Struct capability = 6;
    google.protobuf.Struct tags = 7;
    string domain_id = 8;
    string created_at = 11;
}

message ProvidersInfo {
    repeated ProviderInfo results = 1;
    int32 total_count = 2;
}

message ProviderStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}