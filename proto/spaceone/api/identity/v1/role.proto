syntax = "proto3";

package spaceone.api.identity.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Role {
    rpc create (CreateRoleRequest) returns (RoleInfo) {
        option (google.api.http) = {
            post: "/identity/v1/role/create"
            body: "*"
        };
    }
    rpc update (UpdateRoleRequest) returns (RoleInfo) {
        option (google.api.http) = {
            post: "/identity/v1/role/update"
            body: "*"
        };
    }
    rpc delete (RoleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/identity/v1/role/delete"
            body: "*"
        };
    }
    rpc get (GetRoleRequest) returns (RoleInfo) {
        option (google.api.http) = {
            post: "/identity/v1/role/get"
            body: "*"
        };
    }
    rpc list (RoleQuery) returns (RolesInfo) {
        option (google.api.http) = {
            post: "/identity/v1/role/list"
            body: "*"
        };
    }
    rpc stat (RoleStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/identity/v1/role/stat"
            body: "*"
        };
    }
}

enum RoleType {
    NONE = 0;
    SYSTEM = 1;
    DOMAIN = 2;
    PROJECT = 3;
}

message RolePolicy {
    enum PolicyType {
        NONE = 0;
        MANAGED = 1;
        CUSTOM = 2;
    }

    PolicyType policy_type = 1;
    string policy_id = 2;
}

message PagePermission {
    enum Permission {
        NONE = 0;
        VIEW = 1;
        MANAGE = 2;
    }

    string page = 1;
    Permission permission = 2;
}

message CreateRoleRequest {
    string name = 1;
    RoleType role_type = 2;
    repeated RolePolicy policies = 3;
    // +optional
    repeated PagePermission page_permissions = 4;
    // +optional
    google.protobuf.Struct tags = 5;
    string domain_id = 6;
}

message UpdateRoleRequest {
    string role_id = 1;
    // +optional
    string name = 2;
    // +optional
    repeated RolePolicy policies = 3;
    // +optional
    repeated PagePermission page_permissions = 4;
    // +optional
    google.protobuf.Struct tags = 5;
    // +optional
    bool release_page_permissions = 6;
    string domain_id = 7;
}

message RoleRequest {
    string role_id = 1;
    string domain_id = 2;
}

message GetRoleRequest {
    string role_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

message RoleInfo {
    string role_id = 1;
    string name = 2;
    RoleType role_type = 3;
    repeated RolePolicy policies = 4;
    repeated PagePermission page_permissions = 5;
    google.protobuf.Struct tags = 6;
    string domain_id = 11;
    string created_at = 21;
    string deleted_at = 22;
}

message RoleQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string role_id = 2;
    // +optional
    string name = 3;
    // +optional
    RoleType role_type = 5;
    // +optional
    string policy_id = 6;
    string domain_id = 7;

}

message RolesInfo {
    repeated RoleInfo results = 1;
    int32 total_count = 2;
}

message RoleStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}