syntax = "proto3";

package spaceone.api.identity.v2;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/identity/v2";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";


service Token {
  // +noauth
  rpc issue (IssueTokenRequest) returns (TokenInfo) {
    option (google.api.http) = {
      post: "/identity/v2/token/issue"
      body: "*"
    };
  }
  // +noauth
  rpc grant (GrantTokenRequest) returns (GrantTokenInfo) {
    option (google.api.http) = {
      post: "/identity/v2/token/grant"
      body: "*"
    };
  }
}

message IssueTokenRequest {
  enum AuthType {
    NONE = 0;
    LOCAL = 1;
    EXTERNAL = 2;
    MFA = 3;
  }

  google.protobuf.Struct credentials = 1;
  // LOCAL, EXTERNAL
  // +optional
  AuthType auth_type = 2;
  // +optional
  int32 timeout = 3;
  // if MFA is enabled, verify_code is required
  // +optional
  string verify_code = 4;
  string domain_id = 21;
}

message TokenInfo {
  string access_token = 1;
  string refresh_token = 2;
}

message GrantTokenRequest {
  enum GrantType {
    GRANT_TYPE_NONE = 0;
    REFRESH_TOKEN = 1;
    SYSTEM_TOKEN = 2;
  }

  enum Scope {
    SCOPE_NONE = 0;
    SYSTEM = 1;
    DOMAIN = 2;
    WORKSPACE = 3;
    PROJECT = 4;
    USER = 5;
  }

  GrantType grant_type = 1;
  string token = 2;
  Scope scope = 3;
  // +optional
  int32 timeout = 4;
  // +optional
  string workspace_id = 5;
  // +optional
  string domain_id = 6;
  // +optional
  repeated string permissions = 7;
}

message GrantTokenInfo {
  enum RoleType {
    ROLE_TYPE_NONE = 0;
    DOMAIN_ADMIN = 1;
    WORKSPACE_OWNER = 2;
    WORKSPACE_MEMBER = 3;
    USER = 4;
  }

  string access_token = 1;
  RoleType role_type = 2;
  string role_id = 3;
  string domain_id = 4;
  string workspace_id = 5;
}
