// Secret is a resource that stores and manages credentials.
// Secret is used to access data in other microservices.
syntax = "proto3";

package spaceone.api.secret.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/secret/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v2/query.proto";


service Secret {
    // Create a new secret.
    // Created secret is encrypted and stored securely.
    // It can be used to link to a trusted secret if you request it with 'trusted_secret_id' in the parameter.
    rpc create (CreateSecretRequest) returns (SecretInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret/create"
            body: "*"
        };
    }
    
    // Updates a specific secret's information.
    // You can only change the 'name' and 'tags', and to change the data you must use the update_data API.
    rpc update (UpdateSecretRequest) returns (SecretInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret/update"
            body: "*"
        };
    }
    
    // Deletes a specific secret.
    rpc delete (SecretRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/secret/v1/secret/delete"
            body: "*"
        };
    }
    
    // Updates a specific secret's data.
    // Updated secret is encrypted and stored securely.
    rpc update_data (UpdateSecretDataRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/secret/v1/secret/update-data"
            body: "*"
        };
    }
    
    // Get a specific secret's data.
    // This API is for internal system use only.
    rpc get_data (GetSecretDataRequest) returns (SecretDataInfo) {}
    
    // Get a specific secret's information.
    rpc get (SecretRequest) returns (SecretInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret/get"
            body: "*"
        };
    }
    
    // Queries a list of secrets.
    // You can use a query to get a filtered list of secrets.
    rpc list (SecretQuery) returns (SecretsInfo) {
        option (google.api.http) = {
            post: "/secret/v1/secret/list"
            body: "*"
        };
    }
    
    rpc stat (SecretStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/secret/v1/secret/stat"
            body: "*"
        };
    }
}

//{
//    "name": "Cloudforet AWS Dev",
//    "data": "********",
//    "schema_id": "aws_access_key",
//    "resource_group": "PROJECT",
//    "service_account_id": "sa-123456789012",
//    "project_id": "project-123456789012"
//}
message CreateSecretRequest {
    enum ResourceGroup {
        RESOURCE_GROUP_NONE = 0;
        DOMAIN = 1;
        WORKSPACE = 2;
        PROJECT = 3;
    }

    string name = 1;
    google.protobuf.Struct data = 2;
    // +optional
    string schema_id = 3;
    // +optional
    google.protobuf.Struct tags = 4;
    ResourceGroup resource_group = 20;
    // +optional
    string workspace_id = 21;
    // +optional
    string project_id = 22;
    // +optional
    string service_account_id = 23;
    // +optional
    string trusted_secret_id = 24;
}

//{
//    "secret_id": "secret-123456789012",
//    "name": "aws-dev2",
//    "tags": { "a": "b"},
//    "project_id": "project-123456789012"
//}
message UpdateSecretRequest {
    string secret_id = 1;
    // +optional
    string name = 2;
    // +optional
    google.protobuf.Struct tags = 3;
    // +optional
    string project_id = 21;
}

//{
//    "secret_id": "secret-123456789012"
//}
message SecretRequest {
    string secret_id = 1;
}

//{
//    "secret_id": "secret-123456789012",
//    "domain_id": "domain-12345abcde"
//}
message GetSecretDataRequest {
    string secret_id = 1;
    string domain_id = 21;
}

//{
//    "secret_id": "secret-123456789012",
//     "data": "********"
//}
message UpdateSecretDataRequest {
    string secret_id = 1;
    string schema_id = 2;
    google.protobuf.Struct data = 3;
}

//{
//    "query": {}
//}
message SecretQuery {
    // +optional
    spaceone.api.core.v2.Query query = 1;
    // +optional
    string secret_id = 2;
    /// +optional
    string name = 3;
    // +optional
    string schema_id = 4;
    // +optional
    string provider = 5;
    // +optional
    string workspace_id = 22;
    // +optional
    string project_id = 21;
    // +optional
    string service_account_id = 23;
    // +optional
    string trusted_secret_id = 24;
}

message SecretDataInfo {
    bool encrypted = 1;
    google.protobuf.Struct encrypt_options = 2;
    google.protobuf.Struct data = 3;
}

//{
//    "secret_id": "secret-123456789012",
//    "name": "aws-dev",
//    "tags": {},
//    "schema_id": "aws_access_key",
//    "provider": "aws",
//    "service_account_id": "sa-123456789012",
//    "resource_group": "PROJECT",
//    "project_id": "project-123456789012",
//    "workspace_id": "workspace-123456789012",
//    "domain_id": "domain-123456789012",
//    "created_at": "2022-01-01T06:10:14.851Z"
//}
message SecretInfo {

    enum ResourceGroup {
        RESOURCE_GROUP_NONE = 0;
        DOMAIN = 1;
        WORKSPACE = 2;
        PROJECT = 3;
    }

    string secret_id = 1;
    string name = 2;
    string schema_id = 3;
    string provider = 4;
    google.protobuf.Struct tags = 5;

    ResourceGroup resource_group = 20;
    string domain_id = 21;
    string workspace_id= 22;
    string project_id = 23;
    string service_account_id = 24;
    string trusted_secret_id = 25;

    string created_at = 31;
}

//{
//    "results": [
//        {
//           "secret_id": "secret-123456789012",
//           "name": "aws-dev",
//           "tags": {},
//           "schema": "aws_access_key",
//           "provider": "aws",
//           "service_account_id": "sa-123456789012",
//           "resource_group": "PROJECT",
//           "workspace_id": "workspace-123456789012",
//           "project_id": "project-123456789012",
//           "domain_id": "domain-123456789012",
//           "created_at": "2022-01-01T06:10:14.851Z"
//        },
//        {
//            "secret_id": "secret-987654321098",
//            "name": "plugin-credentials",
//            "tags": {},
//            "resource_group": "WORKSPACE",
//            "workspace_id": "workspace-123456789012",
//            "domain_id": "domain-123456789012",
//            "created_at": "2022-01-01T02:31:01.709Z"
//        }
//    ],
//    "total_count": 2
//}
message SecretsInfo {
    repeated SecretInfo results = 1;
    int32 total_count = 2;
}

message SecretStatQuery {
    spaceone.api.core.v2.StatisticsQuery query = 1;
    string domain_id = 2;
}